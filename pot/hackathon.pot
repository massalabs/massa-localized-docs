# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-05 11:19+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../hackathon.rst:3
#: 72f401a421f74741966107011071b7aa
msgid "Getting started"
msgstr ""

#: ../../hackathon.rst:5
#: 187cd54d53e14ef9a6a74bb7ba6b430f
msgid "Welcome to the main technical documentation for the Hackathon. You will find everything you need to develop this weekend."
msgstr ""

#: ../../hackathon.rst:9
#: bc47fc9a26b0436c8b72ca8b4269d3cb
msgid "Massa client"
msgstr ""

#: ../../hackathon.rst:11
#: 1dc50e179ebc455ab6ad86d8cc83a9e6
msgid "First of all you need to have a client to interact with the network. We recommend to use the pre-built binaries available `here <https://github.com/massalabs/massa/releases>`_."
msgstr ""

#: ../../hackathon.rst:15
#: e98540c560b740efb18a2c2ea0cc7f14
msgid "The zip contains two folders, one called `massa-node` and the other `massa-client`. For this hackathon you will only need the client. In the folder `massa-client` you will find an executable `massa-client` that will be your client for the whole Hackathon."
msgstr ""

#: ../../hackathon.rst:20
#: f15631c083364a638e174e6dcdf02b5e
msgid "In the `massa-client/config` folder, create a `config.toml` file with the following content:"
msgstr ""

#: ../../hackathon.rst:28
#: 91487fa2c0f947ec9d5a620502a41a8c
msgid "This will allow your client to connect to the remote node run by Massa team so that you don't have to run a node by yourself."
msgstr ""

#: ../../hackathon.rst:31
#: 41575386d6e446469cdc466e841dd81c
msgid "You can now run the client and generate a secret key using the following command in the client:"
msgstr ""

#: ../../hackathon.rst:38
#: 2e826a51322a4d8fbb57488cd5132585
msgid "Now that you have created a wallet you can check the address, public key, balance, etc... with this command:"
msgstr ""

#: ../../hackathon.rst:45
#: edc13374b4d04063a7ca9fb8136ed33e
msgid "To develop and send smart contracts to the Massa blockchain you will need some tokens. You can get some by sending your address to the faucet bot in the \"testnet-faucet\" channel of our `Discord <https://discord.com/invite/massa>`_, or if you don't have Discord make sure to tell us and we'll happily send you some."
msgstr ""

#: ../../hackathon.rst:50
#: 1bd6349837894c679d7eec9d4801a9eb
msgid "If you check your wallet again, you should see coins on your address. Now that you have an address with coins you can create and deploy your first smart contract."
msgstr ""

#: ../../hackathon.rst:55
#: dc74b5c9f05844dbbd70b5e203e37398
msgid "Smart contracts"
msgstr ""

#: ../../hackathon.rst:57
#: 6a375c5b7aed48b18089183b0a9ac7a2
msgid "Here you'll find all relevant links to resources for smart-contracts development."
msgstr ""

#: ../../hackathon.rst:60
#: da66fdb0d06f4a0ea91401d38460cf14
msgid "Setting up your working environment"
msgstr ""

#: ../../hackathon.rst:62
#: b6df3e41097e4dddb62ed8dda7082f7d
msgid "The :ref:`Getting started tutorial <sc-getting-started>` will get you through all the steps to set up your environment for smart-contract development, and show you how to execute a simple \"Hello world\" smart contract."
msgstr ""

#: ../../hackathon.rst:67
#: fb6e5283894f4f53bb0894a19bf38531
msgid "Write your first smart contract"
msgstr ""

#: ../../hackathon.rst:69
#: 7d2e24a9cc0b4172b662cce01773b651
msgid ":ref:`This example <sc-example-sum>` showcases a more involved example of a Massa smart contract."
msgstr ""

#: ../../hackathon.rst:73
#: 865debdb50714f18a516fedc7f8e696e
msgid "Testing your smart contract"
msgstr ""

#: ../../hackathon.rst:75
#: 06141df83c20447da91cff91aa772f6b
msgid "The `massa-sc-tester <https://github.com/massalabs/massa-sc-tester>`_ allows you to test your smart contracts locally."
msgstr ""

#: ../../hackathon.rst:79
#: 4af708b0aa084db0b4364788700a4cb5
msgid "Create your frontend"
msgstr ""

#: ../../hackathon.rst:81
#: d647f5c69c094207a95f23b3995e5b7d
msgid "To interact with smart contracts from your decentralized application we recommend to use our `massa-web3 <https://github.com/massalabs/massa-web3>`_ library."
msgstr ""

#: ../../hackathon.rst:84
#: 41a627940de840dd9abc1ff23618e01d
msgid "You'll find in the `create-react-app-massa <https://github.com/massalabs/create-react-app-massa>`_ repo a React template that is compatible with our massa-web3 library."
msgstr ""

#: ../../hackathon.rst:87
#: 85d4bab5cd2e4a5fbd1d2aca7bbbd4e0
msgid "You'll find several examples of frontends developed using the massa-web3 library or in pure JS in our `massa-sc-examples <https://github.com/massalabs/massa-sc-examples>`_ repository (blog, games)."
msgstr ""

#: ../../hackathon.rst:93
#: 3dff81615e964816b0f5a2d69ff62bf9
msgid "Other resources"
msgstr ""

#: ../../hackathon.rst:95
#: d7ecf491ee3d41dd8efe631d0678935c
msgid "`massa-sc-examples <https://github.com/massalabs/massa-sc-examples>`_ is a collection of examples of Massa smart contracts"
msgstr ""

#: ../../hackathon.rst:97
#: 2ce384b9fbdf42fbb48182e3355d4c62
msgid ":ref:`External resources <web3-external-resources>` is a collection of useful resources developed by external contributors."
msgstr ""

#: ../../hackathon.rst:100
#: a5974958cb5c4d13b9ea55b641067746
msgid "**You should be all set to start building on-top of Massa now. Good luck!**"
msgstr ""

#: ../../hackathon.rst:104
#: a43f4ead50774979a78be23d3c749fda
msgid "Thyra"
msgstr ""

#: ../../hackathon.rst:106
#: c8b3013d913e4cfe95cab4c643dab1f4
msgid "Thyra is a client developed by Massa that plays the role of a gateway to the Massa blockchain."
msgstr ""

#: ../../hackathon.rst:110
#: 8ff8b60d876e4ba2b5788dd29672490e
msgid "What is does and how to use it"
msgstr ""

#: ../../hackathon.rst:111
#: e9cdf1ec7ad3492790dad28b8e221761
msgid "To date, Thyra will enable you to store content, like a website, on the blockchain and assure its immutability as well as facilitate all the process."
msgstr ""

#: ../../hackathon.rst:113
#: d82261a3968f4d34b6f5eb2a93c12bdf
msgid "To start using it, follow the steps provided `here <https://docs.massa.net/en/latest/web3-dev/decentralized-web.html>`_."
msgstr ""

#: ../../hackathon.rst:117
#: 67ae7940983f4414a81d5590ec7807b5
msgid "Troubleshooting"
msgstr ""

#: ../../hackathon.rst:119
#: 13ea6ebcbbed4771ba8e3eeb63dce9a5
msgid "There are some limitations and workarounds that we have listed, have a look `here <https://github.com/massalabs/thyra/wiki/Hackathon-Nov-22---Troubleshooting>`_"
msgstr ""
