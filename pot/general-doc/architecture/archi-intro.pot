# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-29 10:50+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../general-doc/architecture/archi-intro.rst:5
#: 8e6f9f2b0e6c4c2e9dd77f74b9ef51c9
msgid "Introduction"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:7
#: dba6fb7b20444175a4804354c3279f82
msgid "We will describe in this document the global architecture of a Massa Node, from the ground up, and introduce relevant definitions and concepts."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:9
#: e7157673812b4fe6bd27c663c1c768a4
msgid "The goal of the Massa network is to build a consensus between **nodes** to gather and order **blocks** that contains ordered lists of **operations**. An operation ultimate purpose once executed is to act as transitions for the global network state, called the **ledger**."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:12
#: 0fd91ccf62484c689840bc44ae271027
msgid "Operations are produced by external clients and sent to the Massa network via a node. Some operations are containing code to be run as **smart contracts**, enabling complex programmatic modifications of the ledger. Nodes will gather all the pending operations and group them to produce blocks. Each block contains a finite set of operations, limited by the fact that each block has a limited amount of space available to store operations. Traditional blockchains will then typically link blocks one after the other (including a hash of the previous block in the block header), to materialize their temporal ordering. However, unlike traditional blockchains, Massa blocks are not simply chained one after the other, but organized into a more complex spatio-temporal structure, which allows for parallelization and increased performances."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:20
#: ef54ff71cf14424dbe39b6ce9d7a4d39
msgid "Instead of one chain, there are several threads (T=32) of chains running in parallel, with blocks equally spread on each thread over time, and stored inside **slots** that are spaced at fixed time intervals:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:25
#: e3ef589319104cad80772c6a1bce2ac8
msgid "The time between two slots located on the same thread is called a **period** and lasts 16s (conventionally called :math:`t_0`). Corresponding slots in threads are slightly shifted in time relative to one another, by one period divided by the number of threads, which is 16s/32 = 0.5s, so that a period contains exactly 32 slots equally spaced over the 32 threads. A **cycle** is defined as the succession of 128 periods and so lasts a bit more than 34min. Periods are numbered by increments of one, so can be used together with a thread number to uniquely identify a block slot. Period 0 is the genesis and contains genesis blocks with no parents."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:32
#: 31113941afb543679e9393d1b97fe384
msgid "The job of the Massa nodes network is to essentially collectively fill up slots with valid blocks. To do so, at each interval of 0.5s, a specific node in the network is elected to be allowed to create a block (more about the selection process below, and the proof of stake sybil resistance mechanism), and will be rewarded if it creates a valid block in time. It is also possible that a node misses its opportunity to create the block, in which case the slot will remain empty (this is called a **block miss**)."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:38
#: cce4487d0dbb4df7be9fdc9bbad5c6e3
msgid "In traditional blockchains, blocks are simply referencing their unique parent, forming a chain. In the case of Massa, each block is referencing one parent block in each thread (so, 32 parents). Here is an example illustrated with one particular block:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:44
#: 2b918f9ce73c4aaaa0855b791f31e989
msgid "Let's introduce some relevant definitions and concepts generally necessary to understand how the Massa network operates. We will then explain the node architecture and how the whole system works."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:48
#: 2dfa4eea3bcf4170a625f2811ec14050
msgid "Address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:50
#: ff003b20e13f4a8e9b4b547b8c422600
msgid "Each account in Massa has a public and private key associated with it. This is how messages can be signed and identity enforced."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:53
#: b788f7d1abcc43169b3c21cc0f17291c
msgid "The address of an account is simply the hash of its public key."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:56
#: 464b94a9bfcb4f8b96d7220470a6476f
msgid "Ledger"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:58
#: 03907a8a54b44781886fc75c92f67025
msgid "The ledger is a map that stores a global mapping between addresses and information related to these addresses. It is replicated in each node and the consensus building mechanism ensures that agreement on what operations have been finalized (and in what order) will be reached over the whole network. The ledger is the state of the Massa network, and fundamentally operations (see below) are requests to modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:62
#: 932a4b352fbe4815b61612dc9aad632f
msgid "The information stored in the ledger with each address is the following:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:65
#: 088eccb1f9fb4930a41111bd5b976be9
msgid "**Ledger information associated with each address**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: 5e99c8caeceb4d24afb47e6e0cde3c02
msgid "``balance``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: 960166b749e64b1189bf16411af4d91a
msgid "The amount of Massa coins owned by the address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: ../../general-doc/architecture/archi-intro.rst:148
#: 9d2edb05a7754df08f4d8c36a40aa316
#: f350358248894fb3931cf9876afc9612
msgid "``bytecode``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: 1910ee1fd09f498ea02c09b69ed0b489
msgid "When the address references a smart contract, this is the compiled code :raw-html:`<br/>` corresponding to the smart contract (typically contains several functions that act as :raw-html:`<br/>` API entry points for the smart contract)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: b0ff3a24d0fc435a8d5c961a6a00acc4
msgid "``datastore``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: 776265d7cd2a4fcb9f48a201e4d3c979
msgid "A key/value map that can store any persistent data related to a smart :raw-html:`<br/>` contract, its variables, etc"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:76
#: cbc0a3cb664c4c84900e5a475b57fb99
msgid "Smart Contract"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:78
#: 1d8407a7b10a4505bcbc947f89eb1027
msgid "Smart contracts are a piece of code that can be run inside the Massa virtual machine and which can modify the ledger, accept incoming requests through a public interface (via smart contract operations). One particularity of Massa smart contracts compared to other blockchain smart contracts is their ability to wake up by themselves independently of an exterior request on their interface. This allows more autonomy and less dependency on external centralized services."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:84
#: 98cd7ca5434f42ff987d0a753c2022f3
msgid "Smart contracts are currently written in assemblyscript, a stricter derivation from typescript, which is itself a type-safe version of javascript. AssemblyScript compiles to web assembly bytecode (wasm). Massa nodes Execution Module runs such bytecode. Smart contracts have access to their own datastore, so they can modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:89
#: 7467de71c5434c158f0b85e43bd5b011
msgid "Operation"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:91
#: 8b2b8c90c9d94d3dacc6021a4163b007
msgid "Fundamentally, the point of the Massa network is to gather, order and execute operations, recorded inside blocks that are located in slots. There are three types of operations: transactions, roll operations, and smart contract code execution. The general structure of an operation is the following, and the different types of operations differ by their payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:96
#: 1b0d36c02d294f85b7d5f53d49b09bc7
msgid "**Operation header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: ../../general-doc/architecture/archi-intro.rst:188
#: 344f60eb4a64467cb7cc80c49add0064
#: be6a65bdb69f47c09e0204e4b7e1cb4d
msgid "``creator_public_key``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: 08baa1084af44cb7af49bf36d76e1c38
msgid "The public key of the operation creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: a874054398a8440fa0b86c5cfa5455b3
msgid "``expiration_period``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: 1201f5b345e24a0b90818eb3d184e46a
msgid "Period after which the operation is expired (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: d71241ed9d914f3b8b0edc0f3a789f04
msgid "``fee``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: a1dc18c3b48c4124a1c6497adb633232
msgid "The amount of fees the creator is willing to pay (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: c3555fb139d24e56a2fdae701b69b346
msgid "``type``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: b339caee28eb446dbbd6eef9235ab18a
msgid "The type of operation (from 0 to 4: transaction, rollbuy, :raw-html:`<br/>` rollsell, executesc, callsc) (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: 27220050bbde4422a1fc868bc398bea6
msgid "``payload``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: d03ce5054f504891a9cb59311c698411
msgid "The content of the operation (see below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: ../../general-doc/architecture/archi-intro.rst:193
#: e56b2ff97f2b44e4ac001235e9e9ada6
#: 6c5d6269144742edbc44f95f580e5edf
msgid "``signature``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: 1cfa65ec69c4477da329b4442b5cf6d1
msgid "signature of all the above with the private key of :raw-html:`<br/>` the operation creator (64 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:109
#: c227bea5451d4264962e13daa351e1d1
msgid "Transactions operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:111
#: 2c751d0f05d3486b8d8aaf4be04e87d0
msgid "Transactions are operations that move native Massa coins between addresses. Here is the corresponding payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:114
#: 200af383d4b0477a9e593e13d391b0d6
msgid "**Transaction payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: 0da3dd43b6cf4353b7e561847201a819
msgid "``amount``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: 4b3429acaf53497dbbd96ee3f1aa7267
msgid "The amount of coins to transfer (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: cea145579db347bb9c6e83e81552d683
msgid "``destination_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: c1ac3dabf10f42adb9c2a386845b8ca3
msgid "The address of the recipient (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:121
#: 183a6983f769450189b86d611dde60f2
msgid "Buy/Sell Rolls operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:123
#: 8132ecc365f74bf3a87f310347b4b536
msgid "Rolls are staking tokens that participants can buy or sell with native coins (more about staking below). This is done via special operations, with a simple payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:127
#: 0867e277b04742e4a2f9a828f305af7c
msgid "**Roll buy/sell payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: 81be26b9d0ff4923bf9171870e4b6782
msgid "``nb_of_rolls``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: 636b1fb69da74f328cee6ec31e0ee784
msgid "The number of rolls to buy or to sell (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:134
#: 43e83065ed0d44c5948c75de6ea24c02
msgid "Smart Contract operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:136
#: 36b6812172234e31b9af18ae0bca8b46
msgid "Smart Contracts are pieces of code that can be run inside the Massa virtual machine. There are two ways of calling for the execution of code:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:138
#: 4d3fc9e3068a4b9dadf189310784d149
msgid "Direct execution of bytecode"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:140
#: c334bff9c0054506b2860ff0481a0bc3
msgid "In this case, the code is provided in the operation payload and executed directly:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:143
#: 147b4bf41552485c94fe791174e666c3
msgid "**Execute SC payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:162
#: b6164c63c65f4eaf9bb0db6c78e17ce5
#: 5ed96142bb0c4742b18ebc54dc9e9d0f
msgid "``max_gas``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:162
#: ef8986b9afd744d1b0e63a1e3e49fff7
#: f26980abecff4de1819ab45caf9e93c3
msgid "The maximum gas spendable for this operation (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: ../../general-doc/architecture/archi-intro.rst:163
#: e97b26f3cf6e4e199aca36485db25caf
#: 39a2aa869701491e979bcf4a6f0dbb43
msgid "``gas_price`` (soon deprecated)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: ../../general-doc/architecture/archi-intro.rst:163
#: a29f5a6dcaff4c46bb7f8b3f19bf9719
#: 538a0bc858d340f091a318e246788fd2
msgid "The gas price (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:147
#: f9b7e0e874124943a35bcacbe77c2114
msgid "``bytecode_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:147
#: abc64d4a15ec4f8ab2ed8bcf6bde37ae
msgid "The length of the bytecode field (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:148
#: 575e1328b3704bda9ad65b980d768de5
msgid "The bytecode to run (in the context of the caller address)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:149
#: 624252f9c2034aabbd1931d779fb9f70
msgid "``datastore_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:149
#: 995a5542eef34d69b628ad07c0e1144b
msgid "The number of the datastore keys (u64 varint), each record :raw-html:`<br/>` is stored then one after the other after"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:151
#: 571f20de440848eeb228083a8b321cef
msgid "list of datastore records"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:151
#: 778e206deb9b4fa68edc69a54e9b8f89
msgid "Concatenation of ``key_len`` (u8), ``key``, :raw-html:`<br/>` ``value_len`` (u64 varint), ``value``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:155
#: e7944de5244647558025472ede6fbc45
msgid "Smart Contract function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:157
#: 87ad76a06ef14a059844cfed5f6bf3d4
msgid "Here, the code is indirectly called via the call to an existing smart contract function, together with the required parameters:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:160
#: b72822b031744ff1b8e6261fab1c7bee
msgid "**Call SC**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: 1d649afb41574d13bcb637aa33a22a9a
msgid "``coins``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: 3b3e23c874c44ed2845acb572d5db44a
msgid "The coins transferred in the call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: c98ab60b6a684aa2a83945c7755ed933
msgid "``target_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: 8282e004d35e4bed8e9936ccc78d5cd5
msgid "The address of the targeted smart contract (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: 6426571da8484f548ded4fc5be82837e
msgid "``function_name_length``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: 7b1f109b740948749570f3098b21e69a
msgid "The length of the name of the function that is called (u8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: 2bf849c520a24c388fea1141947ae16a
msgid "``function_name``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: d482e376de304b86abde3dff42483651
msgid "The name of the function that is called (utf8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:168
#: f770e75922a14c3ba24068b3b6453ec1
msgid "``param_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:168
#: c5442ff465b147b1b16b9d371e5b7ed7
msgid "The number of parameters of the function call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:169
#: 9d2d7625895e43d49695f54c9d0ed694
msgid "``params``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:169
#: 9e48944dfb564c098a231a6bb3a184f3
msgid "The parameters of the function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:173
#: 599fe33fb30a4ebd8a5a84b941c17242
msgid "Block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:175
#: ec5731144d2f4628a814c07a8a27a393
msgid "A block is a data structure built by nodes and its function it to aggregate several operations. As explained above, for each new slot that becomes active, a particular node in the network is elected in a deterministic way with the task of creating the block that will be stored in that slot (more about this in the description of the Selector Module below). A block from a given thread can only contain operations originating from a `creator_public_key` whose hash's five first bits designate the corresponding thread, thus implicitly avoiding collisions in operations integrated into parallel threads."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:181
#: 11b499fac5ba4d1e9ede20a29046a1f9
msgid "The content of a block is as follows:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:184
#: dd9de9256f814ac593f391e3893b3dd1
msgid "**Block header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:186
#: 9fdd642c7d464dac8027e80b6a98cc2d
msgid "``slot``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:186
#: 9f17edee1ea3441eba9be35a4bf66e74
msgid "A description of the block slot, defined by a couple (period, thread) that :raw-html:`<br/>` uniquely identify it"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:188
#: 79a7405606bd4342bb2bde2cf7c7b747
msgid "The public key of the block creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: a432103a3e00412998796fb954faa5d8
msgid "``parents``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: ffb0e07d22ca493e8a4bb2b7dcd25b9e
msgid "A list of the 32 parents of the block, one parent per thread (parent blocks are :raw-html:`<br/>` identified by the block hash)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:191
#: 8445b3e1e9fc486db6aa219e8e16f338
msgid "``endorsements``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:191
#: 65cb843604f04209a108a20819cde94a
msgid "A list of the 16 endorsements for the block (more about endorsements below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:192
#: a6503f64926f4aebacadadc63729a104
msgid "``operations_hash``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:192
#: 9c619603391749c784219322db43f6d6
msgid "A hash of all the operations included in the block (=hash of the block body below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:193
#: 7a9ab98935b348018fe8a0785653815a
msgid "signature of all the above with the private key of the block creator"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:195
#: fdd97e6877694efe9c0a5e7becd241f2
msgid "**Block body**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:197
#: af8f79213a024485906baa92bdad3801
msgid "``operations``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:197
#: 5595c56b866f4e4e951fe069c4df23ef
msgid "The list of all operations included in the block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:200
#: f412b4eeac2c4b8ca331a0cb6fb5b669
msgid "Endorsements are optional inclusion in the block, but their inclusion is incentivized for block creators. They are validations of the fact that the parent block on the thread of the block is the best parent that could have been chosen, done by other nodes that have also been deterministically selected via the proof of stake probability distribution (see below). A comprehensive description of endorsements can be found `here <https://docs.massa.net/en/latest/general-doc/architecture/endorsements.html>`_, so we will not go further into details in the context of this introduction."
msgstr ""
