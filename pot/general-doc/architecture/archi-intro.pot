# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-20 00:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../general-doc/architecture/archi-intro.rst:5
#: 334a99e99b914db68a50967a328a0ff4
msgid "Introduction"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:7
#: 49a9c7fc1de640ce88dbff676021c2eb
msgid "We will describe in this document the global architecture of a Massa Node, from the ground up, and introduce relevant definitions and concepts."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:9
#: fc75646ab05b4286862d354be896e556
msgid "The goal of the Massa network is to build a consensus between **nodes** to gather and order **blocks** that contains ordered lists of **operations**. An operation ultimate purpose once executed is to act as transitions for the global network state, called the **ledger**."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:12
#: fc5322af37394c42acbe031d34462c83
msgid "Operations are produced by external clients and sent to the Massa network via a node. Some operations are containing code to be run as **smart contracts**, enabling complex programmatic modifications of the ledger. Nodes will gather all the pending operations and group them to produce blocks. Each block contains a finite set of operations, limited by the fact that each block has a limited amount of space available to store operations. Traditional blockchains will then typically link blocks one after the other (including a hash of the previous block in the block header), to materialize their temporal ordering. However, unlike traditional blockchains, Massa blocks are not simply chained one after the other, but organized into a more complex spatio-temporal structure, which allows for parallelization and increased performances."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:20
#: b4b4a11a3593475cad0ed5eb62d46420
msgid "Instead of one chain, there are several threads (T=32) of chains running in parallel, with blocks equally spread on each thread over time, and stored inside **slots** that are spaced at fixed time intervals:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:25
#: 4690363468754211b7555f696cbde20e
msgid "The time between two slots located on the same thread is called a **period** and lasts 16s (conventionally called :math:`t_0`). Corresponding slots in threads are slightly shifted in time relative to one another, by one period divided by the number of threads, which is 16s/32 = 0.5s, so that a period contains exactly 32 slots equally spaced over the 32 threads. A **cycle** is defined as the succession of 128 periods and so lasts a bit more than 34min. Periods are numbered by increments of one, so can be used together with a thread number to uniquely identify a block slot. Period 0 is the genesis and contains genesis blocks with no parents."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:32
#: dc51d27f87c4469184c9077bea514a4b
msgid "The job of the Massa nodes network is to essentially collectively fill up slots with valid blocks. To do so, at each interval of 0.5s, a specific node in the network is elected to be allowed to create a block (more about the selection process below, and the proof of stake sybil resistance mechanism), and will be rewarded if it creates a valid block in time. It is also possible that a node misses its opportunity to create the block, in which case the slot will remain empty (this is called a **block miss**)."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:38
#: 1c91832c6d9c49aa9c1928a227239f35
msgid "In traditional blockchains, blocks are simply referencing their unique parent, forming a chain. In the case of Massa, each block is referencing one parent block in each thread (so, 32 parents). Here is an example illustrated with one particular block:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:44
#: ab149d225b0c42e9b21135851fe35fd0
msgid "Let's introduce some relevant definitions and concepts generally necessary to understand how the Massa network operates. We will then explain the node architecture and how the whole system works."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:48
#: fb4fd63e52624493b1120a0049fbc522
msgid "Address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:50
#: 7695c81aa2d847bb8bdc92c9af59ea4d
msgid "Each account in Massa has a public and private key associated with it. This is how messages can be signed and identity enforced."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:53
#: 3a4fded3220f486f8a014ab09d1fc4d5
msgid "The address of an account is simply the hash of its public key."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:56
#: 90ccc85423534c44bb507e84687f906e
msgid "Ledger"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:58
#: 224ff20907df4ec2bfe6fed1f8ec5aa7
msgid "The ledger is a map that stores a global mapping between addresses and information related to these addresses. It is replicated in each node and the consensus building mechanism ensures that agreement on what operations have been finalized (and in what order) will be reached over the whole network. The ledger is the state of the Massa network, and fundamentally operations (see below) are requests to modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:62
#: 0f38ab82599a402584e659dd2849c000
msgid "The information stored in the ledger with each address is the following:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:65
#: 7d9e26c4002f4bedb95b52b6f402b370
msgid "**Ledger information associated with each address**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: dc76d639f59347c3bd84f19c18fbbe97
msgid "``balance``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: a1452a6baa74450fa3f8563efb485d7c
msgid "The amount of Massa coins owned by the address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: ../../general-doc/architecture/archi-intro.rst:147
#: 056e343de1874025b1af34e4c04d46ac
#: bb02ea658f82413ca4b842abd5fbd3ad
msgid "``bytecode``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: 4d1c6c52391a45c1b547558a26cf529c
msgid "When the address references a smart contract, this is the compiled code :raw-html:`<br/>` corresponding to the smart contract (typically contains several functions that act as :raw-html:`<br/>` API entry points for the smart contract)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: 5c96cb763ca4414587bc39204ddb5f48
msgid "``datastore``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: e7eb3ca30e68400c992f5ef3f6b7f337
msgid "A key/value map that can store any persistent data related to a smart :raw-html:`<br/>` contract, its variables, etc"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:76
#: 457aa42f31a54806a081f7d845851be2
msgid "Smart Contract"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:78
#: 7dde022fc7444dfa86f98ab98abee2bd
msgid "Smart contracts are a piece of code that can be run inside the Massa virtual machine and which can modify the ledger, accept incoming requests through a public interface (via smart contract operations). One particularity of Massa smart contracts compared to other blockchain smart contracts is their ability to wake up by themselves independently of an exterior request on their interface. This allows more autonomy and less dependency on external centralized services."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:84
#: 7d1158411873408594333dacd7378a30
msgid "Smart contracts are currently written in assemblyscript, a stricter derivation from typescript, which is itself a type-safe version of javascript. AssemblyScript compiles to web assembly bytecode (wasm). Massa nodes Execution Module runs such bytecode. Smart contracts have access to their own datastore, so they can modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:89
#: 019591fe82204ec0a4c63a8c9c8e957c
msgid "Operation"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:91
#: 1a3c173e37504342ad3461b7c85f19b6
msgid "Fundamentally, the point of the Massa network is to gather, order and execute operations, recorded inside blocks that are located in slots. There are three types of operations: transactions, roll operations, and smart contract code execution. The general structure of an operation is the following, and the different types of operations differ by their payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:96
#: e6733d1af1c34702ab325985e503c7a0
msgid "**Operation header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: ../../general-doc/architecture/archi-intro.rst:186
#: a631bdbf186d495e804d6f8184f035ea
#: c1a6a271e58742f0a7ffbf4b7dac7ea0
msgid "``creator_public_key``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: 3b7308133c884211928488ba66d6a3b1
msgid "The public key of the operation creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: 0a86eff0ee6a458882078050eb232973
msgid "``expiration_period``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: 60349d25692e4e898a7af0a4d9c30b61
msgid "Period after which the operation is expired (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: 455a4cbfeea74162b46890365e038cc9
msgid "``fee``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: 0872805e3d7547dc8edfe884498575f2
msgid "The amount of fees the creator is willing to pay (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: 6d6982419c9e43c697ffb15c5313d206
msgid "``type``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: 30ba7f8745a64bddbefa98138dc3c6da
msgid "The type of operation (from 0 to 4: transaction, rollbuy, :raw-html:`<br/>` rollsell, executesc, callsc) (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: 61632f94052841998ecd61923acd75f9
msgid "``payload``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: c02bf4bbf2e34331aabe159ed322828a
msgid "The content of the operation (see below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: ../../general-doc/architecture/archi-intro.rst:191
#: 732689926f49490ab803385be52dea74
#: fab18a249dfb492fb21948959bc59b87
msgid "``signature``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: 1a63f1b0c1ea4d198e490855006fb7e0
msgid "signature of all the above with the private key of :raw-html:`<br/>` the operation creator (64 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:109
#: 24e126ba36b64d95ad9e76ddacaec4d2
msgid "Transactions operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:111
#: ba3e545c69bf46068b1df7b18104f91a
msgid "Transactions are operations that move native Massa coins between addresses. Here is the corresponding payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:114
#: e28203292e6c4d62a2fb42b3bbf26ec0
msgid "**Transaction payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: 0b8df60f45ae4b08bc4675b611ea05aa
msgid "``amount``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: e8e459ff21e443acb82d5fca07453488
msgid "The amount of coins to transfer (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: 390036a777ad44fe81c4927601f7a1f9
msgid "``destination_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: 557331562a3b4ccbb8c57b02d116c939
msgid "The address of the recipient (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:121
#: 67f798544ac9410e81c77ddce71bb7db
msgid "Buy/Sell Rolls operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:123
#: 47ae74f97eb34d01bb4ae1aadda3fa82
msgid "Rolls are staking tokens that participants can buy or sell with native coins (more about staking below). This is done via special operations, with a simple payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:127
#: aa4cbe6710bc4ec0a024e29a0d766bb0
msgid "**Roll buy/sell payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: 300af99bfb09450199ceb7af1d13b27f
msgid "``nb_of_rolls``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: 362530ddc7894520bfb19ebb55e9ab22
msgid "The number of rolls to buy or to sell (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:134
#: 798f85163e274cf1ac05b678458342db
msgid "Smart Contract operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:136
#: 5ae1b614f3624c3fb89d7383daddc7f1
msgid "Smart Contracts are pieces of code that can be run inside the Massa virtual machine. There are two ways of calling for the execution of code:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:138
#: 245da6fad250452aa097e770824324cb
msgid "Direct execution of bytecode"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:140
#: 4796071c7712461984ed65cec0a43ab2
msgid "In this case, the code is provided in the operation payload and executed directly:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:143
#: e035f48cfdfb4ae483782f617a097527
msgid "**Execute SC payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:161
#: 6887c72c5c2c48e1ab866bafac3c939c
#: 9b1e048b2c9a48d6bf5bdd0a93d7c1bc
msgid "``max_gas``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:161
#: 9a92b5fd608c4573b2d752bd622767ca
#: 39cb6b267d6d438d813f79510371037d
msgid "The maximum gas spendable for this operation (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: a4bf1e0e2e7c463d8f74091c55b774cf
msgid "``bytecode_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: b8b9c210e943400cb9e4c82c102e02f0
msgid "The length of the bytecode field (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:147
#: d2317b0a3a97475c9bf502784baa7d93
msgid "The bytecode to run (in the context of the caller address)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:148
#: 2bb5b4d47b7a4d46b194e01e7427fc0f
msgid "``datastore_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:148
#: 469bbef01c3d40189b3aada0759650f0
msgid "The number of the datastore keys (u64 varint), each record :raw-html:`<br/>` is stored then one after the other after"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:150
#: 2e6452c5a4d244639b58f582ec1b4f9f
msgid "list of datastore records"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:150
#: 864b2273b17e4abcbdfac39d0a6e4dae
msgid "Concatenation of ``key_len`` (u8), ``key``, :raw-html:`<br/>` ``value_len`` (u64 varint), ``value``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:154
#: 567f52b18bdc44579741336bff297fbf
msgid "Smart Contract function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:156
#: 1f1c80c2bdbc4d32afe59dcb07c59942
msgid "Here, the code is indirectly called via the call to an existing smart contract function, together with the required parameters:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:159
#: 77d1c53dbc2f45fcb4b18eba8c3030bc
msgid "**Call SC**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:162
#: 98d3d2d6794a4ca88c461aa1d64807d8
msgid "``coins``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:162
#: 2ecaf16571b94a0cb081615859609825
msgid "The coins transferred in the call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:163
#: 16ffd3db81ad472bad3e6924f2b2da70
msgid "``target_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:163
#: b2bcf2dab8ac4289aa7ee372f9828243
msgid "The address of the targeted smart contract (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: a7114ae89c6e415ab2ac954754730ead
msgid "``function_name_length``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: faa606221a124b45bb29d5dd7335858b
msgid "The length of the name of the function that is called (u8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: 03f701c3fb904f3d9770ef6e9998f4df
msgid "``function_name``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: cdd73db3042b402ebd1e3acac304601a
msgid "The name of the function that is called (utf8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: 856f6cbf2bc94c7ab82560e83b49c8dd
msgid "``param_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: 211781539a044b119508d650c3312521
msgid "The number of parameters of the function call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: 370547a6184b4bc982710b5d8b240ca2
msgid "``params``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: 5b2718d3cffa4e6abd9c142e30ab080a
msgid "The parameters of the function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:171
#: d3e4d72fdf6c49cf9083241346864efe
msgid "Block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:173
#: b1bf2a55d2e74207b324eae10640800e
msgid "A block is a data structure built by nodes and its function it to aggregate several operations. As explained above, for each new slot that becomes active, a particular node in the network is elected in a deterministic way with the task of creating the block that will be stored in that slot (more about this in the description of the Selector Module below). A block from a given thread can only contain operations originating from a `creator_public_key` whose hash's five first bits designate the corresponding thread, thus implicitly avoiding collisions in operations integrated into parallel threads."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:179
#: 76e42e98550c4581b2f87bf568c3dd29
msgid "The content of a block is as follows:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:182
#: ea810dda85eb4f96b0643937c93a4dc8
msgid "**Block header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:184
#: 7d23d3c1a63e4c2e9e0a17984953e806
msgid "``slot``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:184
#: 737717bf2f394d08946d893ab532443e
msgid "A description of the block slot, defined by a couple (period, thread) that :raw-html:`<br/>` uniquely identify it"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:186
#: c21d7db6e7ce42b394ad66251d1ad227
msgid "The public key of the block creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:187
#: a66e160ca7dd4420a220e8ca73a85e3d
msgid "``parents``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:187
#: cda864b56dcf475e8acf4578b5f4a697
msgid "A list of the 32 parents of the block, one parent per thread (parent blocks are :raw-html:`<br/>` identified by the block hash)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: f1c257308aab4120b9c82ed37d20ecf5
msgid "``endorsements``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: cff1dbedcdce48d6ba58c140531643d2
msgid "A list of the 16 endorsements for the block (more about endorsements below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:190
#: f2e74dedf0ed4c55a3cc356ac518743c
msgid "``operations_hash``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:190
#: 5f371b8402ff4eed92f1315375d2b95a
msgid "A hash of all the operations included in the block (=hash of the block body below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:191
#: 544225f4b4ef4d94a2a702909a0ad213
msgid "signature of all the above with the private key of the block creator"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:193
#: 3fa32fda1197448287df4413b9baddb9
msgid "**Block body**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:195
#: cdb3003b7a1744bba7b8b204036027d4
msgid "``operations``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:195
#: 4f80d26d3b29410bb42b95c59511e2ec
msgid "The list of all operations included in the block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:198
#: b1e6208a4c7643caa1c5c1f7912f6836
msgid "Endorsements are optional inclusion in the block, but their inclusion is incentivized for block creators. They are validations of the fact that the parent block on the thread of the block is the best parent that could have been chosen, done by other nodes that have also been deterministically selected via the proof of stake probability distribution (see below). A comprehensive description of endorsements can be found `here <https://docs.massa.net/en/latest/general-doc/architecture/endorsements.html>`_, so we will not go further into details in the context of this introduction."
msgstr ""
