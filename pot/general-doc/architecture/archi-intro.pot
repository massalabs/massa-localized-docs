# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-30 11:37+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../general-doc/architecture/archi-intro.rst:5
#: 1f03d0e2e24e4cedbfc8ec46bcf182e2
msgid "Introduction"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:7
#: 06535e8801ad47778847994d8a334ab8
msgid "We will describe in this document the global architecture of a Massa Node, from the ground up, and introduce relevant definitions and concepts."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:9
#: 823171d3d7d1410ca79843223eea0398
msgid "The goal of the Massa network is to build a consensus between **nodes** to gather and order **blocks** that contains ordered lists of **operations**. An operation ultimate purpose once executed is to act as transitions for the global network state, called the **ledger**."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:12
#: 0b50a723a7e2402d9bf176349b838da0
msgid "Operations are produced by external clients and sent to the Massa network via a node. Some operations are containing code to be run as **smart contracts**, enabling complex programmatic modifications of the ledger. Nodes will gather all the pending operations and group them to produce blocks. Each block contains a finite set of operations, limited by the fact that each block has a limited amount of space available to store operations. Traditional blockchains will then typically link blocks one after the other (including a hash of the previous block in the block header), to materialize their temporal ordering. However, unlike traditional blockchains, Massa blocks are not simply chained one after the other, but organized into a more complex spatio-temporal structure, which allows for parallelization and increased performances."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:20
#: 63717c004a68488194a09a16a7032053
msgid "Instead of one chain, there are several threads (T=32) of chains running in parallel, with blocks equally spread on each thread over time, and stored inside **slots** that are spaced at fixed time intervals:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:25
#: b2e6b760b4c742b68753aec82c19cfd5
msgid "The time between two slots located on the same thread is called a **period** and lasts 16s (conventionally called :math:`t_0`). Corresponding slots in threads are slightly shifted in time relative to one another, by one period divided by the number of threads, which is 16s/32 = 0.5s, so that a period contains exactly 32 slots equally spaced over the 32 threads. A **cycle** is defined as the succession of 128 periods and so lasts a bit more than 34min. Periods are numbered by increments of one, so can be used together with a thread number to uniquely identify a block slot. Period 0 is the genesis and contains genesis blocks with no parents."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:32
#: 3f5d3682a97d4a60950107993860e244
msgid "The job of the Massa nodes network is to essentially collectively fill up slots with valid blocks. To do so, at each interval of 0.5s, a specific node in the network is elected to be allowed to create a block (more about the selection process below, and the proof of stake sybil resistance mechanism), and will be rewarded if it creates a valid block in time. It is also possible that a node misses its opportunity to create the block, in which case the slot will remain empty (this is called a **block miss**)."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:38
#: 18e3c7272b38413fa9cb09d0699e719d
msgid "In traditional blockchains, blocks are simply referencing their unique parent, forming a chain. In the case of Massa, each block is referencing one parent block in each thread (so, 32 parents). Here is an example illustrated with one particular block:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:44
#: 5a57133acb2944779e12943301a2824f
msgid "Let's introduce some relevant definitions and concepts generally necessary to understand how the Massa network operates. We will then explain the node architecture and how the whole system works."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:48
#: 547251eea1fd4b1ba6262626ecba6e4d
msgid "Address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:50
#: 3a550a229bb74971a480b71b44e180d4
msgid "Each account in Massa has a public and private key associated with it. This is how messages can be signed and identity enforced."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:53
#: a72f5b8ccbb24e11ac60f4d4f6855fa2
msgid "The address of an account is simply the hash of its public key."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:56
#: af22e097ec3241d1bb3e094a412eec51
msgid "Ledger"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:58
#: 62e46701a00f4beeb1e3ff701c04134a
msgid "The ledger is a map that stores a global mapping between addresses and information related to these addresses. It is replicated in each node and the consensus building mechanism ensures that agreement on what operations have been finalized (and in what order) will be reached over the whole network. The ledger is the state of the Massa network, and fundamentally operations (see below) are requests to modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:62
#: edaecb33787c44f08300075a8e82ab22
msgid "The information stored in the ledger with each address is the following:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:65
#: 2d118991c4ca44c9ab25e1694060a05b
msgid "**Ledger information associated with each address**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: 435899519abc4997984481eb11b9f946
msgid "``balance``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: 49095d5e32434b668025791027024d6d
msgid "The amount of Massa coins owned by the address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: ../../general-doc/architecture/archi-intro.rst:148
#: 6e79f908999742b1bd1e9de4113b34c9
#: 2be4fec740d147328c5977e0142b259f
msgid "``bytecode``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: 5d1b3240e0824a55827ada1c6831cea2
msgid "When the address references a smart contract, this is the compiled code :raw-html:`<br/>` corresponding to the smart contract (typically contains several functions that act as :raw-html:`<br/>` API entry points for the smart contract)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: ecb191dd8fe144769de76e419ab0a9c3
msgid "``datastore``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: 24a693b885a840b3bd6967d3e1950aee
msgid "A key/value map that can store any persistent data related to a smart :raw-html:`<br/>` contract, its variables, etc"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:76
#: f57496aa3c364c65a396aa9475e5e687
msgid "Smart Contract"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:78
#: 432357b6e1b14fbba9536f778334ac72
msgid "Smart contracts are a piece of code that can be run inside the Massa virtual machine and which can modify the ledger, accept incoming requests through a public interface (via smart contract operations). One particularity of Massa smart contracts compared to other blockchain smart contracts is their ability to wake up by themselves independently of an exterior request on their interface. This allows more autonomy and less dependency on external centralized services."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:84
#: 63c8bfacb2384078923eec2e2ac2bda6
msgid "Smart contracts are currently written in assemblyscript, a stricter derivation from typescript, which is itself a type-safe version of javascript. AssemblyScript compiles to web assembly bytecode (wasm). Massa nodes Execution Module runs such bytecode. Smart contracts have access to their own datastore, so they can modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:89
#: 544497dc80244c809e1a92a310e9865d
msgid "Operation"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:91
#: e39336ef20c44fd7a4d72dc185a2a07d
msgid "Fundamentally, the point of the Massa network is to gather, order and execute operations, recorded inside blocks that are located in slots. There are three types of operations: transactions, roll operations, and smart contract code execution. The general structure of an operation is the following, and the different types of operations differ by their payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:96
#: 24867b21705e4773be7867519ae897b9
msgid "**Operation header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: ../../general-doc/architecture/archi-intro.rst:188
#: dbb2ffcc3d9f4120afe61f99c7791f0b
#: 572b43b46c1e4f0da371dc4a8f41a6ed
msgid "``creator_public_key``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: 4ef363af1fcd4e00a9e81cc86db08004
msgid "The public key of the operation creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: 49c495cb0c8f4139824934005dc2a586
msgid "``expiration_period``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: e497d9aadef64c409678b74af188f577
msgid "Period after which the operation is expired (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: 7756fb53b4604023a87ce88d77d0f33a
msgid "``fee``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: 533f32182478438e91e098e6ddd89a42
msgid "The amount of fees the creator is willing to pay (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: d9c1996a7b1e407e8ae7da5576412d26
msgid "``type``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: f60b11a9b294446d9e1392b60a0dd86a
msgid "The type of operation (from 0 to 4: transaction, rollbuy, :raw-html:`<br/>` rollsell, executesc, callsc) (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: 87b1a05f1f094272b8b9423063cb4628
msgid "``payload``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: 8c068f8baaea48fdbccc0075d37f1422
msgid "The content of the operation (see below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: ../../general-doc/architecture/archi-intro.rst:193
#: a881d34781e04f6ab76906f1ef457a8d
#: 3a6fedc51832455c8696740fa6ac0f2b
msgid "``signature``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: 53e034a8277042c0a5b4970a8976816f
msgid "signature of all the above with the private key of :raw-html:`<br/>` the operation creator (64 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:109
#: c19129781ace48dea87588f4fbe7b71e
msgid "Transactions operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:111
#: 96aeecd08b4e43f1a86085faafd4857c
msgid "Transactions are operations that move native Massa coins between addresses. Here is the corresponding payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:114
#: 46183230669e47208e95f1c6a8da5872
msgid "**Transaction payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: 2ef6888b128f4f1e8a6fcf229564fb1d
msgid "``amount``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: b8457dd771184ebfb44ab85d9ec68bcc
msgid "The amount of coins to transfer (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: c23fe3abd9254992828f55907ccb1866
msgid "``destination_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: c036af8ab1d14081a577a5c2d55c00f6
msgid "The address of the recipient (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:121
#: b8df58e7f40d4a1296ff521e40ea29a4
msgid "Buy/Sell Rolls operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:123
#: 0327c7dc3a5446709862df704043e9c7
msgid "Rolls are staking tokens that participants can buy or sell with native coins (more about staking below). This is done via special operations, with a simple payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:127
#: cf440bd9eec749f5bcfd4f25b7557e11
msgid "**Roll buy/sell payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: 97cd628eb83d4fdcaaf6fdd980a6f44c
msgid "``nb_of_rolls``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: 2e4889aff6ac44ca8b2db0e9ab92374d
msgid "The number of rolls to buy or to sell (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:134
#: 5d0da17041a24605a6b2cbd64d2c14b3
msgid "Smart Contract operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:136
#: fb358cedab64414796be748b34043c7d
msgid "Smart Contracts are pieces of code that can be run inside the Massa virtual machine. There are two ways of calling for the execution of code:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:138
#: d6c41fd24cf6440b9dd93dc9e19a4863
msgid "Direct execution of bytecode"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:140
#: d1e7f012c2b745a18c950cb48ac7838d
msgid "In this case, the code is provided in the operation payload and executed directly:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:143
#: 86be9487e2d24d45b17491172a4ae974
msgid "**Execute SC payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:162
#: ff12094cdc8643c3a14199059ff5f6a9
#: 21f9e7bde3754f83af15f5040e2f8cdd
msgid "``max_gas``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:162
#: d551c42ac3bc417db1f7f2ed8bc10148
#: 3eaca5a2ccc0497eb717123cf9a7bd18
msgid "The maximum gas spendable for this operation (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: ../../general-doc/architecture/archi-intro.rst:163
#: d0302c51254f421f897f68b1f0e5ac18
#: ad80ae9a658543d59babc35f7ddff769
msgid "``gas_price`` (soon deprecated)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: ../../general-doc/architecture/archi-intro.rst:163
#: 30443dba02c542f6be378a8d41876024
#: 286974ff86764fb28753654a667fa921
msgid "The gas price (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:147
#: 2fa6b8b09bca4326b9d886d9c07bdb03
msgid "``bytecode_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:147
#: 12c8290122cf43c3a00b5fd20943fd25
msgid "The length of the bytecode field (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:148
#: e5bd68b4baf1459ba502289c85e4aa1c
msgid "The bytecode to run (in the context of the caller address)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:149
#: 88986428da29409eaa82f39cb3d33e10
msgid "``datastore_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:149
#: 71a02701640a48cca926b8a75801c157
msgid "The number of the datastore keys (u64 varint), each record :raw-html:`<br/>` is stored then one after the other after"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:151
#: 72c3cf186e1942a3887eaac27eee626d
msgid "list of datastore records"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:151
#: 2119ca1ac6ad40c79050df7fb5511d22
msgid "Concatenation of ``key_len`` (u8), ``key``, :raw-html:`<br/>` ``value_len`` (u64 varint), ``value``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:155
#: b4eefc58048d400dba5c774397c13f02
msgid "Smart Contract function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:157
#: 66b4f37190b544cea97eb1dd0a34e686
msgid "Here, the code is indirectly called via the call to an existing smart contract function, together with the required parameters:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:160
#: f67b345cf72d4bd88a9bb81880819591
msgid "**Call SC**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: 222bf2eb08d6428dbd06760f062de085
msgid "``coins``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: 5b50689b48cb49f0924a32835965b594
msgid "The coins transferred in the call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: 30a7f93313a44b35845c563398bb5e2c
msgid "``target_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: 03dc9950a07449108900e7380dce5e43
msgid "The address of the targeted smart contract (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: 0801833ba1204320b984089c0c846a69
msgid "``function_name_length``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: 89426e8db23c4d3d971f2235c7c438d4
msgid "The length of the name of the function that is called (u8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: e1aea8bfd39845b6bd1483dd1bcd6934
msgid "``function_name``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: 40ac7c453d794d40800d167b6d00e0da
msgid "The name of the function that is called (utf8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:168
#: 71fa263b335644908474dd18f3a0b500
msgid "``param_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:168
#: 879bf7aa148b4b429a5712c98ffcbb46
msgid "The number of parameters of the function call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:169
#: 1bd8c3b84cd143bb886ed2f23763dd79
msgid "``params``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:169
#: 3320e7f872194adb9fe2dccdaa754c81
msgid "The parameters of the function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:173
#: 64f0d71c523d408b9afa81d361325077
msgid "Block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:175
#: 29e657be95c042ac9d473ccb2d28cc22
msgid "A block is a data structure built by nodes and its function it to aggregate several operations. As explained above, for each new slot that becomes active, a particular node in the network is elected in a deterministic way with the task of creating the block that will be stored in that slot (more about this in the description of the Selector Module below). A block from a given thread can only contain operations originating from a `creator_public_key` whose hash's five first bits designate the corresponding thread, thus implicitly avoiding collisions in operations integrated into parallel threads."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:181
#: a82690ee22384ea7adaaba4f756e3821
msgid "The content of a block is as follows:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:184
#: a67ac3b1b3594d4c9bdb964a0ec29a09
msgid "**Block header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:186
#: 58fc99e7309744cebbd602a345061191
msgid "``slot``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:186
#: 4f5988f3f42345478d17dc2ed8d5b710
msgid "A description of the block slot, defined by a couple (period, thread) that :raw-html:`<br/>` uniquely identify it"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:188
#: 4c4087b757fd41f39d5d281172c4fe48
msgid "The public key of the block creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: 1d49d2fef29c4b619426bc6edd5297b6
msgid "``parents``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: 49140e55a26e4347965c0114ae19acee
msgid "A list of the 32 parents of the block, one parent per thread (parent blocks are :raw-html:`<br/>` identified by the block hash)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:191
#: 5bedb62237f74cfca6a57c7b8556d2ca
msgid "``endorsements``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:191
#: ff30d0385365409097fcf6eb29c80ef7
msgid "A list of the 16 endorsements for the block (more about endorsements below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:192
#: 0819d575b18c44dc810d2953d8749aff
msgid "``operations_hash``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:192
#: 32e83192a8c14ef38d41d2ebe139ea7f
msgid "A hash of all the operations included in the block (=hash of the block body below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:193
#: 477bb97d18e44a4d9421f7d5be9c765d
msgid "signature of all the above with the private key of the block creator"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:195
#: 524081e655fa43cf8701667c1e82262b
msgid "**Block body**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:197
#: 58b6f786c99046ea8d04acb7be5306e1
msgid "``operations``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:197
#: bd934c8eede542cc891253f92918d6c1
msgid "The list of all operations included in the block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:200
#: ee0b14f07ece4f7eb75901d05b732057
msgid "Endorsements are optional inclusion in the block, but their inclusion is incentivized for block creators. They are validations of the fact that the parent block on the thread of the block is the best parent that could have been chosen, done by other nodes that have also been deterministically selected via the proof of stake probability distribution (see below). A comprehensive description of endorsements can be found `here <https://docs.massa.net/en/latest/general-doc/architecture/endorsements.html>`_, so we will not go further into details in the context of this introduction."
msgstr ""
