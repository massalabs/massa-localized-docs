# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-11 00:46+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../general-doc/architecture/archi-intro.rst:5
#: 1f698d99a53f492dbb66570e6150de91
msgid "Introduction"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:7
#: aebed000b35244ca8a02674c55d20bad
msgid "We will describe in this document the global architecture of a Massa Node, from the ground up, and introduce relevant definitions and concepts."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:9
#: 922749b39c1145cd8e97a40151d3885a
msgid "The goal of the Massa network is to build a consensus between **nodes** to gather and order **blocks** that contain ordered lists of **operations**. An operation ultimate purpose once executed is to act as transitions for the global network state, called the **ledger**."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:12
#: 696d9b0332ac4238bf0e90ddaa614031
msgid "Operations are produced by external clients and sent to the Massa network via a node. Some operations are containing code to be run as **smart contracts**, enabling complex programmatic modifications of the ledger. Nodes will gather all the pending operations and group them to produce blocks. Each block contains a finite set of operations, limited by the fact that each block has a limited amount of space available to store operations. Traditional blockchains will then typically link blocks one after the other (including a hash of the previous block in the block header), to materialize their temporal ordering. However, unlike traditional blockchains, Massa blocks are not simply chained one after the other, but organized into a more complex spatio-temporal structure, which allows for parallelization and increased performances."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:20
#: 40d8f41a972542518fb83473d4443bc9
msgid "Instead of one chain, there are several threads (T=32) of chains running in parallel, with blocks equally spread on each thread over time, and stored inside **slots** that are spaced at fixed time intervals:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:25
#: 14a4173c18a542bd824a2565af0e43d6
msgid "The time between two slots located on the same thread is called a **period** and lasts 16s (conventionally called :math:`t_0`). Corresponding slots in threads are slightly shifted in time relative to one another, by one period divided by the number of threads, which is 16s/32 = 0.5s, so that a period contains exactly 32 slots equally spaced over the 32 threads. A **cycle** is defined as the succession of 128 periods and so lasts a bit more than 34min. Periods are numbered by increments of one, so can be used together with a thread number to uniquely identify a block slot. Period 0 is the genesis and contains genesis blocks with no parents."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:32
#: 16423c06dfec41d1ace45561ac14303b
msgid "The job of the Massa nodes network is to essentially collectively fill up slots with valid blocks. To do so, at each interval of 0.5s, a specific node in the network is elected to be allowed to create a block (more about the selection process below, and the proof of stake sybil resistance mechanism), and will be rewarded if it creates a valid block in time. It is also possible that a node misses its opportunity to create the block, in which case the slot will remain empty (this is called a **block miss**)."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:38
#: 02f4ea8d5ea24af1b5e03f2589f19a0c
msgid "In traditional blockchains, blocks are simply referencing their unique parent, forming a chain. In the case of Massa, each block is referencing one parent block in each thread (so, 32 parents). Here is an example illustrated with one particular block:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:44
#: d854805dbfd84697b6ed749d768fdf30
msgid "Let's introduce some relevant definitions and concepts generally necessary to understand how the Massa network operates. We will then explain the node architecture and how the whole system works."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:48
#: a46c9469cffb4483896abb4262eea1c0
msgid "Address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:50
#: e55e91b28f894e108e34beb0a3b1301d
msgid "Each account in Massa has a public and private key associated with it. This is how messages can be signed and identity enforced."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:53
#: c89cf5261d1a460ab8be6c2a0f4a23a1
msgid "The address of an account is simply the hash of its public key."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:56
#: f02f14cdc83c40c0ac641d22fcb62141
msgid "Ledger"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:58
#: 91d23d651a194c2399800f7a49647ec8
msgid "The ledger is a map that stores a global mapping between addresses and information related to these addresses. It is replicated in each node and the consensus building mechanism ensures that agreement on what operations have been finalized (and in what order) will be reached over the whole network. The ledger is the state of the Massa network, and fundamentally operations (see below) are requests to modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:62
#: 74554935020a4a758b1a9d74367f87aa
msgid "The information stored in the ledger with each address is the following:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:65
#: f196dafdbe37406e9bdafe6735c8ab84
msgid "**Ledger information associated with each address**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: d7dc0cf9c9a042ac87413a5dd2c6d1f1
msgid "``balance``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: 0d4a570c5baa458e842e870ac419199e
msgid "The amount of Massa coins owned by the address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: ../../general-doc/architecture/archi-intro.rst:147
#: e314c49f3dc544d08c5fa21a0ea49f82
#: 84d76d12b7074dd1b07750a0e8123630
msgid "``bytecode``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: e6c9ab9aefe54e838217eba2c47b7c60
msgid "When the address references a smart contract, this is the compiled code :raw-html:`<br/>` corresponding to the smart contract (typically contains several functions that act as :raw-html:`<br/>` API entry points for the smart contract)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: 6e2b16752f434ce481b06e037ff59c54
msgid "``datastore``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: 17c76b4aa5bb479187a8b66bfdd9bfac
msgid "A key/value map that can store any persistent data related to a smart :raw-html:`<br/>` contract, its variables, etc"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:76
#: 9126c50fa594458dbc99c14b4fda755f
msgid "Smart Contract"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:78
#: cadb2fc414db4c1a89758b175916cc1a
msgid "Smart contracts are a piece of code that can be run inside the Massa virtual machine and which can modify the ledger, accept incoming requests through a public interface (via smart contract operations). One particularity of Massa smart contracts compared to other blockchain smart contracts is their ability to wake up by themselves independently of an exterior request on their interface. This allows more autonomy and less dependency on external centralized services."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:84
#: 800f4be788e740889909e2653868f226
msgid "Smart contracts are currently written in assemblyscript, a stricter derivation from typescript, which is itself a type-safe version of javascript. AssemblyScript compiles to web assembly bytecode (wasm). Massa nodes Execution Module runs such bytecode. Smart contracts have access to their own datastore, so they can modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:89
#: 42b2fc2565f842e4bfe304dd617b2a2a
msgid "Operation"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:91
#: 44079c2f57214b97958030ad382a1d57
msgid "Fundamentally, the point of the Massa network is to gather, order and execute operations, recorded inside blocks that are located in slots. There are three types of operations: transactions, roll operations, and smart contract code execution. The general structure of an operation is the following, and the different types of operations differ by their payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:96
#: 95fc4ad481d34e248404a42b2bbf275a
msgid "**Operation header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: ../../general-doc/architecture/archi-intro.rst:186
#: 0be537527be04594a9eb2206b5ac21e2
#: af5a0aa891244d3bb8755ed0441a680c
msgid "``creator_public_key``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: a39a445fffc347ce8b27fc7383fa6371
msgid "The public key of the operation creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: bdbeee9360ee46e289c4a8e1a99cb6e8
msgid "``expiration_period``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: 3e6327ceb6804686b3c32b264aabd0d6
msgid "Period after which the operation is expired (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: d7ab56bca1904e758534708eda17f400
msgid "``fee``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: dafe5bada1d24f2e978f936175caa7c2
msgid "The amount of fees the creator is willing to pay (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: 57fabc67d7364a0aa12bc553626f6d5f
msgid "``type``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: 7aabb749896b4360834e193b4648724e
msgid "The type of operation (from 0 to 4: transaction, rollbuy, :raw-html:`<br/>` rollsell, executesc, callsc) (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: c622df25421e400fa9f683ad4dea1379
msgid "``payload``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: 6c1c41ad914541bf9f53fa050281da30
msgid "The content of the operation (see below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: ../../general-doc/architecture/archi-intro.rst:191
#: e6782540b2574487b9a6890ec94d19b4
#: b1035def97e241d2b2ad6f3a676dd031
msgid "``signature``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: 761b8d62454e40c8bc1e8c1921598bcb
msgid "signature of all the above with the private key of :raw-html:`<br/>` the operation creator (64 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:109
#: 6a3e2b8ae7d240c4afd0a27cb2179ea0
msgid "Transactions operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:111
#: c16b79fda23544fb95739953cc23d174
msgid "Transactions are operations that move native Massa coins between addresses. Here is the corresponding payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:114
#: 9ea6ed66d27c418eaf097fe1fa268ada
msgid "**Transaction payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: 493dd96cb9e840549480e81a4ebe435e
msgid "``amount``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: 073b756f09c8427c92eee95e249ce37f
msgid "The amount of coins to transfer (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: 285300957ae04233b2439cce8b1e81c4
msgid "``destination_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: bbbbf00204ac4ac9b8b0e78904cef341
msgid "The address of the recipient (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:121
#: 9970d041a799403b88943668b4492ea9
msgid "Buy/Sell Rolls operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:123
#: d21df078abcc41aabfacaa43ad336e06
msgid "Rolls are staking tokens that participants can buy or sell with native coins (more about staking below). This is done via special operations, with a simple payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:127
#: c91e5727fa3142ff9b62d6ba48e1a133
msgid "**Roll buy/sell payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: 62d75d1e8cf741258e2f289bc0d7db90
msgid "``nb_of_rolls``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: cf40dcc32d9c4fb081ac29c2772dc875
msgid "The number of rolls to buy or to sell (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:134
#: 9c10be4efbfa49818907de80328f4005
msgid "Smart Contract operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:136
#: e02b079f7e404deeb7b97dfada728afd
msgid "Smart Contracts are pieces of code that can be run inside the Massa virtual machine. There are two ways of calling for the execution of code:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:138
#: 08abae1c952c4311b369ea6386b06f46
msgid "Direct execution of bytecode"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:140
#: 04a376e7349d4a6ea590e9cb7e6c9c62
msgid "In this case, the code is provided in the operation payload and executed directly:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:143
#: 199236c4cca046b3bb5faeb116c07510
msgid "**Execute SC payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:161
#: 2062288a83334420afe6148936c1991c
#: 27f1567a23bd48bf9249f324e0023bac
msgid "``max_gas``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:161
#: 03389076cbc44683ac9c5a68ccb3e21e
#: 4cc89af1b5694edeb67160568cce3b86
msgid "The maximum gas spendable for this operation (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: 4fe15e614c6a486284fd57717ba52e73
msgid "``bytecode_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: f141ce500b4a4667b44e69603bc8ff85
msgid "The length of the bytecode field (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:147
#: 5f54d4deac704f4da5c78758d7cb7de8
msgid "The bytecode to run (in the context of the caller address)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:148
#: ab5d3f8cb636483cb00e3a0e4c4728ef
msgid "``datastore_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:148
#: 9910af9879e04d609089b962600d372f
msgid "The number of the datastore keys (u64 varint), each record :raw-html:`<br/>` is stored then one after the other after"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:150
#: 8cacae82ce714b3b827eef53557879c8
msgid "list of datastore records"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:150
#: 114b2b5790ac4afa8d7ddfd506786b92
msgid "Concatenation of ``key_len`` (u8), ``key``, :raw-html:`<br/>` ``value_len`` (u64 varint), ``value``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:154
#: b17e39d8a212406f8053b2324ebe0293
msgid "Smart Contract function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:156
#: 57516262a61f44a28bee2a6a35ef9c47
msgid "Here, the code is indirectly called via the call to an existing smart contract function, together with the required parameters:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:159
#: 439f228f6499452789c5a14f0848e3f6
msgid "**Call SC**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:162
#: ac3a0b775dba4ac491f5de02d1e1560f
msgid "``coins``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:162
#: d550d2b541ba45cb887d5f8cc7e7bb8b
msgid "The coins transferred in the call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:163
#: b009e615132945a09e90adb4244a2d02
msgid "``target_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:163
#: 719fa0d2150b43c494f9d7ceedc4906a
msgid "The address of the targeted smart contract (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: 60d744b049514761b4d65953f6f4253b
msgid "``function_name_length``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: e5a0d6393cc049aca3486b1af4f11d97
msgid "The length of the name of the function that is called (u8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: 9fd914c46c694db2ae961230db80f5f6
msgid "``function_name``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: 85c26749df7142f78bfffef854cb79eb
msgid "The name of the function that is called (utf8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: 688daa5e626b4acb81b6006b887bb705
msgid "``param_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: 46fbd5a5d2c242b2aff09eb0c9dbe232
msgid "The number of parameters of the function call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: 82e4ad08bc1f48ea8b1ee78873c368b4
msgid "``params``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: bf9c5f6643cf4108aa012b0bf7542888
msgid "The parameters of the function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:171
#: 81eeb081813d422098b5be39d58d1897
msgid "Block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:173
#: 4d8f6ed18d834a48926a41b11ed56b10
msgid "A block is a data structure built by nodes and its function it to aggregate several operations. As explained above, for each new slot that becomes active, a particular node in the network is elected in a deterministic way with the task of creating the block that will be stored in that slot (more about this in the description of the Selector Module below). A block from a given thread can only contain operations originating from a `creator_public_key` whose hash's five first bits designate the corresponding thread, thus implicitly avoiding collisions in operations integrated into parallel threads."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:179
#: f82f68e68b45498d89d620ff2da9631d
msgid "The content of a block is as follows:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:182
#: 582a798bd438421487029bc5fb87f06a
msgid "**Block header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:184
#: 6f425346ac8b4112b737bf960aa75cf7
msgid "``slot``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:184
#: 7e7832753e5e4ab0911f61a3395c0346
msgid "A description of the block slot, defined by a couple (period, thread) that :raw-html:`<br/>` uniquely identify it"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:186
#: 18958718d5594a988f703218155a5b28
msgid "The public key of the block creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:187
#: 35d19e59eea9450b9db3fa63b8ed5ea4
msgid "``parents``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:187
#: 31f19272389c4030abf5456a4d91f0aa
msgid "A list of the 32 parents of the block, one parent per thread (parent blocks are :raw-html:`<br/>` identified by the block hash)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: 862c4d68c1364b9b960d8342ae500caa
msgid "``endorsements``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: dd238cf0c85a4811970f8d71987ebe54
msgid "A list of the 16 endorsements for the block (more about endorsements below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:190
#: ef5493075eef41c0a91461cd48049969
msgid "``operations_hash``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:190
#: 842a7f4f6b8146b68151a67c1c04103f
msgid "A hash of all the operations included in the block (=hash of the block body below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:191
#: 2af8f555fdda4f3c81d853aad3a946dc
msgid "signature of all the above with the private key of the block creator"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:193
#: f853876acc2f4203b9a542305657b6fc
msgid "**Block body**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:195
#: 3f60113bf7a6466f9d81459e177721c7
msgid "``operations``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:195
#: 319377f69f3343e4880e160730d512b5
msgid "The list of all operations included in the block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:198
#: 60ff2a7ab7374792a4a4ad6b64e5c945
msgid "Endorsements are optional inclusion in the block, but their inclusion is incentivized for block creators. They are validations of the fact that the parent block on the thread of the block is the best parent that could have been chosen, done by other nodes that have also been deterministically selected via the proof of stake probability distribution (see below). A comprehensive description of endorsements can be found `here <https://docs.massa.net/en/latest/general-doc/architecture/endorsements.html>`_, so we will not go further into details in the context of this introduction."
msgstr ""
