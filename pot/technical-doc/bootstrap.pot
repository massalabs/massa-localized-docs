# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-04 00:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../technical-doc/bootstrap.rst:2
#: 2cd33958a4a2480b805a8981281d296b
msgid "Bootstrapping in Massa"
msgstr ""

#: ../../technical-doc/bootstrap.rst:5
#: c6bcd55986ed4e97ae63c385f29f5fea
msgid "Introduction"
msgstr ""

#: ../../technical-doc/bootstrap.rst:7
#: 77fbb9b1d8e24f8da5a64883ab079894
msgid "Nodes that are already part of the network are able to follow the State by observing the blocks passing through the network, verifying them, and applying the state changes they cause."
msgstr ""

#: ../../technical-doc/bootstrap.rst:10
#: d1405fb71507412b860f291c909166a1
msgid "However, new nodes joining the network need to get an absolute \"current\" version of the state, which is called \"bootstrapping\". In some blockchains like Bitcoin, full nodes joining the network are recommended to download all blocks from the beginning (genesis) of the blockchain in order to re-verify the whole state change history."
msgstr ""

#: ../../technical-doc/bootstrap.rst:18
#: 110badcb576c48748edca7d63de13d1a
msgid "However, Massa has a triple decentralization/security/performance goal:"
msgstr ""

#: ../../technical-doc/bootstrap.rst:15
#: 149344f295d145c4b9f0cc831bdb9590
msgid "maximal decentralization requires that node hardware requirements stay consistent with a typical consumer desktop computer to lower the entry barrier of becoming a node runner"
msgstr ""

#: ../../technical-doc/bootstrap.rst:17
#: 27b389b9e7084d4e9db346d28c293479
msgid "maximal security requires that all nodes verify all blocks and operations"
msgstr ""

#: ../../technical-doc/bootstrap.rst:18
#: ec50600bca3e472d972e44db8dbe909b
msgid "maximal performance requires using the node hardware to its fullest (CPU, network, memory, storage)"
msgstr ""

#: ../../technical-doc/bootstrap.rst:20
#: 728fba914b0845faba55e9268fa8c725
msgid "This means that the State in Massa evolves almost as fast as typical consumer desktop computers can run blocks, which implies that catching up blocks since genesis goes only slightly faster than new blocks appear in the meantime, and would take a very long time. Moreover, Massa aims at processing thousands of operations per second, which means that it produces a lot of block data every second, thus preventing nodes with the target hardware from storing the full block history and making bootstrapping from genesis impossible since old blocks are forgotten."
msgstr ""

#: ../../technical-doc/bootstrap.rst:26
#: d35068190a474d1f8bda3810a2f69d2f
msgid "Massa nodes joining the network must therefore bootstrap by downloading the absolute current State."
msgstr ""

#: ../../technical-doc/bootstrap.rst:28
#: a6572fb9008b4710b1a67302f84ddf8a
msgid "Note that nodes can recover from short-term disconnects by asking for missing data from nodes around them once they come back in the network. However, since Massa nodes only store a short history of blocks and forget older ones, it is impossible to recover from long disconnects since the surrounding nodes have forgotten the blocks needed by the recovering node. In that case, a new State bootstrap is required."
msgstr ""

#: ../../technical-doc/bootstrap.rst:34
#: 71eee8abc44e4e329aab7a328b64bd7e
msgid "Security model"
msgstr ""

#: ../../technical-doc/bootstrap.rst:37
#: cfc4c4bd6a564a1c8210412010d85197
msgid "The example of Bitcoin"
msgstr ""

#: ../../technical-doc/bootstrap.rst:39
#: b33c8690e3de460bbf86fd9d69d9fa35
msgid "To understand the security model of node bootstrap, Bitcoin is a good starting example."
msgstr ""

#: ../../technical-doc/bootstrap.rst:41
#: 265a714d97184deea8dacfa62a8c55b5
msgid "When Bitcoin node runners decide to join the network, they first download the node software from a central source (eg. bitcoin.org). If that source is compromised, the node might end up on a different network, and/or private key theft might happen. Bitcoin therefore requires trust in the entity sourcing the node software."
msgstr ""

#: ../../technical-doc/bootstrap.rst:45
#: 505a04bfc9a74f41bd75cda10f9a530f
msgid "Note that optionally, if the nodes don't wish to download the full block history they resort to trusting a more recent \"checkpoint\" state encoded in the node software. If that state is compromised, the node's knowledge of the whole ledger might be skewed."
msgstr ""

#: ../../technical-doc/bootstrap.rst:49
#: 9254acde7c04421e9101421712a3e3b4
msgid "Assuming the node software is not corrupted, new nodes joining the network need an initial list of peer nodes to which they need to connect first in order to discover the network. This list is hardcoded in the node software (see `the bitcoin docs <https://developer.bitcoin.org/devguide/p2p_network.html#peer-discovery>`_). If all peers pointed by this initial list are compromised, the node can end on a different (non-bitcoin) network, even if the node software itself is not compromised. Bitcoin therefore also requires trust in at least one of the initial peers."
msgstr ""

#: ../../technical-doc/bootstrap.rst:55
#: 8ea673aa2334489c874fc3ad8cd2beb6
msgid "Note that ending up on the wrong network can be detected by checking block hashes with an external source. But this requires trusting yet another source of data."
msgstr ""

#: ../../technical-doc/bootstrap.rst:59
#: 6130e616de284b14b4fd25e3ae97ea79
msgid "The case of Massa"
msgstr ""

#: ../../technical-doc/bootstrap.rst:61
#: c3ad2a6d490f4d5497d67ef88e65849f
msgid "The Massa case is very similar to Bitcoin's. Node runners also need to trust the source of the node software they download, as well as the initial list of peers."
msgstr ""

#: ../../technical-doc/bootstrap.rst:64
#: 7f79882265a74223802ed4044aadcfa0
msgid "Similarly to Bitcoin checkpoints, bootstrapping Massa nodes must obtain the current State from a trusted source, ideally the same source as the one they downloaded the node software from, in order to avoid having to trust multiple entities."
msgstr ""

#: ../../technical-doc/bootstrap.rst:67
#: 861fcf294e3f49118bc48b52abcd9411
msgid "Downloading the state from an untrusted source can result in major issues such as coin theft. As such, bootstrapping from untrusted sources should be discouraged, and bootstrapping other nodes should be opt-in for node runners to avoid \"bootstrap lists\" circulating as the default way of bootstrapping from unaware node runners."
msgstr ""

#: ../../technical-doc/bootstrap.rst:72
#: c4bafafe264f49eea16baddf635df63c
msgid "Implementation details"
msgstr ""

#: ../../technical-doc/bootstrap.rst:75
#: 098f17f3594e4788842b5499319bb1cb
msgid "Procedure from the point of view of the node being bootstrapped"
msgstr ""

#: ../../technical-doc/bootstrap.rst:77
#: db85fe256db34f2cbe8f90514a3ff96b
msgid "Massa nodes that bootstrap start by connecting to a randomly chosen node among the ones listed in `massa-node/base_config/config.toml` (section `Bootstrap/bootstrap_list`)."
msgstr ""

#: ../../technical-doc/bootstrap.rst:80
#: d439c0a7561b4eacbf22e28895a48adb
msgid "The bootstrap process uses a separate port and protocol than the normal Massa peer communication."
msgstr ""

#: ../../technical-doc/bootstrap.rst:82
#: 99e57ff2406a45688c8e176884c4865d
msgid "All communications with the chosen bootstrap node are authenticated using the public key (node ID) of the bootstrap node (in the `config.toml` file, section `Bootstrap/bootstrap_list`) to prevent man-in-the-middle attacks."
msgstr ""

#: ../../technical-doc/bootstrap.rst:85
#: 67ffad635dce48fca4c104d280d7de9d
msgid "The node being bootstrapped then attempts to download the current State, as well as an initial list of peers from the bootstrap node."
msgstr ""

#: ../../technical-doc/bootstrap.rst:88
#: 0d4545ff3f1540ea9d4841c543ecddb4
msgid "Once successfully bootstrapped, the node can then connect to peers, discover the rest of the network, and process live incoming blocks to keep its state up to date."
msgstr ""

#: ../../technical-doc/bootstrap.rst:91
#: d0d93a1acf284cd18814aa04fb626c32
msgid "In Massa, the hash of the state is used as part of the proof-of-stake seed, which is a safety mechanism against malicious bootstrap nodes sending a compromised State. It ensures that nodes with an altered State eventually end up isolated from the real network because their proof-of-stake draws differ which causes them to discard incoming honest blocks. Note however that a PoS seed mismatch can take up to 2 cycles to be detected."
msgstr ""

#: ../../technical-doc/bootstrap.rst:96
#: ceb5441aa7eb4a79a7e79c76950cc611
msgid "In case of bootstrap failure, the bootstrapping node retries with another randomly chosen bootstrap node after a delay."
msgstr ""

#: ../../technical-doc/bootstrap.rst:99
#: 683042dc998a4a6b8e14e3eefd37338b
msgid "Procedure from the point of view of the bootstrap node"
msgstr ""

#: ../../technical-doc/bootstrap.rst:101
#: e49182c0e9014187909dfe515b6f0af5
msgid "Massa nodes can bootstrap other nodes, with certain limitations because the procedure is heavy for the bootstrap node."
msgstr ""

#: ../../technical-doc/bootstrap.rst:103
#: 7f30c9391d634a8bb0d3d8c290ad639d
msgid "The bootstrap system listens on the address/port defined in `massa-node/base_config/config.toml` (section `bootstrap/bind`). The node's bootstrap server can be disabled by removing the `bind` entry from the config file."
msgstr ""

#: ../../technical-doc/bootstrap.rst:106
#: 9ca36a11c0004510ad2f906b4a8c907c
msgid "The Massa State is large (~1 terabyte in the worst case), and takes time to upload to bootstrapping nodes. During that time, new changes to the state continue to appear, so new changes affecting already-uploaded parts need to be sent on-the-fly."
msgstr ""

#: ../../technical-doc/bootstrap.rst:110
#: 01247ee213e64f1a9b6383eff1709ba0
msgid "By default, Massa nodes only allow a whitelist of IP addresses to bootstrap from them. This list is present in the `massa-node/base_config/bootstrap_whitelist.json` file. This list is intended to prevent flooding attacks by attackers pretending to be bootstrapping, and also makes it more difficult for node runners to bootstrap from untrusted sources. If you wish to disable whitelisting and allow anyone to bootstrap from your node, simply delete the `bootstrap_whitelist.json` file and restart your node."
msgstr ""

#: ../../technical-doc/bootstrap.rst:116
#: 631753522e1e44afa0fe2f3927f327ea
msgid "A complementary `bootstrap_blacklist.json` (absent by default) can also be created alongside `bootstrap_whitelist.json` (and following the same syntax) in order to explicitly prevent certain IP addresses from bootstrapping from the node."
msgstr ""

#: ../../technical-doc/bootstrap.rst:119
#: bf980e651de945f1b3c9a1bc1047f0fe
msgid "Once a node has accepted to bootstrap an incoming node, it adds the incoming node's IP address to a local cache preventing that IP from bootstrapping again for a time defined in `massa-node/base_config/config.toml` (section `bootstrap/per_ip_min_interval`) by refusing subsequent connections from that IP during the config-defined delay. The exclusion delay is not extended if the remote IP attempts new connections during the exclusion delay. The exclusion delay is however applied if the bootstrap was accepted but failed for any reason. This aims at limiting the load on individual bootstrap nodes, and spreading the load among bootstrap nodes."
msgstr ""

#: ../../technical-doc/bootstrap.rst:126
#: 282fa06f49a64ab8ba26d2afb5860054
msgid "The number of nodes simultaneously bootstrapping from the local node is limited (`massa-node/base_config/config.toml` section `bootstrap/max_simultaneous_bootstraps`). Excess attempts are refused but do not trigger the exclusion delay mechanism."
msgstr ""

#: ../../technical-doc/bootstrap.rst:131
#: bacf18d86763482a9f371dfeb9963346
msgid "Future optimizations"
msgstr ""

#: ../../technical-doc/bootstrap.rst:133
#: 465bd132ff00410cb05d90e72b7fdd74
msgid "We plan to add the possibility to download bootstrap data from untrusted sources for load-balancing, but then check the hash of the obtained state from trusted sources, and only fallback to downloading everything from trusted sources if multiple bootstrap attempts from this hybrid approach fail."
msgstr ""
