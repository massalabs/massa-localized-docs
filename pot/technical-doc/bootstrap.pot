# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-26 00:50+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../technical-doc/bootstrap.rst:3
#: 45e73b8142a5406eb45ad06d7495aec9
msgid "Bootstrapping in Massa"
msgstr ""

#: ../../technical-doc/bootstrap.rst:6
#: b2b5a02caf0840d8b4b57dcd897febdc
msgid "Introduction"
msgstr ""

#: ../../technical-doc/bootstrap.rst:8
#: 4ce8b7335d9545c8aaba88e5db4eb1dc
msgid "Nodes that are already part of the network are able to follow the State by observing the blocks passing through the network, verifying them, and applying the state changes they cause."
msgstr ""

#: ../../technical-doc/bootstrap.rst:11
#: e25ba7d4505b4f8bbdde8ef2494ff480
msgid "However, new nodes joining the network need to get an absolute \"current\" version of the state, which is called \"bootstrapping\". In some blockchains like Bitcoin, full nodes joining the network are recommended to download all blocks from the beginning (genesis) of the blockchain in order to re-verify the whole state change history."
msgstr ""

#: ../../technical-doc/bootstrap.rst:18
#: 280d9c9120e84fb8b2c1de0128fd9343
msgid "However, Massa has a triple decentralization/security/performance goal:"
msgstr ""

#: ../../technical-doc/bootstrap.rst:16
#: 1382a15cba604ee9b774e6905b4b2a65
msgid "maximal decentralization requires that node hardware requirements stay consistent with a typical consumer desktop computer to lower the entry barrier of becoming a node runner"
msgstr ""

#: ../../technical-doc/bootstrap.rst:17
#: 189cd5a0e3e64d278fa499e3d3e65620
msgid "maximal security requires that all nodes verify all blocks and operations"
msgstr ""

#: ../../technical-doc/bootstrap.rst:18
#: 92059999cb1a4f4aa0cfbb6e4480655f
msgid "maximal performance requires using the node hardware to its fullest (CPU, network, memory, storage)"
msgstr ""

#: ../../technical-doc/bootstrap.rst:20
#: 5e5e958302414800a10a5ffbdb4065bb
msgid "This means that the State in Massa evolves almost as fast as typical consumer desktop computers can run blocks, which implies that catching up blocks since genesis goes only slightly faster than new blocks appear in the meantime, and would take a very long time. Moreover, Massa aims at processing thousands of operations per second, which means that it produces a lot of block data every second, thus preventing nodes with the target hardware from storing the full block history and making bootstrapping from genesis impossible since old blocks are forgotten."
msgstr ""

#: ../../technical-doc/bootstrap.rst:28
#: 82df1815fe6a4f9190a89f2bc03692b0
msgid "Massa nodes joining the network must therefore bootstrap by downloading the absolute current State."
msgstr ""

#: ../../technical-doc/bootstrap.rst:30
#: 47021855f1414a5dbb3136e277e898ef
msgid "Note that nodes can recover from short-term disconnects by asking for missing data from nodes around them once they come back in the network. However, since Massa nodes only store a short history of blocks and forget older ones, it is impossible to recover from long disconnects since the surrounding nodes have forgotten the blocks needed by the recovering node. In that case, a new State bootstrap is required."
msgstr ""

#: ../../technical-doc/bootstrap.rst:36
#: 869bae72894149c3a51acb87b5c0fcd7
msgid "Security model"
msgstr ""

#: ../../technical-doc/bootstrap.rst:39
#: 7beaa98d62404b0f9d414065d5fbd6db
msgid "The example of Bitcoin"
msgstr ""

#: ../../technical-doc/bootstrap.rst:41
#: 8839d5c52fc64b568a8e8e270ef435e2
msgid "To understand the security model of node bootstrap, Bitcoin is a good starting example."
msgstr ""

#: ../../technical-doc/bootstrap.rst:43
#: a974f392b3e5480298facf77879fe07b
msgid "When Bitcoin node runners decide to join the network, they first download the node software from a central source (eg. bitcoin.org). If that source is compromised, the node might end up on a different network, and/or private key theft might happen. Bitcoin therefore requires trust in the entity sourcing the node software."
msgstr ""

#: ../../technical-doc/bootstrap.rst:47
#: e7d3b37bab8f4d889ddc7a77f9ab7308
msgid "Note that optionally, if the nodes don't wish to download the full block history they resort to trusting a more recent \"checkpoint\" state encoded in the node software. If that state is compromised, the node's knowledge of the whole ledger might be skewed."
msgstr ""

#: ../../technical-doc/bootstrap.rst:51
#: 30703b5f4fbf486296be14ab7a97aa6f
msgid "Assuming the node software is not corrupted, new nodes joining the network need an initial list of peer nodes to which they need to connect first in order to discover the network. This list is hardcoded in the node software (see `the bitcoin docs <https://developer.bitcoin.org/devguide/p2p_network.html#peer-discovery>`_). If all peers pointed by this initial list are compromised, the node can end on a different (non-bitcoin) network, even if the node software itself is not compromised. Bitcoin therefore also requires trust in at least one of the initial peers."
msgstr ""

#: ../../technical-doc/bootstrap.rst:58
#: 7d8d25704f0a424a8bae334f77a799de
msgid "Note that ending up on the wrong network can be detected by checking block hashes with an external source. But this requires trusting yet another source of data."
msgstr ""

#: ../../technical-doc/bootstrap.rst:62
#: 7063279660994a1eaac19ccba37ed688
msgid "The case of Massa"
msgstr ""

#: ../../technical-doc/bootstrap.rst:64
#: 1af5447da963473a93684e4ea94ced22
msgid "The Massa case is very similar to Bitcoin's. Node runners also need to trust the source of the node software they download, as well as the initial list of peers."
msgstr ""

#: ../../technical-doc/bootstrap.rst:68
#: b23221351ff946a0b0e93f46c36de06e
msgid "Similarly to Bitcoin checkpoints, bootstrapping Massa nodes must obtain the current State from a trusted source, ideally the same source as the one they downloaded the node software from, in order to avoid having to trust multiple entities."
msgstr ""

#: ../../technical-doc/bootstrap.rst:71
#: 58d7f76ae709492a839da11550a559bb
msgid "Downloading the state from an untrusted source can result in major issues such as coin theft. As such, bootstrapping from untrusted sources should be discouraged, and bootstrapping other nodes should be opt-in for node runners to avoid \"bootstrap lists\" circulating as the default way of bootstrapping from unaware node runners."
msgstr ""

#: ../../technical-doc/bootstrap.rst:78
#: 71518e29efc34fdf9b68a3c4466c9926
msgid "Implementation details"
msgstr ""

#: ../../technical-doc/bootstrap.rst:81
#: 433b6b028ed5486d9ce28ca6f85e3213
msgid "Procedure from the point of view of the node being bootstrapped"
msgstr ""

#: ../../technical-doc/bootstrap.rst:83
#: 73062ff2cddf400ca2aa041be5949804
msgid "Massa nodes that bootstrap start by connecting to a randomly chosen node among the ones listed in `massa-node/base_config/config.toml` (section `Bootstrap/bootstrap_list`)."
msgstr ""

#: ../../technical-doc/bootstrap.rst:86
#: e1c052856bf4447dae7cd3a51b8a0d13
msgid "The bootstrap process uses a separate port and protocol than the normal Massa peer communication."
msgstr ""

#: ../../technical-doc/bootstrap.rst:88
#: 2c01287879f04dae8a797e62d164818c
msgid "All communications with the chosen bootstrap node are authenticated using the public key (node ID) of the bootstrap node (in the `config.toml` file, section `Bootstrap/bootstrap_list`) to prevent man-in-the-middle attacks."
msgstr ""

#: ../../technical-doc/bootstrap.rst:92
#: c624a2aef20e424482563c789cd6cf4b
msgid "The node being bootstrapped then attempts to download the current State, as well as an initial list of peers from the bootstrap node."
msgstr ""

#: ../../technical-doc/bootstrap.rst:94
#: 5157f76435974f0cba97e9bd3d656180
msgid "Once successfully bootstrapped, the node can then connect to peers, discover the rest of the network, and process live incoming blocks to keep its state up to date."
msgstr ""

#: ../../technical-doc/bootstrap.rst:97
#: 8e376f30398b4b128175259e7a19d40e
msgid "In Massa, the hash of the state is used as part of the proof-of-stake seed, which is a safety mechanism against malicious bootstrap nodes sending a compromised State. It ensures that nodes with an altered State eventually end up isolated from the real network because their proof-of-stake draws differ which causes them to discard incoming honest blocks. Note however that a PoS seed mismatch can take up to 2 cycles to be detected."
msgstr ""

#: ../../technical-doc/bootstrap.rst:103
#: 05d408cc9c9b456ca8a27cd9895f36b5
msgid "In case of bootstrap failure, the bootstrapping node retries with another randomly chosen bootstrap node after a delay."
msgstr ""

#: ../../technical-doc/bootstrap.rst:107
#: a4676d39a5e1459f8ce3c1d2234ed20a
msgid "Procedure from the point of view of the bootstrap node"
msgstr ""

#: ../../technical-doc/bootstrap.rst:109
#: ad6c64b2fb1e4fb3a5a0754a5552e996
msgid "Massa nodes can bootstrap other nodes, with certain limitations because the procedure is heavy for the bootstrap node."
msgstr ""

#: ../../technical-doc/bootstrap.rst:111
#: a1f9c0c9ad494b909d2946f52a3ab31e
msgid "The bootstrap system listens on the address/port defined in `massa-node/base_config/config.toml` (section `bootstrap/bind`). The node's bootstrap server can be disabled by removing the `bind` entry from the config file."
msgstr ""

#: ../../technical-doc/bootstrap.rst:114
#: 556c1763dca6407eb505fbc956a4fb0a
msgid "The Massa State is large (~1 terabyte in the worst case), and takes time to upload to bootstrapping nodes. During that time, new changes to the state continue to appear, so new changes affecting already-uploaded parts need to be sent on-the-fly."
msgstr ""

#: ../../technical-doc/bootstrap.rst:118
#: a91e515157824d72ac902dc8d20e6a4b
msgid "By default, Massa nodes only allow a whitelist of IP addresses to bootstrap from them. This list is present in the `massa-node/base_config/bootstrap_whitelist.json` file. This list is intended to prevent flooding attacks by attackers pretending to be bootstrapping, and also makes it more difficult for node runners to bootstrap from untrusted sources. If you wish to disable whitelisting and allow anyone to bootstrap from your node, simply delete the `bootstrap_whitelist.json` file and restart your node."
msgstr ""

#: ../../technical-doc/bootstrap.rst:125
#: 31c5312656314227b60aa3e594856ee0
msgid "A complementary `bootstrap_blacklist.json` (absent by default) can also be created alongside `bootstrap_whitelist.json` (and following the same syntax) in order to explicitly prevent certain IP addresses from bootstrapping from the node."
msgstr ""

#: ../../technical-doc/bootstrap.rst:129
#: fd0b189caa6444a1969e1d35e019934a
msgid "Once a node has accepted to bootstrap an incoming node, it adds the incoming node's IP address to a local cache preventing that IP from bootstrapping again for a time defined in `massa-node/base_config/config.toml` (section `bootstrap/per_ip_min_interval`) by refusing subsequent connections from that IP during the config-defined delay. The exclusion delay is not extended if the remote IP attempts new connections during the exclusion delay. The exclusion delay is however applied if the bootstrap was accepted but failed for any reason. This aims at limiting the load on individual bootstrap nodes, and spreading the load among bootstrap nodes."
msgstr ""

#: ../../technical-doc/bootstrap.rst:137
#: 97a449383fcd43ccb21741a524d6a3d7
msgid "The number of nodes simultaneously bootstrapping from the local node is limited (`massa-node/base_config/config.toml` section `bootstrap/max_simultaneous_bootstraps`). Excess attempts are refused but do not trigger the exclusion delay mechanism."
msgstr ""

#: ../../technical-doc/bootstrap.rst:142
#: 6d04eb367d864abca3303d03ba8801b3
msgid "Future optimizations"
msgstr ""

#: ../../technical-doc/bootstrap.rst:144
#: c147495375b840efb9283c96fad7158e
msgid "We plan to add the possibility to download bootstrap data from untrusted sources for load-balancing, but then check the hash of the obtained state from trusted sources, and only fallback to downloading everything from trusted sources if multiple bootstrap attempts from this hybrid approach fail."
msgstr ""
