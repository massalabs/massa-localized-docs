# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-10 00:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../technical-doc/bootstrap.rst:2
#: f7505036bf9148d4a30e4250fe69aa90
msgid "Bootstrapping in Massa"
msgstr ""

#: ../../technical-doc/bootstrap.rst:5
#: c031e2618f384fcd831235314b76dabd
msgid "Introduction"
msgstr ""

#: ../../technical-doc/bootstrap.rst:7
#: 4c632845920444f59d3476128480931b
msgid "Nodes that are already part of the network are able to follow the State by observing the blocks passing through the network, verifying them, and applying the state changes they cause."
msgstr ""

#: ../../technical-doc/bootstrap.rst:10
#: 9176d65bf5ca447b9915d612a4c2c6da
msgid "However, new nodes joining the network need to get an absolute \"current\" version of the state, which is called \"bootstrapping\". In some blockchains like Bitcoin, full nodes joining the network are recommended to download all blocks from the beginning (genesis) of the blockchain in order to re-verify the whole state change history."
msgstr ""

#: ../../technical-doc/bootstrap.rst:18
#: 5666148baabf4c43a441d8236274b4a2
msgid "However, Massa has a triple decentralization/security/performance goal:"
msgstr ""

#: ../../technical-doc/bootstrap.rst:15
#: b09bc75aa2e24024a841a12e70b4dbf1
msgid "maximal decentralization requires that node hardware requirements stay consistent with a typical consumer desktop computer to lower the entry barrier of becoming a node runner"
msgstr ""

#: ../../technical-doc/bootstrap.rst:17
#: 1073072af17943e09b315d794d2f0ddb
msgid "maximal security requires that all nodes verify all blocks and operations"
msgstr ""

#: ../../technical-doc/bootstrap.rst:18
#: e3118ed3bdca46d4b5921f3015364c70
msgid "maximal performance requires using the node hardware to its fullest (CPU, network, memory, storage)"
msgstr ""

#: ../../technical-doc/bootstrap.rst:20
#: b4e9af290b25442ca89b552715ac8ee1
msgid "This means that the State in Massa evolves almost as fast as typical consumer desktop computers can run blocks, which implies that catching up blocks since genesis goes only slightly faster than new blocks appear in the meantime, and would take a very long time. Moreover, Massa aims at processing thousands of operations per second, which means that it produces a lot of block data every second, thus preventing nodes with the target hardware from storing the full block history and making bootstrapping from genesis impossible since old blocks are forgotten."
msgstr ""

#: ../../technical-doc/bootstrap.rst:26
#: 5b48eab9fff54a32920f8e0c5adf5679
msgid "Massa nodes joining the network must therefore bootstrap by downloading the absolute current State."
msgstr ""

#: ../../technical-doc/bootstrap.rst:28
#: 224d5ff9c1b3434f9fcc5488f5c07826
msgid "Note that nodes can recover from short-term disconnects by asking for missing data from nodes around them once they come back in the network. However, since Massa nodes only store a short history of blocks and forget older ones, it is impossible to recover from long disconnects since the surrounding nodes have forgotten the blocks needed by the recovering node. In that case, a new State bootstrap is required."
msgstr ""

#: ../../technical-doc/bootstrap.rst:34
#: dc5926fe47a648cbb6066b6a4f2e79b2
msgid "Security model"
msgstr ""

#: ../../technical-doc/bootstrap.rst:37
#: edec235f127f474d977bca3a887baff6
msgid "The example of Bitcoin"
msgstr ""

#: ../../technical-doc/bootstrap.rst:39
#: 878a7f1538a24809b5032fbacaadfc09
msgid "To understand the security model of node bootstrap, Bitcoin is a good starting example."
msgstr ""

#: ../../technical-doc/bootstrap.rst:41
#: d641759a7ece4f6591466f62ed37ea98
msgid "When Bitcoin node runners decide to join the network, they first download the node software from a central source (eg. bitcoin.org). If that source is compromised, the node might end up on a different network, and/or private key theft might happen. Bitcoin therefore requires trust in the entity sourcing the node software."
msgstr ""

#: ../../technical-doc/bootstrap.rst:45
#: dea44f72c82942db8ccbc0584eb570c5
msgid "Note that optionally, if the nodes don't wish to download the full block history they resort to trusting a more recent \"checkpoint\" state encoded in the node software. If that state is compromised, the node's knowledge of the whole ledger might be skewed."
msgstr ""

#: ../../technical-doc/bootstrap.rst:49
#: 604a16ba61e44e4d853b43228e402293
msgid "Assuming the node software is not corrupted, new nodes joining the network need an initial list of peer nodes to which they need to connect first in order to discover the network. This list is hardcoded in the node software (see `the bitcoin docs <https://developer.bitcoin.org/devguide/p2p_network.html#peer-discovery>`_). If all peers pointed by this initial list are compromised, the node can end on a different (non-bitcoin) network, even if the node software itself is not compromised. Bitcoin therefore also requires trust in at least one of the initial peers."
msgstr ""

#: ../../technical-doc/bootstrap.rst:55
#: e4384c257f2e457da66b4715a0293829
msgid "Note that ending up on the wrong network can be detected by checking block hashes with an external source. But this requires trusting yet another source of data."
msgstr ""

#: ../../technical-doc/bootstrap.rst:59
#: 46724b7247574c82ba99b732b5d700f0
msgid "The case of Massa"
msgstr ""

#: ../../technical-doc/bootstrap.rst:61
#: 49935a0b50224f7fa332a91197c20812
msgid "The Massa case is very similar to Bitcoin's. Node runners also need to trust the source of the node software they download, as well as the initial list of peers."
msgstr ""

#: ../../technical-doc/bootstrap.rst:64
#: e8f32e5f05cc480c85d4c81f9df723f6
msgid "Similarly to Bitcoin checkpoints, bootstrapping Massa nodes must obtain the current State from a trusted source, ideally the same source as the one they downloaded the node software from, in order to avoid having to trust multiple entities."
msgstr ""

#: ../../technical-doc/bootstrap.rst:67
#: ee69094b7c4446949831023a9e1572ca
msgid "Downloading the state from an untrusted source can result in major issues such as coin theft. As such, bootstrapping from untrusted sources should be discouraged, and bootstrapping other nodes should be opt-in for node runners to avoid \"bootstrap lists\" circulating as the default way of bootstrapping from unaware node runners."
msgstr ""

#: ../../technical-doc/bootstrap.rst:72
#: 56dea964a1b94a8eae1ecfbd8806bf83
msgid "Implementation details"
msgstr ""

#: ../../technical-doc/bootstrap.rst:75
#: f2705c9f01554400ac8f9a21da044093
msgid "Procedure from the point of view of the node being bootstrapped"
msgstr ""

#: ../../technical-doc/bootstrap.rst:77
#: 78bfcb3a63de4f5f80870f075927e474
msgid "Massa nodes that bootstrap start by connecting to a randomly chosen node among the ones listed in `massa-node/base_config/config.toml` (section `Bootstrap/bootstrap_list`)."
msgstr ""

#: ../../technical-doc/bootstrap.rst:80
#: b572f7beeee4403ca80dc1792f6cd6e3
msgid "The bootstrap process uses a separate port and protocol than the normal Massa peer communication."
msgstr ""

#: ../../technical-doc/bootstrap.rst:82
#: 22bb7faa3a3b42af87103afd286d3e79
msgid "All communications with the chosen bootstrap node are authenticated using the public key (node ID) of the bootstrap node (in the `config.toml` file, section `Bootstrap/bootstrap_list`) to prevent man-in-the-middle attacks."
msgstr ""

#: ../../technical-doc/bootstrap.rst:85
#: eb78a0a7fa6c4994b077fa0c60b66246
msgid "The node being bootstrapped then attempts to download the current State, as well as an initial list of peers from the bootstrap node."
msgstr ""

#: ../../technical-doc/bootstrap.rst:88
#: af6dcba8e7c9446990c3abdaf6a26df6
msgid "Once successfully bootstrapped, the node can then connect to peers, discover the rest of the network, and process live incoming blocks to keep its state up to date."
msgstr ""

#: ../../technical-doc/bootstrap.rst:91
#: 4e7337f9ea52449884df16776cd1a9ef
msgid "In Massa, the hash of the state is used as part of the proof-of-stake seed, which is a safety mechanism against malicious bootstrap nodes sending a compromised State. It ensures that nodes with an altered State eventually end up isolated from the real network because their proof-of-stake draws differ which causes them to discard incoming honest blocks. Note however that a PoS seed mismatch can take up to 2 cycles to be detected."
msgstr ""

#: ../../technical-doc/bootstrap.rst:96
#: 53ddce2d664e44368ec683dbceb2a80a
msgid "In case of bootstrap failure, the bootstrapping node retries with another randomly chosen bootstrap node after a delay."
msgstr ""

#: ../../technical-doc/bootstrap.rst:99
#: 9ac4a40f4403433e9eed05b7bfbacf91
msgid "Procedure from the point of view of the bootstrap node"
msgstr ""

#: ../../technical-doc/bootstrap.rst:101
#: 155b102ae738466ca3da646fe051f767
msgid "Massa nodes can bootstrap other nodes, with certain limitations because the procedure is heavy for the bootstrap node."
msgstr ""

#: ../../technical-doc/bootstrap.rst:103
#: ae281abcf1564269af74f0122e1bfdf0
msgid "The bootstrap system listens on the address/port defined in `massa-node/base_config/config.toml` (section `bootstrap/bind`). The node's bootstrap server can be disabled by removing the `bind` entry from the config file."
msgstr ""

#: ../../technical-doc/bootstrap.rst:106
#: e9a746ccda38479381500f21d531e46c
msgid "The Massa State is large (~1 terabyte in the worst case), and takes time to upload to bootstrapping nodes. During that time, new changes to the state continue to appear, so new changes affecting already-uploaded parts need to be sent on-the-fly."
msgstr ""

#: ../../technical-doc/bootstrap.rst:110
#: 77726db6265d49c49d5b8ca2ed63381e
msgid "By default, Massa nodes only allow a whitelist of IP addresses to bootstrap from them. This list is present in the `massa-node/base_config/bootstrap_whitelist.json` file. This list is intended to prevent flooding attacks by attackers pretending to be bootstrapping, and also makes it more difficult for node runners to bootstrap from untrusted sources. If you wish to disable whitelisting and allow anyone to bootstrap from your node, simply delete the `bootstrap_whitelist.json` file and restart your node."
msgstr ""

#: ../../technical-doc/bootstrap.rst:116
#: 3b21dcb027f6455bab303fa0ca6cc16d
msgid "A complementary `bootstrap_blacklist.json` (absent by default) can also be created alongside `bootstrap_whitelist.json` (and following the same syntax) in order to explicitly prevent certain IP addresses from bootstrapping from the node."
msgstr ""

#: ../../technical-doc/bootstrap.rst:119
#: 4579cc03cbe74d269a2cbeae9014aa77
msgid "Once a node has accepted to bootstrap an incoming node, it adds the incoming node's IP address to a local cache preventing that IP from bootstrapping again for a time defined in `massa-node/base_config/config.toml` (section `bootstrap/per_ip_min_interval`) by refusing subsequent connections from that IP during the config-defined delay. The exclusion delay is not extended if the remote IP attempts new connections during the exclusion delay. The exclusion delay is however applied if the bootstrap was accepted but failed for any reason. This aims at limiting the load on individual bootstrap nodes, and spreading the load among bootstrap nodes."
msgstr ""

#: ../../technical-doc/bootstrap.rst:126
#: 671184d9eb6b4e77a3e3a703706038be
msgid "The number of nodes simultaneously bootstrapping from the local node is limited (`massa-node/base_config/config.toml` section `bootstrap/max_simultaneous_bootstraps`). Excess attempts are refused but do not trigger the exclusion delay mechanism."
msgstr ""

#: ../../technical-doc/bootstrap.rst:131
#: 23d0f822b18d41dcabbd00505acac623
msgid "Future optimizations"
msgstr ""

#: ../../technical-doc/bootstrap.rst:133
#: 79a154476f9245d8932c501f6afb1d6b
msgid "We plan to add the possibility to download bootstrap data from untrusted sources for load-balancing, but then check the hash of the obtained state from trusted sources, and only fallback to downloading everything from trusted sources if multiple bootstrap attempts from this hybrid approach fail."
msgstr ""
