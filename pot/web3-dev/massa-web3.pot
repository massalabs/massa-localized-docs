# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-30 11:37+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/massa-web3.rst:7
#: 439db876b58f4075930f7603748f8b85
msgid "Massa web3"
msgstr ""

#: ../../web3-dev/massa-web3.rst:9
#: e67966a4ba33413fbfa693d16138c5fe
msgid "`massa-web3 <https://github.com/massalabs/massa-web3>`_ is a TypeScript library that allow you to interact with the Massa blockchain through a local or remote Massa node. In particular the massa-web3 library will allow you to call the :ref:`JSON-RPC API <technical-api>`, but also to fetch and poll events from smart contracts on the Massa blockchain, deploy smart contracts and much more. Documentation for the massa-web3 library is available on the `Github repository <https://github.com/massalabs/massa-web3>`_. The library is published on npmjs under `@massalabs/massa-web3 <https://www.npmjs.com/package/@massalabs/massa-web3>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:19
#: 692a23991bd6465c98e3f3d26187cb16
msgid "`create-react-app-massa <https://github.com/massalabs/create-react-app-massa>`_ is a minimal React template made for our massa-web3 library."
msgstr ""

#: ../../web3-dev/massa-web3.rst:22
#: 85a5a112a5f842dd8eca1cd82647f72b
msgid "You'll find examples of frontends using the `massa-web3` library in the `massa-sc-examples <https://github.com/massalabs/massa-sc-examples>`_ repository:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:25
#: 4bd4faac744c44b5a7ccf001cab79b7b
msgid "`blog <https://github.com/massalabs/massa-sc-examples/tree/main/blog>`_ is an example of a decentralized blog platform."
msgstr ""

#: ../../web3-dev/massa-web3.rst:29
#: 0b5fe3f61b8a466aaa5b171fff4aa34f
msgid "Building Decentralized Application"
msgstr ""

#: ../../web3-dev/massa-web3.rst:31
#: 8f92a96b82484d24a7d5dfdb6a2f5edb
msgid "For the decentralized website part, we'll assume that you have some familiarity with HTML and JavaScript. If you want to have more details, you can follow `this great tutorial from React <https://reactjs.org/tutorial/tutorial.html>`_ from which the dApp is inspired from."
msgstr ""

#: ../../web3-dev/massa-web3.rst:36
#: 0ebd95910ce2492484c40940bb1afafa
msgid "Here you can find an example dApp for the :ref:`sum smart-contract <sc-example-sum>`: `Massa DApp example: Sum <https://github.com/massalabs/massa-sc-examples/tree/main/sum/frontend>`_."
msgstr ""

#: ../../web3-dev/massa-web3.rst:43
#: 7c163d8eb15b4a0e9a6b7d1e388bb395
msgid "Prerequisites:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:40
#: 0c92c98e4d4a4229b3b28be90ba77f85
msgid "having `Thyra <https://github.com/massalabs/thyra/>`_ installed and running on your computer"
msgstr ""

#: ../../web3-dev/massa-web3.rst:41
#: 47165dbde1764d0794bb804d74e36331
msgid "having a wallet in Thyra"
msgstr ""

#: ../../web3-dev/massa-web3.rst:42
#: 9f7cce067bf34ff4825168187a9ac790
msgid "the wallet needs to own some Massa coins"
msgstr ""

#: ../../web3-dev/massa-web3.rst:43
#: ce5818596bca422c82bd318d811b387c
msgid "having a smart contract :ref:`deployed <sending-sc-sum>`"
msgstr ""

#: ../../web3-dev/massa-web3.rst:45
#: 7bdf8818cb014c20913778e493b120be
msgid "**Network**: as any blockchain is a network of nodes, there could be practically several networks of different nodes. The main Massa network is called the MainNet. There is also a TestNet which is ran by Massa Labs team, where you can build applications without paying real Massa coins. You can also run your own network, with only one node (see :ref:`local-network-generation`)."
msgstr ""

#: ../../web3-dev/massa-web3.rst:51
#: e25caa7fba58443599f572904f66720c
msgid "A decentralized application is an application running on a blockchain. Even the frontend can be hosted on the blockchain with :ref:`web-on-chain <web3-decentralized-web>`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:58
#: e4541e8838f04a1e9287ee8b72f70934
msgid "To build such application you will need to use some libraries:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:56
#: 365ef0c78b8748d6a1b6434e7329fd5a
msgid "`massa toolkit <https://github.com/massalabs/massa-sc-toolkit/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:57
#: b843ee808e724abd86a6d6b49d7b7bb6
msgid "`massa assemblyscript sdk <https://github.com/massalabs/massa-as-sdk/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:58
#: 3882d255d66f4efd83b10f01882dedce
msgid "`massa javascript web3 <https://github.com/massalabs/massa-web3/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:60
#: fa527b9670fb48d4b78ce72e1b003ca1
msgid "Then you will be able to build a frontend application that communicates with Thyra's API to sign transactions and submit it to the blockchain."
msgstr ""

#: ../../web3-dev/massa-web3.rst:63
#: 4280eaa1b4614afc82c94d56c089f923
msgid "Then, use Thyra to deploy your frontend application."
msgstr ""

#: ../../web3-dev/massa-web3.rst:69
#: d8a4c1fc60b2414c8345a0de7fd1b698
msgid "Debugging"
msgstr ""

#: ../../web3-dev/massa-web3.rst:71
#: ccf1645c75154f5eb2b55f66d41d6b22
msgid "This section will give you some tips on how to debug your dapp while building it."
msgstr ""

#: ../../web3-dev/massa-web3.rst:74
#: a4492c416d1943c18271ec1d88d3cccf
msgid "Work in a local development environment"
msgstr ""

#: ../../web3-dev/massa-web3.rst:76
#: a332f32d6f2d492ab8e28e2a2b145120
msgid "Run :ref:`a local node <local-network-generation>`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:78
#: 70aeff674bc0495a90306e19e6ce61d2
msgid "Start Thyra and bind it to your local node:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:84
#: a8452deab6064acd93f51e3029554063
msgid "Create a new wallet in `Thyra <http://my.massa/thyra/wallet/index.html>`_."
msgstr ""

#: ../../web3-dev/massa-web3.rst:86
#: 9a8ee709e8fd4951ac716e42a75b0b7c
msgid "Modify the file `massa-node/base_config/initial_ledger.json`:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:98
#: ea2500fd147d4b9f8dcb5a6eb185f2d1
msgid "to add some Massa tokens to your newly created address."
msgstr ""

#: ../../web3-dev/massa-web3.rst:100
#: ddb08ac965e843499dc8d2303ad704d6
msgid "In your smart-contract projects, use this `.env` file:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:108
#: c58b45ace7164ed9a6cb70a369e89dc6
msgid "Use the private key that the node-client gave you when calling `wallet_generate_secret_key`. This wallet also needs to have some Massa coins, so it must appear in `massa-node/base_config/initial_ledger.json` before running the node with `cd massa-node && cargo run --features sandbox` in `massa <https://github.com/massalabs/massa>`_ directory."
msgstr ""

#: ../../web3-dev/massa-web3.rst:114
#: a064437165264facb3381a8200ea3570
msgid "Modify the file `massa/massa-client/base_config/config.toml` to the localhost RPC:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:122
#: 477271378fee48719e5a72a6841dcf95
msgid "Start a client with the command `cargo run` in `massa/massa-client` directory."
msgstr ""

#: ../../web3-dev/massa-web3.rst:124
#: 6c57fe2d7fb042ae86ce4e011aeecd40
msgid "You might want to sign transactions to call smart contracts in your frontend application:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:155
#: d956dbc7383b46b3b6ebceaa1682b518
msgid "This performs an HTTP POST call to Thyra, asking to create a transaction that will call the function named `hello` of the smart contract located at `A1nyzu9rJKnf2zz8F7mkM5d6ZoThnMuAtUdij9WmcwXWMWJFmEB` with the wallet name `wallet`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:160
#: 0f2149b3061a4495980c5187299255dd
msgid "This opens a password prompt and you will be able to see the response of the call in the development tools of the browser. The response is the operation id, for example `2mLLkdKB4BY4hJQFNwGZ5oQVhky13EVZAwHJXCGQnd3FRHUoHw`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:164
#: f14115b352de4f6d884433a542d454c4
msgid "If the operation failed, the response will contain the details."
msgstr ""

#: ../../web3-dev/massa-web3.rst:166
#: 81848759b2694224b9b57fb57a2c89f4
msgid "Now you can now use commands of the node client to see the details of your operation:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:173
#: c5adeeae406546588a825ae1493dd3c3
msgid "This will output something like"
msgstr ""

#: ../../web3-dev/massa-web3.rst:195
#: de1231af6acf4e4d9c3b31dbc98cd899
msgid "`target parameter` is empty because parameters are encoded into bytes so it is unlikely to have printable characters."
msgstr ""

#: ../../web3-dev/massa-web3.rst:198
#: cb876020f4c3448cbb7245b52c1353e1
msgid "You can also see events emitted by your contract (assuming that your contract is deployed at `A1nyzu9rJKnf2zz8F7mkM5d6ZoThnMuAtUdij9WmcwXWMWJFmEB`):"
msgstr ""

#: ../../web3-dev/massa-web3.rst:215
#: 00a41c9414ae4ca3b5e7ce198eea1498
msgid "In this example the event message is `Sum (2, 3) = 5`."
msgstr ""
