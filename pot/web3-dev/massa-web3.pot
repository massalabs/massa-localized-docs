# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-08 00:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/massa-web3.rst:7
#: 0c97317532d3444b8a6ad9ac1d6eba69
msgid "Massa web3"
msgstr ""

#: ../../web3-dev/massa-web3.rst:9
#: 03d52168fbf04c35a1d444b47b2c75d6
msgid "`massa-web3 <https://github.com/massalabs/massa-web3>`_ is a TypeScript library that allow you to interact with the Massa blockchain through a local or remote Massa node. In particular the massa-web3 library will allow you to call the :ref:`JSON-RPC API <technical-api>`, but also to fetch and poll events from smart contracts on the Massa blockchain, deploy smart contracts and much more. Documentation for the massa-web3 library is available on the `Github repository <https://github.com/massalabs/massa-web3>`_. The library is published on npmjs under `@massalabs/massa-web3 <https://www.npmjs.com/package/@massalabs/massa-web3>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:19
#: 839642d4a9714de2b6405e20fcf5527f
msgid "`create-react-app-massa <https://github.com/massalabs/create-react-app-massa>`_ is a minimal React template made for our massa-web3 library."
msgstr ""

#: ../../web3-dev/massa-web3.rst:22
#: d1b5604879c144c49e219b0d96f53a68
msgid "You'll find examples of frontends using the `massa-web3` library in the `massa-sc-examples <https://github.com/massalabs/massa-sc-examples>`_ repository:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:25
#: a3bfeb0e514840bbb813e7a105e99c14
msgid "`blog <https://github.com/massalabs/massa-sc-examples/tree/main/blog>`_ is an example of a decentralized blog platform."
msgstr ""

#: ../../web3-dev/massa-web3.rst:29
#: 3c08177970ce42d59b410fbeeb62c855
msgid "Building Decentralized Application"
msgstr ""

#: ../../web3-dev/massa-web3.rst:31
#: 86430f00448141828828633aca4da3ba
msgid "For the decentralized website part, we'll assume that you have some familiarity with HTML and JavaScript. If you want to have more details, you can follow `this great tutorial from React <https://reactjs.org/tutorial/tutorial.html>`_ from which the dApp is inspired from."
msgstr ""

#: ../../web3-dev/massa-web3.rst:36
#: f5ce70a9ddce44bfa1f6a36adfd3329f
msgid "Here you can find an example dApp for the :ref:`sum smart-contract <sc-example-sum>`: `Massa DApp example: Sum <https://github.com/massalabs/massa-sc-examples/tree/main/sum/frontend>`_."
msgstr ""

#: ../../web3-dev/massa-web3.rst:43
#: 24e6be7c9fb844faa440995bbcc0d7e9
msgid "Prerequisites:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:40
#: 6b5bf8c56d994cad9ca5c42c7ed101c3
msgid "having `Thyra <https://github.com/massalabs/thyra/>`__ installed and running on your computer"
msgstr ""

#: ../../web3-dev/massa-web3.rst:41
#: 1dec049b26824c8a9ae5cb89883fc804
msgid "having a wallet in Thyra"
msgstr ""

#: ../../web3-dev/massa-web3.rst:42
#: 462010383b474bd5826ad9eb44511708
msgid "the wallet needs to own some Massa coins"
msgstr ""

#: ../../web3-dev/massa-web3.rst:43
#: d69b3e7c9ffb47ec8df3436a3d7287a6
msgid "having a smart contract :ref:`deployed <sending-sc-sum>`"
msgstr ""

#: ../../web3-dev/massa-web3.rst:45
#: 9e805f5cd73241a6b84b45e423b5f564
msgid "**Network**: as any blockchain is a network of nodes, there could be practically several networks of different nodes. The main Massa network is called the MainNet. There is also a TestNet which is ran by Massa Labs team, where you can build applications without paying real Massa coins. You can also run your own network, with only one node (see :ref:`local-network-generation`)."
msgstr ""

#: ../../web3-dev/massa-web3.rst:51
#: 243dc6ef21a44bc7b8f8c9be43a5af6e
msgid "A decentralized application is an application running on a blockchain. Even the frontend can be hosted on the blockchain with :ref:`web-on-chain <web3-decentralized-web>`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:58
#: bd121f17cf844959ba1b8de7bdd0bb71
msgid "To build such application you will need to use some libraries:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:56
#: bc19bdccf13b47fb880f19d61d4cd805
msgid "`massa toolkit <https://github.com/massalabs/massa-sc-toolkit/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:57
#: 7d48021025624e46901edb74555513dd
msgid "`massa assemblyscript sdk <https://github.com/massalabs/massa-as-sdk/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:58
#: 7d9af9376f954cec828f04ce8c515401
msgid "`massa javascript web3 <https://github.com/massalabs/massa-web3/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:60
#: 4be056717d2b4e2a94c62f595bb10f99
msgid "Then you will be able to build a frontend application that communicates with Thyra's API to sign transactions and submit it to the blockchain."
msgstr ""

#: ../../web3-dev/massa-web3.rst:63
#: 5508cb0a7ccd4905891cca9d65b34ba7
msgid "Then, use Thyra to deploy your frontend application."
msgstr ""

#: ../../web3-dev/massa-web3.rst:69
#: 50c154923757436893841a8c6ae79517
msgid "Debugging"
msgstr ""

#: ../../web3-dev/massa-web3.rst:71
#: b5f1faf6180b414c9edd8f29aa269fde
msgid "This section will give you some tips on how to debug your dapp while building it."
msgstr ""

#: ../../web3-dev/massa-web3.rst:74
#: ceeda032e0f84660bef464f4a7f75eb3
msgid "Work in a local development environment"
msgstr ""

#: ../../web3-dev/massa-web3.rst:76
#: eb02bc91589e4fc0b1bafba138e501f0
msgid "Run :ref:`a local node <local-network-generation>`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:78
#: 6d745514bf824731895adab85fa8055a
msgid "Start Thyra and bind it to your local node:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:84
#: 9f0ab7adc1fb40a1b3dac94346090e62
msgid "Create a new wallet in `Thyra <http://my.massa/thyra/wallet/index.html>`__."
msgstr ""

#: ../../web3-dev/massa-web3.rst:86
#: 3ddf1e7e06a74833b1c05c0400011a3e
msgid "Modify the file `massa-node/base_config/initial_ledger.json`:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:98
#: b10262d0c07042628bfc5029fc58fa8d
msgid "to add some Massa tokens to your newly created address."
msgstr ""

#: ../../web3-dev/massa-web3.rst:100
#: c25e023676e54979ad171c7d7559631a
msgid "In your smart-contract projects, use this `.env` file:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:108
#: 46f342d511c8432c9bc981e74d82840b
msgid "Use the secret key that the node-client gave you when calling `wallet_generate_secret_key`. This wallet also needs to have some Massa coins, so it must appear in `massa-node/base_config/initial_ledger.json` before running the node with `cd massa-node && cargo run --features sandbox` in `massa <https://github.com/massalabs/massa>`_ directory."
msgstr ""

#: ../../web3-dev/massa-web3.rst:114
#: 7db2e535bb51476ca4ada6a07c8b75f8
msgid "Modify the file `massa/massa-client/base_config/config.toml` to the localhost RPC:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:122
#: 39d9065f11b24e40b83a8532f609029b
msgid "Start a client with the command `cargo run` in `massa/massa-client` directory."
msgstr ""

#: ../../web3-dev/massa-web3.rst:124
#: b1a2b67f01554196994180af293a71de
msgid "You might want to sign transactions to call smart contracts in your frontend application:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:155
#: dbfce129e14b4b9b8cc15edd2d6aef78
msgid "This performs an HTTP POST call to Thyra, asking to create a transaction that will call the function named `hello` of the smart contract located at `A1nyzu9rJKnf2zz8F7mkM5d6ZoThnMuAtUdij9WmcwXWMWJFmEB` with the wallet name `wallet`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:160
#: 787ef72f0316465a8f882980125523b6
msgid "This opens a password prompt and you will be able to see the response of the call in the development tools of the browser. The response is the operation id, for example `2mLLkdKB4BY4hJQFNwGZ5oQVhky13EVZAwHJXCGQnd3FRHUoHw`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:164
#: 736476e4b474465983ac08aec528b75d
msgid "If the operation failed, the response will contain the details."
msgstr ""

#: ../../web3-dev/massa-web3.rst:166
#: 68b9e431f337407ead584a717cac2864
msgid "Now you can now use commands of the node client to see the details of your operation:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:173
#: 9cd08c27ff504fac9c25211c260ec370
msgid "This will output something like"
msgstr ""

#: ../../web3-dev/massa-web3.rst:194
#: b0c0475ae10d411081e859c6de3eee54
msgid "`target parameter` is empty because parameters are encoded into bytes so it is unlikely to have printable characters."
msgstr ""

#: ../../web3-dev/massa-web3.rst:197
#: 200a6b5b201146388a29c9c417379cd6
msgid "You can also see events emitted by your contract (assuming that your contract is deployed at `A1nyzu9rJKnf2zz8F7mkM5d6ZoThnMuAtUdij9WmcwXWMWJFmEB`):"
msgstr ""

#: ../../web3-dev/massa-web3.rst:214
#: 872d7dc9c7b24e149c000bdb3d00a543
msgid "In this example the event message is `Sum (2, 3) = 5`."
msgstr ""
