# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-02 00:49+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/massa-web3.rst:7
#: 8293f29653c54f20b1c7cb06615bf459
msgid "Massa web3"
msgstr ""

#: ../../web3-dev/massa-web3.rst:9
#: a09e41f2c2c149468c0fd4d9f7f514b9
msgid "`massa-web3 <https://github.com/massalabs/massa-web3>`_ is a TypeScript library that allow you to interact with the Massa blockchain through a local or remote Massa node. In particular the massa-web3 library will allow you to call the :ref:`JSON-RPC API <technical-api>`, but also to fetch and poll events from smart contracts on the Massa blockchain, deploy smart contracts and much more. Documentation for the massa-web3 library is available on the `Github repository <https://github.com/massalabs/massa-web3>`_. The library is published on npmjs under `@massalabs/massa-web3 <https://www.npmjs.com/package/@massalabs/massa-web3>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:19
#: 93096b6dc919410e942c9a6ae4cfb4eb
msgid "`create-react-app-massa <https://github.com/massalabs/create-react-app-massa>`_ is a minimal React template made for our massa-web3 library."
msgstr ""

#: ../../web3-dev/massa-web3.rst:22
#: dffb63772d284b6d940684292ad15b3c
msgid "You'll find examples of frontends using the `massa-web3` library in the `massa-sc-examples <https://github.com/massalabs/massa-sc-examples>`_ repository:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:25
#: 1d5f992c37d04cbe9b0a2874763f0ad8
msgid "`blog <https://github.com/massalabs/massa-sc-examples/tree/main/blog>`_ is an example of a decentralized blog platform."
msgstr ""

#: ../../web3-dev/massa-web3.rst:29
#: 79ae117778d144c7a81198455375e148
msgid "Building Decentralized Application"
msgstr ""

#: ../../web3-dev/massa-web3.rst:31
#: 30ba0270c74d47bca04a104def9ae690
msgid "For the decentralized website part, we'll assume that you have some familiarity with HTML and JavaScript. If you want to have more details, you can follow `this great tutorial from React <https://reactjs.org/tutorial/tutorial.html>`_ from which the dApp is inspired from."
msgstr ""

#: ../../web3-dev/massa-web3.rst:36
#: 553a86ae6501410bbaf25c75107d7a1d
msgid "Here you can find an example dApp for the :ref:`sum smart-contract <sc-example-sum>`: `Massa DApp example: Sum <https://github.com/massalabs/massa-sc-examples/tree/main/sum/frontend>`_."
msgstr ""

#: ../../web3-dev/massa-web3.rst:43
#: 521246dd6e514be2828bbe3fe16e4422
msgid "Prerequisites:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:40
#: 8b72ff56e10146f186032a9cfadd1b99
msgid "having `Thyra <https://github.com/massalabs/thyra/>`__ installed and running on your computer"
msgstr ""

#: ../../web3-dev/massa-web3.rst:41
#: 79df36e1817e49e98686936b1d153ea6
msgid "having a wallet in Thyra"
msgstr ""

#: ../../web3-dev/massa-web3.rst:42
#: c868f89661114b679a77a98aa664ba16
msgid "the wallet needs to own some Massa coins"
msgstr ""

#: ../../web3-dev/massa-web3.rst:43
#: 7ef10ba984be498a9279cc9c56b70836
msgid "having a smart contract :ref:`deployed <sending-sc-sum>`"
msgstr ""

#: ../../web3-dev/massa-web3.rst:45
#: 21dfde97494a4825a1b4b128fda015c4
msgid "**Network**: as any blockchain is a network of nodes, there could be practically several networks of different nodes. The main Massa network is called the MainNet. There is also a TestNet which is ran by Massa Labs team, where you can build applications without paying real Massa coins. You can also run your own network, with only one node (see :ref:`local-network-generation`)."
msgstr ""

#: ../../web3-dev/massa-web3.rst:51
#: 70c392b2b8284091be189f6a22f451fe
msgid "A decentralized application is an application running on a blockchain. Even the frontend can be hosted on the blockchain with :ref:`web-on-chain <web3-decentralized-web>`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:58
#: e657dcfb886b4a13a65254364a5f47df
msgid "To build such application you will need to use some libraries:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:56
#: dbeae94f73694b4baf7c8ede46d79034
msgid "`massa toolkit <https://github.com/massalabs/massa-sc-toolkit/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:57
#: 838ed2847f4249fc86f919277cd15d61
msgid "`massa assemblyscript sdk <https://github.com/massalabs/massa-as-sdk/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:58
#: 283952fdb5814208b8cda01d8c183157
msgid "`massa javascript web3 <https://github.com/massalabs/massa-web3/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:60
#: d357e44e57f04d85b50807b7cfff77af
msgid "Then you will be able to build a frontend application that communicates with Thyra's API to sign transactions and submit it to the blockchain."
msgstr ""

#: ../../web3-dev/massa-web3.rst:63
#: 9470db18a189489e9959ad99acb0d452
msgid "Then, use Thyra to deploy your frontend application."
msgstr ""

#: ../../web3-dev/massa-web3.rst:69
#: 1b159974a1ed43808cb11658aa4f5fe6
msgid "Debugging"
msgstr ""

#: ../../web3-dev/massa-web3.rst:71
#: 9178bff92a40412d928e6aa535942cd6
msgid "This section will give you some tips on how to debug your dapp while building it."
msgstr ""

#: ../../web3-dev/massa-web3.rst:74
#: 3080fc55a4504d5bb06a926cf0251e50
msgid "Work in a local development environment"
msgstr ""

#: ../../web3-dev/massa-web3.rst:76
#: 6fcd20406cc14830999ba90f95280eae
msgid "Run :ref:`a local node <local-network-generation>`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:78
#: 48444ac4ec304a5abefcceeea387003c
msgid "Start Thyra and bind it to your local node:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:84
#: 8848c0d5137541c1ac1df43e02c8037c
msgid "Create a new wallet in `Thyra <http://my.massa/thyra/wallet/index.html>`__."
msgstr ""

#: ../../web3-dev/massa-web3.rst:86
#: d25e3564b87845f28e9e01f896468e6c
msgid "Modify the file `massa-node/base_config/initial_ledger.json`:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:98
#: 181bb23178bd4d7c84577c3762c84938
msgid "to add some Massa tokens to your newly created address."
msgstr ""

#: ../../web3-dev/massa-web3.rst:100
#: fae45f2713ab47f1a96e89a5ceb643ab
msgid "In your smart-contract projects, use this `.env` file:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:108
#: 99f91b37c2dc4d1dbe8577a25f7c6fa0
msgid "Use the secret key that the node-client gave you when calling `wallet_generate_secret_key`. This wallet also needs to have some Massa coins, so it must appear in `massa-node/base_config/initial_ledger.json` before running the node with `cd massa-node && cargo run --features sandbox` in `massa <https://github.com/massalabs/massa>`_ directory."
msgstr ""

#: ../../web3-dev/massa-web3.rst:114
#: 35d3d95f46d74656a18fc7d5543ba5a1
msgid "Modify the file `massa/massa-client/base_config/config.toml` to the localhost RPC:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:122
#: 3c8c730b3b564f988779ba2f9ffe5a58
msgid "Start a client with the command `cargo run` in `massa/massa-client` directory."
msgstr ""

#: ../../web3-dev/massa-web3.rst:124
#: 74fb52cca2714090b1f06f556fae840d
msgid "You might want to sign transactions to call smart contracts in your frontend application:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:155
#: 2c6bd6dd8a614b2395f2f28098f9c152
msgid "This performs an HTTP POST call to Thyra, asking to create a transaction that will call the function named `hello` of the smart contract located at `A1nyzu9rJKnf2zz8F7mkM5d6ZoThnMuAtUdij9WmcwXWMWJFmEB` with the wallet name `wallet`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:160
#: 86e7df56b9634fb9a3183333ce36172d
msgid "This opens a password prompt and you will be able to see the response of the call in the development tools of the browser. The response is the operation id, for example `2mLLkdKB4BY4hJQFNwGZ5oQVhky13EVZAwHJXCGQnd3FRHUoHw`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:164
#: 2f5c278d5e9544d8b9ab0634e40a154c
msgid "If the operation failed, the response will contain the details."
msgstr ""

#: ../../web3-dev/massa-web3.rst:166
#: a1e8e1d9486b45419263200997701927
msgid "Now you can now use commands of the node client to see the details of your operation:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:173
#: 47f295da543b49b7879d09be7f7ba55e
msgid "This will output something like"
msgstr ""

#: ../../web3-dev/massa-web3.rst:194
#: f4966a6a065743a196e2e7f3b114b393
msgid "`target parameter` is empty because parameters are encoded into bytes so it is unlikely to have printable characters."
msgstr ""

#: ../../web3-dev/massa-web3.rst:197
#: da8e489c8f8b4eceb9287098ea03f11b
msgid "You can also see events emitted by your contract (assuming that your contract is deployed at `A1nyzu9rJKnf2zz8F7mkM5d6ZoThnMuAtUdij9WmcwXWMWJFmEB`):"
msgstr ""

#: ../../web3-dev/massa-web3.rst:214
#: 4d5ed339ad614b2d8cd39492bad39028
msgid "In this example the event message is `Sum (2, 3) = 5`."
msgstr ""
