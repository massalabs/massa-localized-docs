# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-05 11:19+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/massa-web3.rst:7
#: 954521d94faf4d2ab4ff4ae4d651fbc7
msgid "Massa web3"
msgstr ""

#: ../../web3-dev/massa-web3.rst:9
#: b7487a15731c4c25803c0c371d0039ce
msgid "`massa-web3 <https://github.com/massalabs/massa-web3>`_ is a TypeScript library that allow you to interact with the Massa blockchain through a local or remote Massa node. In particular the massa-web3 library will allow you to call the :ref:`JSON-RPC API <technical-api>`, but also to fetch and poll events from smart contracts on the Massa blockchain, deploy smart contracts and much more. Documentation for the massa-web3 library is available on the `Github repository <https://github.com/massalabs/massa-web3>`_. The library is published on npmjs under `@massalabs/massa-web3 <https://www.npmjs.com/package/@massalabs/massa-web3>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:19
#: 1c84f08b8c2a43789f778b6b5ac64879
msgid "`create-react-app-massa <https://github.com/massalabs/create-react-app-massa>`_ is a minimal React template made for our massa-web3 library."
msgstr ""

#: ../../web3-dev/massa-web3.rst:22
#: a803290e81724f76898b0c4b62c1c04c
msgid "You'll find examples of frontends using the `massa-web3` library in the `massa-sc-examples <https://github.com/massalabs/massa-sc-examples>`_ repository:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:25
#: 4cd28019e49b4e069663b2889fd49c74
msgid "`blog <https://github.com/massalabs/massa-sc-examples/tree/main/blog>`_ is an example of a decentralized blog platform."
msgstr ""

#: ../../web3-dev/massa-web3.rst:29
#: 9e457421dffd4d62b1f15ed5db111000
msgid "Building Decentralized Application"
msgstr ""

#: ../../web3-dev/massa-web3.rst:31
#: 977d5df03b794e9eb362e4d23c5c2ebf
msgid "For the decentralized website part, we'll assume that you have some familiarity with HTML and JavaScript. If you want to have more details, you can follow `this great tutorial from React <https://reactjs.org/tutorial/tutorial.html>`_ from which the dApp is inspired from."
msgstr ""

#: ../../web3-dev/massa-web3.rst:36
#: c1bfee4e5b944456b4a65248f7d61ecd
msgid "Here you can find an example dApp for the :ref:`sum smart-contract <sc-example-sum>`: `Massa DApp example: Sum <https://github.com/massalabs/massa-sc-examples/tree/main/sum/frontend>`_."
msgstr ""

#: ../../web3-dev/massa-web3.rst:43
#: 3a8a376912c84d259354845cd3afcbc4
msgid "Prerequisites:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:40
#: e687e844e15640e0b4b5e969a10bf1a2
msgid "having `Thyra <https://github.com/massalabs/thyra/>`_ installed and running on your computer"
msgstr ""

#: ../../web3-dev/massa-web3.rst:41
#: dad20b1cb3044fd1b165710a0ff96af6
msgid "having a wallet in Thyra"
msgstr ""

#: ../../web3-dev/massa-web3.rst:42
#: 4e7145c36ba449248ab6c89066452f7e
msgid "the wallet needs to own some Massa coins"
msgstr ""

#: ../../web3-dev/massa-web3.rst:43
#: d7199266bc0a4c8aa26fbda9bebd07fe
msgid "having a smart contract :ref:`deployed <sending-sc-sum>`"
msgstr ""

#: ../../web3-dev/massa-web3.rst:45
#: 6778074c14cf4b2c89f223a3e46c7228
msgid "**Network**: as any blockchain is a network of nodes, there could be practically several networks of different nodes. The main Massa network is called the MainNet. There is also a TestNet which is ran by Massa Labs team, where you can build applications without paying real Massa coins. You can also run your own network, with only one node (see :ref:`local-network-generation`)."
msgstr ""

#: ../../web3-dev/massa-web3.rst:51
#: 602afff8d86b4fdbac42b85778d0cec3
msgid "A decentralized application is an application running on a blockchain. Even the frontend can be hosted on the blockchain with :ref:`web-on-chain <web3-decentralized-web>`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:58
#: 9c068a9ea2534336817add9f3c9878ac
msgid "To build such application you will need to use some libraries:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:56
#: eeff7703f0e449b6a0123aa66d5719d0
msgid "`massa toolkit <https://github.com/massalabs/massa-sc-toolkit/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:57
#: a0b0ca7f6e3a44098505dc5121989b60
msgid "`massa assemblyscript sdk <https://github.com/massalabs/massa-as-sdk/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:58
#: 97805d854c2949a682cc0a75a9fdc73f
msgid "`massa javascript web3 <https://github.com/massalabs/massa-web3/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:60
#: 420048cc968f437abb0ee9c392c13bd8
msgid "Then you will be able to build a frontend application that communicates with Thyra's API to sign transactions and submit it to the blockchain."
msgstr ""

#: ../../web3-dev/massa-web3.rst:63
#: 344d44a80ce741aeb2735fc33fe51ad6
msgid "Then, use Thyra to deploy your frontend application."
msgstr ""

#: ../../web3-dev/massa-web3.rst:69
#: 82a7a860d9854273a02417d97b225c32
msgid "Debugging"
msgstr ""

#: ../../web3-dev/massa-web3.rst:71
#: f54460c1249e489aa0e721072982b201
msgid "This section will give you some tips on how to debug your dapp while building it."
msgstr ""

#: ../../web3-dev/massa-web3.rst:74
#: 59f16e72ce604ea7ba5096197784506f
msgid "Work in a local development environment"
msgstr ""

#: ../../web3-dev/massa-web3.rst:76
#: 62aec94d53d84b1e8511837bbb3ae9e1
msgid "Run :ref:`a local node <local-network-generation>`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:78
#: 6a81532c4239459c86100412b0026d07
msgid "Start Thyra and bind it to your local node:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:84
#: 1ee3e1657a664ddebb4238a68997b97c
msgid "Create a new wallet in `Thyra <http://my.massa/thyra/wallet/index.html>`_."
msgstr ""

#: ../../web3-dev/massa-web3.rst:86
#: 6cd02adb54134e658e064336fbcd158d
msgid "Modify the file `massa-node/base_config/initial_ledger.json`:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:98
#: bdae8a2ee57b4ee5a496aa1961addd5d
msgid "to add some Massa tokens to your newly created address."
msgstr ""

#: ../../web3-dev/massa-web3.rst:100
#: fd8edf1dc68d4ad5b12e91c7fda28713
msgid "In your smart-contract projects, use this `.env` file:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:108
#: e25da05b39f046698052fbaefe9252e0
msgid "Use the secret key that the node-client gave you when calling `wallet_generate_secret_key`. This wallet also needs to have some Massa coins, so it must appear in `massa-node/base_config/initial_ledger.json` before running the node with `cd massa-node && cargo run --features sandbox` in `massa <https://github.com/massalabs/massa>`_ directory."
msgstr ""

#: ../../web3-dev/massa-web3.rst:114
#: 5ea5041d3e394081a214ddceb195ead0
msgid "Modify the file `massa/massa-client/base_config/config.toml` to the localhost RPC:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:122
#: 9a1264d6be594671b23d311b82de313e
msgid "Start a client with the command `cargo run` in `massa/massa-client` directory."
msgstr ""

#: ../../web3-dev/massa-web3.rst:124
#: 93b69ffb8cbc4461ba1e2281e1a9dd81
msgid "You might want to sign transactions to call smart contracts in your frontend application:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:155
#: 966f550c060b492c972648fdb2666e77
msgid "This performs an HTTP POST call to Thyra, asking to create a transaction that will call the function named `hello` of the smart contract located at `A1nyzu9rJKnf2zz8F7mkM5d6ZoThnMuAtUdij9WmcwXWMWJFmEB` with the wallet name `wallet`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:160
#: 4ad02157fec643babca1124a136b3534
msgid "This opens a password prompt and you will be able to see the response of the call in the development tools of the browser. The response is the operation id, for example `2mLLkdKB4BY4hJQFNwGZ5oQVhky13EVZAwHJXCGQnd3FRHUoHw`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:164
#: d9e6ecfe461f42bd828a5a6a562a8816
msgid "If the operation failed, the response will contain the details."
msgstr ""

#: ../../web3-dev/massa-web3.rst:166
#: 1819247e130e46e3901c69675a609f20
msgid "Now you can now use commands of the node client to see the details of your operation:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:173
#: be3a7dc8fc064db19a265e74899aaf00
msgid "This will output something like"
msgstr ""

#: ../../web3-dev/massa-web3.rst:194
#: 6c775caf11d04ba98f11d5fb19969f06
msgid "`target parameter` is empty because parameters are encoded into bytes so it is unlikely to have printable characters."
msgstr ""

#: ../../web3-dev/massa-web3.rst:197
#: 36d4f7a253cf4d878ee31390227df7c9
msgid "You can also see events emitted by your contract (assuming that your contract is deployed at `A1nyzu9rJKnf2zz8F7mkM5d6ZoThnMuAtUdij9WmcwXWMWJFmEB`):"
msgstr ""

#: ../../web3-dev/massa-web3.rst:214
#: efb4422ea1374325b7a32ac983cd3ec4
msgid "In this example the event message is `Sum (2, 3) = 5`."
msgstr ""
