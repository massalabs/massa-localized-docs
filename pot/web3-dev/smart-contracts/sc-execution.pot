# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-03-23 00:48+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/sc-execution.rst:2
#: 4774e18dc1dc402795ff09febdaf6f23
msgid "Smart-contract execution"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:5
#: 22d020909c334d54bb9c6c549acaff73
msgid "Introduction"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:7
#: f64d031456a949f9abf644036e46fae2
msgid "Massa introduces more options when it comes to meeting different requirements for execution contexts. In particular, you are not limited to the standard way of deploying smart contract, and then calling that contract using a transaction."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:10
#: 5bec54bbf40c43c68a0d5ff3a42acc03
msgid "This documentation details the different possibilities regarding smart contract execution, and how to use them so that you can choose the one that most matches your use-case."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:13
#: c44ac4e4e06f4a40895611f6be9f7c25
msgid "You can find examples for the different ways to execute smart contracts in the smart contract sdk `massa-web3 <https://github.com/massalabs/massa-web3>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:17
#: a1785fd4e01740d3a3127d72e1b4413d
msgid "Different ways to execute smart contracts"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:20
#: df5825412d184e09b3a10ce4ef7afce9
msgid "\"Execute Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:22
#: 26768e67bc584f629541776e4cb17fa4
msgid "This operation allows to send a smart contract that will be executed on the blockchain (not stored), that can perform all the state changes as a normal smart contract. It's often the best way to deploy an other smart contract using the operation datastore of the execute operation. Our `deployer <https://github.com/massalabs/massa-sc-toolkit/blob/main/packages/sc-deployer/src/index.ts>`_ uses this operation to deploy smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:29
#: 971441b23c894526996b951b36a3f9a5
msgid "\"Call Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:31
#: 2c5c054406764ab88369347d19077928
msgid "This operation allows you to call the function of a smart contract that exists on the blockchain with specific parameters and coins."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:34
#: 6d3be9da4d5f4fbbbfaee7719ab2193d
msgid "An `example <https://github.com/massalabs/massa-web3#smart-contract-read-and-write-calls>`_ in massa-web3 shows you how to make the call smart-contract operation in JS/TS/NodeJS."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:38
#: c830f2ad6c794d2491864802386fc2a9
msgid "Read-only Execute and Call Smart Contract"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:40
#: c6fb10e08f974a0aa1d1e5fd5065b010
msgid "Read-only execute will \"dry-run\" a smart contract, i.e. execute as per normal, emitting its effects which can be read, but without propagating them into a block."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:43
#: 25dbacf5b4974a9895c505f5f604956c
msgid "Useful use-cases can include:"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:45
#: 50755e4a46fd43cb93fdfb4119499422
msgid "\"Dry-running\" future operations to estimate what their costs will be, and the state changes they imply"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:46
#: 2d2966aea14048eaa9bea207dfa7d990
msgid "Obtaining information on a smart contract, including its current state and stored data"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:48
#: cacb7bf250444b998abf4e37e5b57bd5
msgid "A concrete example using massa-web3 library compatible with JS/TS/NodeJS can be found `here <https://github.com/massalabs/massa-web3#smart-contract-read-and-write-calls>`_"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:52
#: 12bdc5b121fa4b649c6c3feabad52fc5
msgid "Call in Smart-contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:54
#: f77da09530d14a17b2421f1b7c1591c1
msgid "Calling one smart contract from another is a feature provided by the smart-contract Assembly Script SDK."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:56
#: 77dab96e86b14033a74fd2197dacbd15
msgid "`this example <https://github.com/massalabs/massa-sc-examples/blob/main/games/tictactoe/smart-contract/assembly/main.ts>` describes the use of the `call` function to send coins from the call source to the call destination."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:61
#: 4c0dd047864b494a9136fe9cc1ead4b8
msgid "Local Call in Smart Contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:63
#: 244936abfa214df5a1ef9efa43c09918
msgid "As the call function, you can also call a smart contract from the code of an other one, but execute it in your current context."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:66
#: 5a394cfd56c148f8ad678873fd794682
msgid "For example if the called smart contract uses the SDK function `Storage.set(key, value)`, the value will be set in the storage of the smart contract that made the call. The storage of the called smart contract won't be affected."
msgstr ""
