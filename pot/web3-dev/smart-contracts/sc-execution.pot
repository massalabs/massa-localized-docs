# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-20 00:08+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/sc-execution.rst:2
#: 4987579e66e642d2a66dc2c1817a4fc2
msgid "Smart-contract execution"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:5
#: 426cc8ad65804befb4a1cbf8b9b247e7
msgid "Introduction"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:7
#: 457578305ac4455ea232efc9b0b45ecf
msgid "Massa introduces more options when it comes to meeting different requirements for execution contexts. In particular, you are not limited to the standard way of deploying smart contract, and then calling that contract using a transaction."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:10
#: f9de2edc14424e8980bbaf6f35f28db1
msgid "This documentation details the different possibilities regarding smart contract execution, and how to use them so that you can choose the one that most matches your use-case."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:13
#: 0d5bad98745a460fa0ce0d4de4a63140
msgid "You can find examples for the different ways to execute smart contracts in the smart contract sdk `massa-web3 <https://github.com/massalabs/massa-web3>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:17
#: 8beb34c25f904530822324841e8f6e6e
msgid "Different ways to execute smart contracts"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:20
#: eb318494bb524dc8975f316720b4d9b0
msgid "\"Execute Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:22
#: 59914937566f4953877a4acc50b45aab
msgid "This operation allows to send a smart contract that will be executed on the blockchain (not stored), that can perform all the state changes as a normal smart contract. It's often the best way to deploy an other smart contract using the operation datastore of the execute operation. Our `deployer <https://github.com/massalabs/massa-sc-toolkit/blob/main/packages/sc-deployer/src/index.ts>`_ uses this operation to deploy smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:29
#: 9734cce41551413dacd59d8364c717a3
msgid "\"Call Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:31
#: 21f1033748c14cc6a49798c32284f192
msgid "This operation allows you to call the function of a smart contract that exists on the blockchain with specific parameters and coins."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:34
#: 46dd7fce19f24dad9e175bc92701915b
msgid "An `example <https://github.com/massalabs/massa-web3#smart-contract-read-and-write-calls>`_ in massa-web3 shows you how to make the call smart-contract operation in JS/TS/NodeJS."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:38
#: 5e8e624e967e472091dcd0b2ca8a713f
msgid "Read-only Execute and Call Smart Contract"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:40
#: 211580b684b74ea08903d16d8c50846b
msgid "Read-only execute will \"dry-run\" a smart contract, i.e. execute as per normal, emitting its effects which can be read, but without propagating them into a block."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:43
#: c1c725ae2e444b81994930a811fb8bc2
msgid "Useful use-cases can include:"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:45
#: 3ba6444221e94acab195218183d5c358
msgid "\"Dry-running\" future operations to estimate what their costs will be, and the state changes they imply"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:46
#: 5c4f319322b24097964ab36a26601a9c
msgid "Obtaining information on a smart contract, including its current state and stored data"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:48
#: 6a8450ffe9324f99acde7ff3a0b5183c
msgid "A concrete example using massa-web3 library compatible with JS/TS/NodeJS can be found `here <https://github.com/massalabs/massa-web3#smart-contract-read-and-write-calls>`_"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:52
#: cf022de98cb942a4aa5623c4e0138323
msgid "Call in Smart-contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:54
#: 3a872b4bd5ee49348e965379516b9081
msgid "Calling one smart contract from another is a feature provided by the smart-contract Assembly Script SDK."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:56
#: 23639ac90a064a949379aa736c7b47ce
msgid "`this example <https://github.com/massalabs/massa-sc-examples/blob/main/games/tictactoe/smart-contract/assembly/main.ts>` describes the use of the `call` function to send coins from the call source to the call destination."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:61
#: 2a59acc7226c476abfc6a37bf2f2f0ec
msgid "Local Call in Smart Contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:63
#: 26c248978a3d4a9395943e984d10dc6c
msgid "As the call function, you can also call a smart contract from the code of an other one, but execute it in your current context."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:66
#: ad71b3f400794201b8f770a766a23041
msgid "For example if the called smart contract uses the SDK function `Storage.set(key, value)`, the value will be set in the storage of the smart contract that made the call. The storage of the called smart contract won't be affected."
msgstr ""
