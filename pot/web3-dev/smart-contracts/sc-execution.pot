# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-06 00:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/sc-execution.rst:2
#: 0c32b2de7bbb451fa813067d95a178dd
msgid "Smart-contract execution"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:5
#: a95324304b4e4673b21565a8812f5504
msgid "Introduction"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:7
#: 59cbe9a0b6f04a138be3dcdd9d7e813f
msgid "Massa introduces more options when it comes to meeting different requirements for execution contexts. In particular, you are not limited to the standard way of deploying smart contract, and then calling that contract using a transaction."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:10
#: 2c8fd5217c8b470db2e5409067d00fb9
msgid "This documentation details the different possibilities regarding smart contract execution, and how to use them so that you can choose the one that most matches your use-case."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:13
#: e091c848659d4d94b8ddc525c38eff5f
msgid "You can find examples for the different ways to execute smart contracts in the smart contract sdk `massa-web3 <https://github.com/massalabs/massa-web3>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:17
#: ea78960cdfce49b9b3a8689883f24454
msgid "Different ways to execute smart contracts"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:20
#: 7559fa09bfa34b2ba121f98dc2f4096b
msgid "\"Execute Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:22
#: 1f870fce1b614169b5e82c43cf8beb6e
msgid "This operation allows to send a smart contract that will be executed on the blockchain (not stored), that can perform all the state changes as a normal smart contract. It's often the best way to deploy an other smart contract using the operation datastore of the execute operation. Our `deployer <https://github.com/massalabs/massa-sc-toolkit/blob/main/packages/sc-deployer/src/index.ts>`_ uses this operation to deploy smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:29
#: 1744ff2c630a4ad389fab7b66b30ce28
msgid "\"Call Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:31
#: cff0025ee38c4cb8bf8d42e2cacb4556
msgid "This operation allows you to call the function of a smart contract that exists on the blockchain with specific parameters and coins."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:34
#: 4982b1f030d64b2ea273f6801a36f834
msgid "An `example <https://github.com/massalabs/massa-web3#smart-contract-read-and-write-calls>`_ in massa-web3 shows you how to make the call smart-contract operation in JS/TS/NodeJS."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:38
#: c2e3dc0f750f4aadbf0daf5925d2c93d
msgid "Read-only Execute and Call Smart Contract"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:40
#: 7b4fe65fdd6740429b648bed7742ef85
msgid "Read-only execute will \"dry-run\" a smart contract, i.e. execute as per normal, emitting its effects which can be read, but without propagating them into a block."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:43
#: 789974581ef446a9a6baf2a660220f4f
msgid "Useful use-cases can include:"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:45
#: 5da201d8d66f4d3284d4fb3bc0db5d5e
msgid "\"Dry-running\" future operations to estimate what their costs will be, and the state changes they imply"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:46
#: 78fd2ae7291544b1b67d41739179dbb1
msgid "Obtaining information on a smart contract, including its current state and stored data"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:48
#: 03ea6e06b3984c1c81c2502f9d9a41c8
msgid "A concrete example using massa-web3 library compatible with JS/TS/NodeJS can be found `here <https://github.com/massalabs/massa-web3#smart-contract-read-and-write-calls>`_"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:52
#: bf40c55c408d44fa85e0895f05a595eb
msgid "Call in Smart-contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:54
#: a8a824e22c8e48918975e87856298a49
msgid "Calling one smart contract from another is a feature provided by the smart-contract Assembly Script SDK."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:56
#: 46099fe3599b43589f0cd66d1cfe4cf0
msgid "`this example <https://github.com/massalabs/massa-sc-examples/blob/main/games/tictactoe/smart-contract/assembly/main.ts>` describes the use of the `call` function to send coins from the call source to the call destination."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:61
#: 27b96004afba47829c6bf9b31e47a298
msgid "Local Call in Smart Contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:63
#: 310e4e6733714d6dae4c85c4afa51a2d
msgid "As the call function, you can also call a smart contract from the code of an other one, but execute it in your current context."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:66
#: 3f9273b1319841e48df266846b00ca82
msgid "For example if the called smart contract uses the SDK function `Storage.set(key, value)`, the value will be set in the storage of the smart contract that made the call. The storage of the called smart contract won't be affected."
msgstr ""
