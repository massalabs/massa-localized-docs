# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-04-30 00:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/sc-execution.rst:2
#: 4ce450ba79f2425ba36584c4d08a10b3
msgid "Smart-contract execution"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:5
#: 579e3bce5f7f42d986acb5c6d6d24255
msgid "Introduction"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:7
#: 4768185e033d416a820a71860d2dc815
msgid "Massa introduces more options when it comes to meeting different requirements for execution contexts. In particular, you are not limited to the standard way of deploying smart contract, and then calling that contract using a transaction."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:10
#: 395d8f26a91a4b77a79f2804d639d0b1
msgid "This documentation details the different possibilities regarding smart contract execution, and how to use them so that you can choose the one that most matches your use-case."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:13
#: a9b031e0fa944cd59acc0734109356bd
msgid "You can find examples for the different ways to execute smart contracts in the smart contract sdk `massa-web3 <https://github.com/massalabs/massa-web3>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:17
#: e736f48f5a1a48e49cdb790488230141
msgid "Different ways to execute smart contracts"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:20
#: 7ec4543648b84e40b35f000751af2135
msgid "\"Execute Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:22
#: 73a1d0d4100e4c609082c912839252e6
msgid "This operation allows to send a smart contract that will be executed on the blockchain (not stored), that can perform all the state changes as a normal smart contract. It's often the best way to deploy an other smart contract using the operation datastore of the execute operation. Our `deployer <https://github.com/massalabs/massa-sc-toolkit/blob/main/packages/sc-deployer/src/index.ts>`_ uses this operation to deploy smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:29
#: 214a574a43c34d4fb35e20e19469f3f3
msgid "\"Call Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:31
#: 63967bc79af54d078406f0d81e4cef73
msgid "This operation allows you to call the function of a smart contract that exists on the blockchain with specific parameters and coins."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:34
#: 98158057a46d4075a3230d2b30d1cf4b
msgid "An `example <https://github.com/massalabs/massa-web3#smart-contract-read-and-write-calls>`_ in massa-web3 shows you how to make the call smart-contract operation in JS/TS/NodeJS."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:38
#: df5b27bfc9ab45ccacb21b6d8f57b7dc
msgid "Read-only Execute and Call Smart Contract"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:40
#: d894d7ceed3e4a01ae2121ca41ab4d0d
msgid "Read-only execute will \"dry-run\" a smart contract, i.e. execute as per normal, emitting its effects which can be read, but without propagating them into a block."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:43
#: 45971dbbafb54437a9144bdddc094695
msgid "Useful use-cases can include:"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:45
#: 9506c0a7031344db97b0f390a31780f1
msgid "\"Dry-running\" future operations to estimate what their costs will be, and the state changes they imply"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:46
#: f92ed646f900453d864afaabdca9a93f
msgid "Obtaining information on a smart contract, including its current state and stored data"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:48
#: 6efdc097c76740b1a96e585673b319b4
msgid "A concrete example using massa-web3 library compatible with JS/TS/NodeJS can be found `here <https://github.com/massalabs/massa-web3#smart-contract-read-and-write-calls>`_"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:52
#: c1f7738cc6a94a46a0f0cbb39a4a0611
msgid "Call in Smart-contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:54
#: 8654a1f260a847bc82a2df3068381493
msgid "Calling one smart contract from another is a feature provided by the smart-contract Assembly Script SDK."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:56
#: c8b7b7cb9d764bdc8bdfaeded2ef7d1f
msgid "`this example <https://github.com/massalabs/massa-sc-examples/blob/main/games/tictactoe/smart-contract/assembly/main.ts>` describes the use of the `call` function to send coins from the call source to the call destination."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:61
#: 193a71bbea294fe88468d8eff0ac1188
msgid "Local Call in Smart Contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:63
#: d944a9ea63c94ccbb9f0a72b10192272
msgid "As the call function, you can also call a smart contract from the code of an other one, but execute it in your current context."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:66
#: 796349b5d7614c8088ee60f1ac15c715
msgid "For example if the called smart contract uses the SDK function `Storage.set(key, value)`, the value will be set in the storage of the smart contract that made the call. The storage of the called smart contract won't be affected."
msgstr ""
