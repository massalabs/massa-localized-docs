# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-13 00:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/sc-execution.rst:2
#: f1af550c5fbc41d9b99a5b3a92c8f617
msgid "Smart-contract execution"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:5
#: ba995cec04fb4c40994aec505e4aa57e
msgid "Introduction"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:7
#: 717ec9f35b04486b93d91cad36728db4
msgid "Massa introduces more options when it comes to meeting different requirements for execution contexts. In particular, you are not limited to the standard way of deploying smart contract, and then calling that contract using a transaction."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:10
#: baa5fffab5ce4ded8c95c12e39a51af3
msgid "This documentation details the different possibilities regarding smart contract execution, and how to use them so that you can choose the one that most matches your use-case."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:13
#: 01b375d77fac463a9f913e0b099d1b0d
msgid "You can find examples for the different ways to execute smart contracts in the smart contract sdk `massa-web3 <https://github.com/massalabs/massa-web3>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:17
#: 3c1aeaaed75c4e9fbfe6fb62c9695ca9
msgid "Different ways to execute smart contracts"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:20
#: 4e8811020e6c4f949e1ba9024bd32238
msgid "\"Execute Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:22
#: 3d4ad7220e0547ffb7d753504906ab61
msgid "This operation allows to send a smart contract that will be executed on the blockchain (not stored), that can perform all the state changes as a normal smart contract. It's often the best way to deploy an other smart contract using the operation datastore of the execute operation. Our `deployer <https://github.com/massalabs/massa-sc-toolkit/blob/main/packages/sc-deployer/src/index.ts>`_ uses this operation to deploy smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:29
#: 9ed3fc4a295e4bab8b343efdb4e12639
msgid "\"Call Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:31
#: 5903c98f0a924a5cb0a8a63afaaac054
msgid "This operation allows you to call the function of a smart contract that exists on the blockchain with specific parameters and coins."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:34
#: 39b868219203453d8e0dd6bf4c1b52e4
msgid "An `example <https://github.com/massalabs/massa-web3#smart-contract-read-and-write-calls>`_ in massa-web3 shows you how to make the call smart-contract operation in JS/TS/NodeJS."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:38
#: 02178a17b9cb484fa32a290276f0bf95
msgid "Read-only Execute and Call Smart Contract"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:40
#: 228c1bb9dccf43f98b16db56ff55ed72
msgid "Read-only execute will \"dry-run\" a smart contract, i.e. execute as per normal, emitting its effects which can be read, but without propagating them into a block."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:43
#: d1cff71d6f07492a99d4e7c478bef8e4
msgid "Useful use-cases can include:"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:45
#: 559ac424f0e54f3c8cf71195d25afe82
msgid "\"Dry-running\" future operations to estimate what their costs will be, and the state changes they imply"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:46
#: 863d91b823e44d45b07d4f9cc049b7a1
msgid "Obtaining information on a smart contract, including its current state and stored data"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:48
#: b95612ba793943d581c8d4426f43074b
msgid "A concrete example using massa-web3 library compatible with JS/TS/NodeJS can be found `here <https://github.com/massalabs/massa-web3#smart-contract-read-and-write-calls>`_"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:52
#: 1ace9f99d1da4bdb87d7ed4529ee2889
msgid "Call in Smart-contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:54
#: 1c0def9e6cdc448b9f0bec3588dbc7f5
msgid "Calling one smart contract from another is a feature provided by the smart-contract Assembly Script SDK."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:56
#: 225b785bb9274361aa9e14c2e4914842
msgid "`this example <https://github.com/massalabs/massa-sc-examples/blob/main/games/tictactoe/smart-contract/assembly/main.ts>` describes the use of the `call` function to send coins from the call source to the call destination."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:61
#: 5fc1a4248ee74e7bbe01e3a917d2ed95
msgid "Local Call in Smart Contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:63
#: fc662066612d45468dfaa94c8e65da78
msgid "As the call function, you can also call a smart contract from the code of an other one, but execute it in your current context."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:66
#: 3cefe531c892414faa4f5c0d0fda9943
msgid "For example if the called smart contract uses the SDK function `Storage.set(key, value)`, the value will be set in the storage of the smart contract that made the call. The storage of the called smart contract won't be affected."
msgstr ""
