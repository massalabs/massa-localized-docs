# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-18 00:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:4
#: 7d0ea5c70bdf423ba75c5defc5e7ac32
msgid "Autonomous Smart Contract"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:6
#: ccc720f17b70412d9ea7801cb10fd50c
msgid "Massa smart contracts have the unique feature of being able to autonomously define when they will be active, without external actors. By the end of this page, you will have a basic understanding of"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:8
#: 27bc02cab31f487085c06cc466699c36
msgid "The mechanisms behind autonomous smart contracts"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:9
#: 5e91339131e04d478d1032b43ff9c2af
msgid "How to use the sendMessage(...) ABI in order to make your smart contracts autonomous"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:10
#: d81212f5015749379d72390a04ee2781
msgid "Provided autonomous smart contracts examples"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:13
#: 43db2440ac7840ebb229f144228d3795
msgid "Mechanism in Massa network"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:15
#: 32355233738944fb92df25bbc548a31d
msgid "This system works by emitting messages which will schedule an execution. To do so, the following must be specified:"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:17
#: 63fb410304c048a1995fce65ebae70b8
msgid "The address of the SC to be executed"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:18
#: 10f4e11618d2488fa006630e912955d1
msgid "The function to be executed"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:19
#: 49c3a25e272d4e06aa6f29ce5ba24ce2
msgid "The desired execution window"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:20
#: a5e21f6f1d76498c97a90294c96cead1
msgid "(Optional) The activation triggers"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:22
#: 76fd569575434c5cbc025eb10f40f1a0
msgid "Normally, when you submit an operation, the operation is sent in the operation pool and in the future included in a block to be executed: you pay the gas at execution time. With autonomous SCs, the message is emitted inside of the operation and and you pay the gas for the message execution upfront. The message is then sent to another pool called the async pool."
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:25
#: aa8fee3dbdc542e69b95c566bbc9cab5
msgid "This pool is deterministic by nature, as it's filled with information that comes from operations included in blocks which is processed by every node of the network."
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:27
#: 8e2f760156a3422daf99cff40f630e37
msgid "The pool has a finite size, and sorts its messages with a similar behaviour as the operation pool: there is a priority, which is computed from the message emission fees, maximum execution gas, and length of the execution window. The messages get removed after a certain number of slots if they were not executed."
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:29
#: c14359d6db614f1d877605a3491ba3c3
msgid "The number of messages that can be executed by each slot are limited by a maximum amount of gas like normal operations and so it's possible that your message isn't executed at the slot that you want (such as operations that could be not included in the first block after you sent it), but in a later slot, when there is enough space to include your message. If you want to have your message to be included as soon as possible, you have to put more fees than the others (just like the operations)."
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:34
#: cb371bf857b04616a6dc832b56f97e1b
msgid "The order of the messages is determined by the formula:"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:36
#: ae65759ce98b4167ae3090bed452eb36
msgid "`(Reverse(Ratio(msg.fee, max(msg.max_gas,1))), emission_slot, emission_index)`"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:38
#: 252311229ff14103a916fcf7cdcd2bd1
msgid "where `emission_index` is an index that differentiate multiple messages created in the same slot."
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:41
#: 84ef233c4a124e8a88d582fcc023cf50
msgid "Use sendMessage to add autonomy in your smart contracts"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:43
#: 454f55b040874a15b268a3b0456fcd6c
msgid "As we've just seen, the core principal enabling the autonomous smart contracts feature, is the ability to emit a special message which has the effect of executing a desired function call at a specified window in time, and (optionally) when other specified conditions are met."
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:45
#: 8f846508991641a8b2e0b8afab4a274b
msgid "The ABI method `sendMessage(...)` is the key to emitting such a message, and the provided parameters define its configuration:"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:47
#: a7d97ff92d0b49f78c4b1466463a07bc
msgid "`at`: Address of the smart-contract that you want to wakeup(can be yourself)"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:48
#: 6b3a904f1dfd4b9eb06dce27ce371c76
msgid "`functionName`: Function of the smart-contract to call"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:49
#: b887443c77694a14a7ad4c4886e10f08
msgid "`validityStartPeriod` and `validityStartThread`: First slot where your message could be executed"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:50
#: 59b2f10bc22d410bb70b962dcb12a51f
msgid "`validityEndPeriod` and `validityEndThread`: Last slot where you message can be executed"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:51
#: eb86173c6a174788822ea139f10e5725
msgid "`maxGas`: Maximum amount of gas for the execution of the function referenced in the message"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:52
#: c9213b721d0f4db4a8e9ee10fa67c09c
msgid "`rawFee`: A fee to gain prority in the async pool"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:53
#: b52e3cafa0d94f14af5271ccee4bb4de
msgid "`coins`: Coins that will be passed to the smart contract called in the message"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:54
#: 9207ec561c18432c96733263e79092a0
msgid "`data`: Parameter of the function called in the message"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:55
#: 17efcda61eb34e0cb517eb6030a752e3
msgid "`filterAddress`: An optional address that you can define if you want your function to be executed in your validity period BUT only after a modification in the data of the address (balance, bytecode, datastore)"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:56
#: 0e3dd93de77540b5a6c5ee2f172db934
msgid "`filterKey`: An optional datastore key that will execute the message only if there is changes on this datastore key of the `filterAddress`"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:59
#: e37a45bfbb3444be9432e03ac954ead7
msgid "Examples"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:61
#: 66b19d5d35864067ad66dd3a310c80ff
msgid "You can find an example of autonomous smart contracts in `this ticker example <https://github.com/massalabs/massa-sc-examples/tree/main/ticker>`__, where `sendMessage(...)` is used `here <https://github.com/massalabs/massa-sc-examples/blob/a69dd88079caf0932e638689a518627b15a4d407/ticker/assembly/contracts/oracle.ts#L25>`__"
msgstr ""
