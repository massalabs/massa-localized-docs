# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-22 00:51+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:4
#: 7d313939e8ab481fa6952f38d887a5e8
msgid "Autonomous Smart Contract"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:6
#: 5b7d546c4ee548868e15545d394f66a3
msgid "Massa smart contracts have the unique feature of being able to autonomously define when they will be active, without external actors. By the end of this page, you will have a basic understanding of"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:8
#: 2a8988779740415c86fbf6bc51126ecf
msgid "The mechanisms behind autonomous smart contracts"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:9
#: 670a129e654746e9a153c4ab9ead5ae6
msgid "How to use the sendMessage(...) ABI in order to make your smart contracts autonomous"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:10
#: f329ceb239ca41389e4bef1e65e3af62
msgid "Provided autonomous smart contracts examples"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:13
#: b322dd0adcef4e2aa9cb0457a1a3788b
msgid "Mechanism in Massa network"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:15
#: c18732c31c7046f9b9b1300d99b72b89
msgid "This system works by emitting messages which will schedule an execution. To do so, the following must be specified:"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:17
#: 86175950611144e6a4d713c1489af08f
msgid "The address of the SC to be executed"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:18
#: dbb90b699b5f4785a57f6a89c4b0a350
msgid "The function to be executed"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:19
#: d037339f0f1d4442b5025129cb67e3dd
msgid "The desired execution window"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:20
#: f6655ffa97494456ab330038dbb58d7f
msgid "(Optional) The activation triggers"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:22
#: 3ae7dea4a59c4a78b2f22e3aab4f77b7
msgid "Normally, when you submit an operation, the operation is sent in the operation pool and in the future included in a block to be executed: you pay the gas at execution time. With autonomous SCs, the message is emitted inside of the operation and and you pay the gas for the message execution upfront. The message is then sent to another pool called the async pool."
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:25
#: 02daf52596e34b85a5ca5b79c9e8e727
msgid "This pool is deterministic by nature, as it's filled with information that comes from operations included in blocks which is processed by every node of the network."
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:27
#: 00d471f8196d4914abd9fdbd403226ca
msgid "The pool has a finite size, and sorts its messages with a similar behaviour as the operation pool: there is a priority, which is computed from the message emission fees, maximum execution gas, and length of the execution window. The messages get removed after a certain number of slots if they were not executed."
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:29
#: fd7593e41e1e4ff9b86d7bd6cee6731f
msgid "The number of messages that can be executed by each slot are limited by a maximum amount of gas like normal operations and so it's possible that your message isn't executed at the slot that you want (such as operations that could be not included in the first block after you sent it), but in a later slot, when there is enough space to include your message. If you want to have your message to be included as soon as possible, you have to put more fees than the others (just like the operations)."
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:34
#: 1ca6f86323c64ba98ce1655cdc6d7cd5
msgid "The order of the messages is determined by the formula:"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:36
#: fd490da7b58d4ce0b0ea4919961d0334
msgid "`(Reverse(Ratio(msg.fee, max(msg.max_gas,1))), emission_slot, emission_index)`"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:38
#: 24a8518e14bc454891a7419487e42a27
msgid "where `emission_index` is an index that differentiate multiple messages created in the same slot."
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:41
#: d8a667a954fc450e948300c8e6a80442
msgid "Use sendMessage to add autonomy in your smart contracts"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:43
#: d1e848b9598148ef9f195c407142228b
msgid "As we've just seen, the core principal enabling the autonomous smart contracts feature, is the ability to emit a special message which has the effect of executing a desired function call at a specified window in time, and (optionally) when other specified conditions are met."
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:45
#: 4ad6cbd9070545fbb74f39c82518ebc5
msgid "The ABI method `sendMessage(...)` is the key to emitting such a message, and the provided parameters define its configuration:"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:47
#: 58ae1ef650eb4bc4b2eb8e25f82a0aea
msgid "`at`: Address of the smart-contract that you want to wakeup(can be yourself)"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:48
#: 13f6058788b245818069a92c3fc6937f
msgid "`functionName`: Function of the smart-contract to call"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:49
#: 0dc25d29e3ea49489aca9566b56c5e7b
msgid "`validityStartPeriod` and `validityStartThread`: First slot where your message could be executed"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:50
#: 4244bc991a994f0da2d7b34999cfac5a
msgid "`validityEndPeriod` and `validityEndThread`: Last slot where you message can be executed"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:51
#: 81460403ca744b3cb37340ee2cdbeb47
msgid "`maxGas`: Maximum amount of gas for the execution of the function referenced in the message"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:52
#: 6c349ac8c5be45feac5a3033d43208a9
msgid "`rawFee`: A fee to gain prority in the async pool"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:53
#: 38542c0e5f1548cb9d4e5abcf84aff0f
msgid "`coins`: Coins that will be passed to the smart contract called in the message"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:54
#: 83406429f64d44c7abd3029683f2350b
msgid "`data`: Parameter of the function called in the message"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:55
#: 74d5b0c28020441fb072b64bd57811bf
msgid "`filterAddress`: An optional address that you can define if you want your function to be executed in your validity period BUT only after a modification in the data of the address (balance, bytecode, datastore)"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:56
#: c1a4a5e2674746c68f7fd153ba6394ed
msgid "`filterKey`: An optional datastore key that will execute the message only if there is changes on this datastore key of the `filterAddress`"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:59
#: 6580babcab584ec9b554ad2317899437
msgid "Examples"
msgstr ""

#: ../../web3-dev/smart-contracts/autonomous-smart-contract.rst:61
#: b5f21e41406d44a88be70859c297cd9a
msgid "You can find an example of autonomous smart contracts in `this ticker example <https://github.com/massalabs/massa-sc-examples/tree/main/ticker>`__, where `sendMessage(...)` is used `here <https://github.com/massalabs/massa-sc-examples/blob/a69dd88079caf0932e638689a518627b15a4d407/ticker/assembly/contracts/oracle.ts#L25>`__"
msgstr ""
