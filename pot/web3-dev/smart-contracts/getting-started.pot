# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-15 00:53+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/getting-started.rst:6
#: 9b5117776f0f4889a21cff7195225cc1
msgid "Getting started"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:8
#: 1ea9eeae595b457f8c64176ce1d74b7e
msgid "In this section you will learn how to compile your first Massa smart contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:11
#: 8dc52c034e054aa2a6c815c2ea037b34
msgid "Setting up a new project"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:13
#: 09086a2b822f41b0a04ff0f3c8d5f6b1
msgid "Make sure you have a recent version of `Node.js <https://nodejs.org/>`_  and `npm <https://www.npmjs.com/>`_. Update or `install <https://docs.npmjs.com/downloading-and-installing-node-js-and-npm>`_ them if needed."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:16
#: 376531aebd0c4daeb57f193f536acaf7
msgid "`massa-sc-toolkit <https://github.com/massalabs/massa-sc-toolkit/>`_ is a tool that creates a boilerplate smart-contract project. To create a smart-contract project, invoke the toolkit by running:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:23
#: 0a034760b112430dbfa65f89a498b9ae
msgid "You have now npm project created with AssemblyScript installed among other dependencies. It will be used to generate bytecode from AssemblyScript code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:27
#: 0b854e402a9346298e66a6be1040a102
msgid "Massa smart-contract module (`@massalabs/massa-as-sdk`) contains the API you need to use to interact with the external world of the smart contract (the node, the ledger...)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:30
#: 28dab3e50a584884bd098f51e8761bd3
msgid "Congratulations! Now you have a fully set up project and you are ready to add some code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:33
#: eb1b5ed8ee9540538999fd432524f149
msgid "A few words on project folders:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:35
#: c1f0261ebe9e489cbed88505bbb5b0bb
msgid "`assembly` is where the code goes;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:36
#: f6c0f09708ea48a9b2e0eefc7f440062
msgid "`build` will be created during compilation and will contain compiled smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:39
#: 7315a063508e48829b9432c0e05c8fb7
msgid "Create your first smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:41
#: b9ead391cb9740ab87b94204142aab71
msgid "Since the beginning of mankind, humans explain how to use a program, a new language, a service by implementing a *Hello world!*. Your first smart contract will be no exception!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:44
#: 577903c3acb0499b919de90fe00ddec0
msgid "Open the `main.ts` file in the `assembly` directory at the root of your project. Replace the code in the file by the following code:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:55
#: 12675ff7a14d44cd8a7e90b2f677a8a2
msgid "Don't forget to save the file. Before starting compilation, just a few words to describe what is used here:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:57
#: 553f539dbb674f89ac439a317d6cb7d3
msgid "line 1: `generateEvent` function is imported from Massa SDK (@massalabs/massa-as-sdk). This function will generate an event with the string given as argument. Events can be later recovered using a Massa client."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:59
#: 7f335dcefac04463876c831c25319599
msgid "line 3: `main` function is exported. This means that the main function will be callable from the outside of the WebAssembly module (more about that later)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:61
#: 54bf2d8bacad451f89a9e250e5fd8473
msgid "line 4: `generateEvent` function is called with \"Hello world!\". Brian, we are thinking of you!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:63
#: d332bb75752e4c5890864c4019bfba80
msgid "Now that everything is in place, we can start the compilation step by running the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:69
#: 5ee156919c554cbfb2f18a7249531d07
msgid "Congratulations! You have generated your first smart contract: the `main.wasm` file in `build` directory. Note that a `deployer.wasm` file has also been generated. It will be used to deploy your contract on Massa network."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:74
#: a9e7b54fce25406fac63bb1987460060
msgid "If due to bad luck you have an error at compilation time:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:76
#: c4f703c80114469fa202e056d6b8dd8a
msgid "check that you properly followed all the steps,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:77
#: a323ba30aaf749af8d90d14381edd309
msgid "do a couple a internet research,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:78
#: 63fbbf165b5940918e09d9f9556db550
msgid "look for any similar issue (open or closed) in `massa-as-sdk <https://github.com/massalabs/massa-as-sdk/>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:80
#: af8264958ba64c0c8679e7efe5df521c
msgid "If you find nothing, feel free to contact us on `Discord <https://discord.gg/massa>`_ or directly open an `issue <https://github.com/massalabs/massa-as-sdk/issues>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:84
#: d65eeb30f2eb45e2b31ea40f9440bf8f
msgid "Deploy your smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:86
#: 539eb5e292dd41a8899038769bd5a180
msgid "Your smart contract is now ready to be pushed and executed on the Massa network. In order to deploy it, you need to own a Massa wallet and some MAS coins on it."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:90
#: bac9b72977a64e0dbb5b024ea8d0e22b
msgid "If you don't have any wallet configured yet, :ref:`create a new one <wallet>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:91
#: a6c562a14baf42b08943aa140ce85086
msgid "If you're using a brand new wallet, add some coins by sending your address to `testnet-faucet discord channel <https://discord.com/channels/828270821042159636/866190913030193172>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:94
#: d4a000ba9a884093a58c7a30ba842f9f
msgid "In any case, keep the `Address` and `Secret key` of your wallet, you will use it later."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:96
#: 25132e743acd43a8aadcb335ecb513a8
msgid "There are two ways you can deploy your smart contract. The easiest and the recommended way is to deploy the smart contract with the smart-contract toolkit (:ref:`Option 1 <sc-option-1>` below)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:99
#: 776b8321c1fe467ab6fcabc4b5ee0841
msgid "The second option is to deploy the smart contract, through Massa client, by running your own node (:ref:`Option 2 <sc-option-2>`)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:105
#: c79b931733f94fe596b2269242181146
msgid "Option 1: Deploy your smart contract from the toolkit"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:107
#: d6044c37dc0e439a84f38dc03c4d3918
msgid "To send the transaction on the network, you need to provide your wallet's secret key. This is done using environment variable in `.env` file."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:114
#: 24edb42c657849f490a6b2bcc3c1ac0c
msgid "This command will create a `.env` file. Now fill it with your wallet secret key."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:116
#: e5136c75b1234e6fae76e402a3c6587f
msgid "Then run the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:122
#: 6a082acccd4a407cb7301153f70ee40b
msgid "Wait for a few seconds... It should return you the deployed smart contract address."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:127
#: 68d8574fcc56475b8440edacebef05d4
msgid "Option 2: Execute your smart contract on your own node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:129
#: 100522846c5e496eb89e083d28f6dee9
msgid "To execute the smart contract you will need:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:131
#: b3e5473ab1c64f708e2d9381f69eb0f4
msgid "A client configured with an address having coins."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:132
#: 1a73ef34ab2b45cf8bb20952e0b9a28d
msgid "A smart contract compiled in WebAssembly (see previous step)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:134
#: b47e2a14a42e4381b8432911097323b7
msgid "Let's go!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:137
#: 70fc329573584e899fe8e14abf6706de
msgid "Configure the client"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:139
#: e63e0801f7b34de083196b3f296c59f4
msgid "Make sure that you have the latest version of the Massa node. If not, :ref:`install it <testnet-install>` and :ref:`run it <testnet-running>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:144
#: a5c61ae50bdf4605bd5bdecd226fdc44
msgid "You can also execute your smart-contract on a local sandbox node. To learn more about sandbox node, follow this tutorial: :ref:`Local network generation <local-network-generation>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:149
#: 461f829b8d1e4e11b6269c2b1387cf4b
msgid "Execute the smart contract on the node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:151
#: 401e64cfcebc4cd6a60042546759be91
msgid "Everything is in place, we can now execute the `hello world` smart contract on your local node with the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:160
#: 456da92285e94994b0fa4ea21988c822
msgid "We are executing the send_smart_contract command with 6 parameters:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:162
#: 2ac7a34e2a6246a2b1e1ae2ab4c77a18
msgid "<address>: the address of your wallet kept during previous step;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:163
#: 5d9c7d4952ad468aa19c1c7d06e3c819
msgid "<path to wasm file>: the full path (from the root directory to the file extension .wasm) of the hello smart contract, generated in the previous chapter."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:165
#: 42f19c56751c4e8cada14ff8d0e5fc3b
msgid "100000: the maximum amount of gas that the execution of your smart contract is allowed to use."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:166
#: a16543780b9141cc867a6676da9d1cdf
msgid "Two 0 parameters that can be safely ignored by now. If you want more info on them, use the command `help send_smart_contract`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:170
#: 4fea5799ff2f4aa3b2d5d621e0a0208f
msgid "To go inside the **client cli**, open a terminal in `massa/massa-client` directory and run `cargo run`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:172
#: 50b86ab7b7c94afb91e9b88dd5204061
msgid "If everything went fine, the following message should be prompted:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:179
#: 002412d14ae44b4cbd6dfda42383de39
msgid "In that case, you should be able to retrieve the event with the `Hello world` emitted. Use the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:186
#: 1ed231258d9448c8a21655adc6dd6f2f
msgid "If everything went well you should see a message similar to this one:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:198
#: 68640e540e8c446c80e0baf7c24b26ac
msgid "Congratulations! You have just executed your first smart contract!"
msgstr ""
