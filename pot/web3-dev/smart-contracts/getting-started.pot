# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-20 00:51+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/getting-started.rst:6
#: 4695d2721ae14fbd844f765598599aa4
msgid "Getting started"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:8
#: 1f8f54e204364326835bdc33fcf8d600
msgid "In this section you will learn how to compile your first Massa smart contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:11
#: 5dfb9a8a3dc0475590297faad878ed06
msgid "Setting up a new project"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:13
#: a41949317da349758642d33abdd60641
msgid "Make sure you have a recent version of `Node.js <https://nodejs.org/>`_  and `npm <https://www.npmjs.com/>`_. Update or `install <https://docs.npmjs.com/downloading-and-installing-node-js-and-npm>`_ them if needed."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:16
#: 2c62c3d7a94e4667a2dd873cf80eed0f
msgid "`massa-sc-toolkit <https://github.com/massalabs/massa-sc-toolkit/>`_ is a tool that creates a boilerplate smart-contract project. To create a smart-contract project, invoke the toolkit by running:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:23
#: 14660d59c1294b658f8d23993622a1a8
msgid "You have now npm project created with AssemblyScript installed among other dependencies. It will be used to generate bytecode from AssemblyScript code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:27
#: c9ddb068eb2e4818abf096f3be8e777a
msgid "Massa smart-contract module (`@massalabs/massa-as-sdk`) contains the API you need to use to interact with the external world of the smart contract (the node, the ledger...)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:30
#: d11cf62ee50a483c817af5485d95dd57
msgid "Congratulations! Now you have a fully set up project and you are ready to add some code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:33
#: 6ca84dbdb4e04771a060b110eb50cd89
msgid "A few words on project folders:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:35
#: c07b18fd0bc045e8b4b3b52d3882136b
msgid "`assembly` is where the code goes;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:36
#: 036aea4f296549ebbb710b9fab90d69b
msgid "`build` will be created during compilation and will contain compiled smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:39
#: dba04bfda5284a2698f2ce345ad2c00c
msgid "Create your first smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:41
#: 001a34ab60e74959bd7cc7c6bab62e20
msgid "Since the beginning of mankind, humans explain how to use a program, a new language, a service by implementing a *Hello world!*. Your first smart contract will be no exception!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:44
#: 94d64a52677649d48a94a61afb4915d0
msgid "Open the `main.ts` file in the `assembly` directory at the root of your project. Replace the code in the file by the following code:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:55
#: 0351ebc90fde452980c2efcbeb555aea
msgid "Don't forget to save the file. Before starting compilation, just a few words to describe what is used here:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:57
#: 59900eb7b7d9474ab0ad4a417df34ab5
msgid "line 1: `generateEvent` function is imported from Massa SDK (@massalabs/massa-as-sdk). This function will generate an event with the string given as argument. Events can be later recovered using a Massa client."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:59
#: 3828c352101e4c82937e1a44e88e7a26
msgid "line 3: `main` function is exported. This means that the main function will be callable from the outside of the WebAssembly module (more about that later)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:61
#: ee5be6f4cba6446cb9cf7a7b46bee1ec
msgid "line 4: `generateEvent` function is called with \"Hello world!\". Brian, we are thinking of you!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:63
#: ca9bbd13f6fa4981af184be6878ef725
msgid "Now that everything is in place, we can start the compilation step by running the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:69
#: 32adcfa54b014055b849d5d24ba293a6
msgid "Congratulations! You have generated your first smart contract: the `main.wasm` file in `build` directory. Note that a `deployer.wasm` file has also been generated. It will be used to deploy your contract on Massa network."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:74
#: a24973f613bb47718decb41f25a07d97
msgid "If due to bad luck you have an error at compilation time:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:76
#: 43f30d44cc97401f9c9594ae81c8da7a
msgid "check that you properly followed all the steps,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:77
#: d012300a65734d2b9bbbc3715dfd4296
msgid "do a couple a internet research,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:78
#: a86b09b1be964430b71d0c33ed9787c6
msgid "look for any similar issue (open or closed) in `massa-as-sdk <https://github.com/massalabs/massa-as-sdk/>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:80
#: f1871e37f0cc4255990e59bad2bb8151
msgid "If you find nothing, feel free to contact us on `Discord <https://discord.gg/massa>`_ or directly open an `issue <https://github.com/massalabs/massa-as-sdk/issues>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:84
#: dd2f09c7c1e44ce1a57d31899b1d4d7a
msgid "Deploy your smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:86
#: af7411b7e7924cbaa81c272eb6172f9a
msgid "Your smart contract is now ready to be pushed and executed on the Massa network. In order to deploy it, you need to own a Massa wallet and some MAS coins on it."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:90
#: 3561db268e134270b1362e2728e80018
msgid "If you don't have any wallet configured yet, :ref:`create a new one <wallet>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:91
#: 117bb7b798d14cc792b471dc85e222e9
msgid "If you're using a brand new wallet, add some coins by sending your address to `testnet-faucet discord channel <https://discord.com/channels/828270821042159636/866190913030193172>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:94
#: 2331a297fb7541f384e15be02f29ff72
msgid "In any case, keep the `Address` and `Secret key` of your wallet, you will use it later."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:96
#: a0079256930e46cf88d1302b0976c977
msgid "There are two ways you can deploy your smart contract. The easiest and the recommended way is to deploy the smart contract with the smart-contract toolkit (:ref:`Option 1 <sc-option-1>` below)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:99
#: 0029546ddec34bb1a8594ef4bf270901
msgid "The second option is to deploy the smart contract, through Massa client, by running your own node (:ref:`Option 2 <sc-option-2>`)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:105
#: 6707e7f95bbd43399ec70c33bc8f4a81
msgid "Option 1: Deploy your smart contract from the toolkit"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:107
#: 3546247252cc41aa953409e93ee6455c
msgid "To send the transaction on the network, you need to provide your wallet's secret key. This is done using environment variable in `.env` file."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:114
#: c4ce3c76123b46dc83dfbeb405fb28f7
msgid "This command will create a `.env` file. Now fill it with your wallet secret key."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:116
#: b9bef7f90ded4837a98cce6d9fdf9500
msgid "Then run the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:122
#: e96356c5ac594cd996ccb8ba3f3b6070
msgid "Wait for a few seconds... It should return you the deployed smart contract address."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:127
#: a6eaae74afe84a4a914813de276d84c9
msgid "Option 2: Execute your smart contract on your own node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:129
#: 951b9e85af6148568a1797022fde9e8c
msgid "To execute the smart contract you will need:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:131
#: 2f3e830221ad412a843800ae80203f35
msgid "A client configured with an address having coins."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:132
#: 5929ee5894bc481ca446df7ce0a26205
msgid "A smart contract compiled in WebAssembly (see previous step)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:134
#: 8bedbdee4e81452588252cb5c70b41f9
msgid "Let's go!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:137
#: a90833a8d08543e4abd277622431be16
msgid "Configure the client"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:139
#: a8147de7055641afa8837f28ccea5bac
msgid "Make sure that you have the latest version of the Massa node. If not, :ref:`install it <testnet-install>` and :ref:`run it <testnet-running>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:144
#: e824f6f2808f497cb7ee2d97aeffd502
msgid "You can also execute your smart-contract on a local sandbox node. To learn more about sandbox node, follow this tutorial: :ref:`Local network generation <local-network-generation>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:149
#: 86cf5b15cd85492d87f01d381bcc5b24
msgid "Execute the smart contract on the node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:151
#: d5a2e8edf81544739b0812dab77897df
msgid "Everything is in place, we can now execute the `hello world` smart contract on your local node with the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:160
#: b58acdef56df4f2c9bf8a36e2185287b
msgid "We are executing the send_smart_contract command with 6 parameters:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:162
#: 1260534ed1744c54945c526bf7861a24
msgid "<address>: the address of your wallet kept during previous step;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:163
#: ea83b7e15b69411794243d488c18046e
msgid "<path to wasm file>: the full path (from the root directory to the file extension .wasm) of the hello smart contract, generated in the previous chapter."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:165
#: 7125f7b2bf6d40fa9cc156215437004a
msgid "100000: the maximum amount of gas that the execution of your smart contract is allowed to use."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:166
#: bc5519e182344302aed7d68964c82f0f
msgid "Two 0 parameters that can be safely ignored by now. If you want more info on them, use the command `help send_smart_contract`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:170
#: 4f5faafb378a40ed8fb7fc802e84c9ff
msgid "To go inside the **client cli**, open a terminal in `massa/massa-client` directory and run `cargo run`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:172
#: 44412500d24b4d61902ef4a74c6578c7
msgid "If everything went fine, the following message should be prompted:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:179
#: 38fecba98c2a4162bbea1ff24298a5f9
msgid "In that case, you should be able to retrieve the event with the `Hello world` emitted. Use the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:186
#: cc92b31c3e2744a7af77a4f57f58ad33
msgid "If everything went well you should see a message similar to this one:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:198
#: 26e91a9998394f92bedd6e0a9af612d3
msgid "Congratulations! You have just executed your first smart contract!"
msgstr ""
