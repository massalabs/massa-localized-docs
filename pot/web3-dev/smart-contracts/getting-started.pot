# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-29 16:26+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/getting-started.rst:6
#: f1ba4e2ab8d14e56a570d995b1c1e56e
msgid "Getting started"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:8
#: 7ff7d46be78b4586be7d8b8720149a1e
msgid "In this section you will learn how to compile your first Massa smart contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:11
#: 9ffcc3e0c46146ed9ef14eca03cddf14
msgid "Setting up a new project"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:13
#: 03913647bf7f494ab2433674e1401c7d
msgid "Make sure you have a recent version of `Node.js <https://nodejs.org/>`_  and `npm <https://www.npmjs.com/>`_ . Update or `install <https://docs.npmjs.com/downloading-and-installing-node-js-and-npm>`_ them if needed."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:16
#: c50128eb38624fe588e65eb9ef961b31
msgid "On ubuntu, an easy way to install Node.js is with snap"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:24
#: 213c5386e02d47ba88ef8e0a89afc530
msgid "On MacOS & Windows, use nvm:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:26
#: 180c6d9967d441539141a314e2a254c0
msgid "Follow the instructions here:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:27
#: 68668900a3b9441ea9cb1b09102898fc
msgid "[MacOS] `nvm <https://github.com/nvm-sh/nvm>`_"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:28
#: 1e5a6c9746c84d03a51ce6f1fd541b6c
msgid "[Windows] `nvm-windows <https://github.com/coreybutler/nvm-windows>`_"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:30
#: 0546759210e24f17bb52412e3af21bc1
msgid "`massa-sc-toolkit <https://github.com/massalabs/massa-sc-toolkit/>`_ is a tool that creates a boilerplate smart-contract project. To create a smart-contract project, invoke the toolkit by running:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:37
#: 601a8966307d4874aa4657b855a3c314
msgid "You have now npm project created with AssemblyScript installed among other dependencies. It will be used to generate bytecode from AssemblyScript code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:40
#: 325807ebbfee43cc94acdf8b9fec06b2
msgid "Massa smart-contract module (@massalabs/massa-as-sdk) contains the API you need to use to interact with the external world of the smart contract (the node, the ledger...)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:42
#: 6a421ef5fec2419783665782375ab8f9
msgid "Congratulations! Now you have a fully set up project and you are ready to add some code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:45
#: 11e8cdb580eb4f309a1662e91090695b
msgid "A few words on project folders:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:47
#: 06e93b1fc8534aff9ae2a6e7adec31cd
msgid "`assembly` is where the code goes;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:48
#: 5e942cbecec3469488f503887a7f3932
msgid "`build` will be created during compilation and will contain compiled smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:51
#: adb2a096ba1445efaa2e786a5cf6a588
msgid "Create your first smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:53
#: 8a196c6aabd24eb3b92a59450483b80a
msgid "Since the beginning of mankind, humans explain how to use a program, a new language, a service by implementing a *Hello world!*."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:55
#: c11927b1494147d3b001adb3a220cd7a
msgid "Your first smart contract will be no exception!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:59
#: b809e84fa8284782890e2d71250600ae
msgid "I'm told that it has nothing to do with the beginning of mankind but Brian Kernighan used it for the first time in *a tutorial introduction to the language B* published in 1972."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:61
#: 9179c1dd46b44a459d81a740a459fbb0
msgid "Open the `main.ts` file in the `assembly` directory at the root of your project. Replace the code in the file by the following code:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:71
#: bb4506df8b08490ea4c508733f100012
msgid "Donâ€™t forget to save the file. Before starting compilation, just a few words to describe what is used here:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:73
#: 8a26e63508fd4e57b8467f670620e6b9
msgid "line 1: `generateEvent` function is imported from Massa SDK (@massalabs/massa-as-sdk). This function will generate an event with the string given as argument. Events can be later recovered using a Massa client."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:74
#: 9b829b3d321e4f42ae8fe308f58db593
msgid "line 3: `main` function is exported. This means that the main function will be callable from the outside of the WebAssembly module (more about that later)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:75
#: 62488d2fdca04209a0a70987ec7e1755
msgid "line 4: `generateEvent` function is called with \"Hello world!\". Brian, we are thinking of you!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:77
#: ca5c65123fa24436921824e1f6022430
msgid "Now that everything is in place, we can start the compilation step by running the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:83
#: 0abdc75d73e3428cba6ee471a52abfe7
msgid "Congratulations! You have generated your first smart contract: the `main.wasm` file in `build` directory. Note that a `deployer.wasm` file has also been generated. It will be used to deploy your contract on Massa network."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:88
#: 62d850231a8e4c8b9a48e1776cfaa29f
msgid "If due to bad luck you have an error at compilation time:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:90
#: a415f37380dd4d8fa9e168d95f25bf40
msgid "check that you properly followed all the steps,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:91
#: b4162a815f284f39a55042e5f2f605b6
msgid "do a couple a internet research,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:92
#: bee694688b6147dabf994131482d68c5
msgid "look for any similar issue (open or closed) in `massa-as-sdk <https://github.com/massalabs/massa-as-sdk/>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:94
#: 539d7eeb8af04c36ab16f94f82e2cf20
msgid "If you find nothing, feel free to contact us on `Discord <https://discord.gg/massa>`_ or directly open an `issue <https://github.com/massalabs/massa-as-sdk/issues>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:97
#: 37d5307d456749b4bdb34e1509598feb
msgid "Deploy your smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:99
#: 224d49c616f041ca8bd7aaf7ce870728
msgid "Your smart contract is now ready to be pushed and executed on the Massa network. In order to deploy it, you need to own a Massa wallet and some MAS coins on it."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:102
#: 595e2c82b10c46d8bfdffdbab9d1bb50
msgid "If you don't have any wallet configured yet, :ref:`create a new one <wallet>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:104
#: 66f77f90f1364eabaab3e4e22a01d6d3
msgid "If you're using a brand new wallet, add some coins by sending your address to `testnet-faucet discord channel <https://discord.com/channels/828270821042159636/866190913030193172>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:106
#: 5b4ee57e91a0436a83b78c14582024dc
msgid "If you are using an existing wallet, make sure that you have some coins on it."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:108
#: 3a210bab2a4e4d10b2840beb759bb2fa
msgid "In any case, keep the `address` and `private_key` of your wallet, you will use it later."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:110
#: e3dcea133aa0480099f3b19461ce5b9a
msgid "There are two ways you can deploy your smart contract. The easiest and the recommended way is to deploy the smart contract with the smart-contract toolkit (Option 1 below)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:112
#: 3dad741e480747f39b84d2544cdde423
msgid "The second option is to deploy the smart contract, through Massa client, by running your own node (Option 2)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:115
#: 37ba056cfe3446f49ac79a978a25d349
msgid "Option 1: Deploy your smart contract from the toolkit"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:117
#: 7a08b073e3c94bcdb1f726e945995b7f
msgid "To send the transaction on the network, you need to provide your wallet's private key. This is done using environment variable in `.env` file."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:124
#: 5c8647520a3a474e994b702173f64b7f
msgid "This command will create a `.env` file. Now fill it with your wallet private key."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:126
#: da948d8ad27f46d99da602c91d4e4a7a
msgid "Then run the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:132
#: 8cd9e830217f4600aafe058e694aa303
msgid "Wait for a few seconds... It should return you the deployed smart contract address."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:136
#: 591ff93ccb6946b9a9525cd8ad2ec98f
msgid "Option 2: Execute your smart contract on your own node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:138
#: 7051fd71cac14d609c8d89babdd9372d
msgid "To execute the smart contract you will need:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:140
#: c9a36a3021a24abea16a67518024bb30
msgid "A client configured with an address having coins."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:141
#: 175c4e5a70a749718aca47ccc36bd178
msgid "A smart contract compiled in WebAssembly (see previous step)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:143
#: 515f5a3fb7f142d394ce11a1385a0fc1
msgid "Let's go!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:146
#: b89a66dab7594de7a2200bd19efdf101
msgid "Configure the client"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:148
#: 2b8c24bcff4249fb8988e1f5b6206ac8
msgid "Make sure that you have the latest version of the Massa node. If not, :ref:`install it <testnet-install>` and :ref:`run it <testnet-running>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:152
#: 431c2176e8124eb6baf07b6b3e48e5ea
msgid "You can also execute your smart-contract on a local sandbox node. To learn more about sandbox node, follow this tutorial: :ref:`Local network generation <local-network-generation>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:155
#: 08dd66b9881b43dfa17f53de21c139e3
msgid "Execute the smart contract on the node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:157
#: c2602ed38bb94f3a9b5805d689132e18
msgid "Everything is in place, we can now execute the `hello world` smart contract on your local node with the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:165
#: e9f39100909a4dc1abf66f4abbe89893
msgid "We are executing the send_smart_contract command with 6 parameters:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:167
#: 7a73278623ea4de6a38b1890e849eeb6
msgid "<address>: the address of your wallet kept during previous step;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:168
#: a5a7f6bd213b40bd8a74e7b0b5fb8422
msgid "<path to wasm file>: the full path (from the root directory to the file extension .wasm) of the hello smart contract, generated in the previous chapter."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:169
#: 3779baef5f014db2ba7d1d636eefca9b
msgid "100000: the maximum amount of gas that the execution of your smart contract is allowed to use."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:170
#: f73157f9d3a94e81adc8f1756f853ecf
msgid "Two 0 parameters that can be safely ignored by now. If you want more info on them, use the command `help send_smart_contract`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:174
#: 4b396e03965d4b78a94dddd01ba6181b
msgid "To go inside the **client cli**, open a terminal in `massa/massa-client` directory and run `cargo run`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:176
#: 0c9f0b838da14c97937de884ce561185
msgid "If everything went fine, the following message should be prompted:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:183
#: 3a67d4c122a5407eb033f3d993635bc0
msgid "In that case, you should be able to retrieve the event with the `Hello world` emitted. Use the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:189
#: 3e4156a0341c47bbb3cd3b387609cbe8
msgid "If everything went well you should see a message similar to this one:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:201
#: 8e7644dee1844b94a037ed8cddb2e65f
msgid "Congratulations! You have just executed your first smart contract!"
msgstr ""
