# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-14 00:51+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/getting-started.rst:6
#: a98e1c2e0eab406b960540db8ec06980
msgid "Getting started"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:8
#: fc21f28690e844aa8531119f17745818
msgid "In this section you will learn how to compile your first Massa smart contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:11
#: e03708fdbd8d454e9df0f737d80f53cd
msgid "Setting up a new project"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:13
#: 916c551a072e4f87b4a08a244bfe563e
msgid "Make sure you have a recent version of `Node.js <https://nodejs.org/>`_  and `npm <https://www.npmjs.com/>`_. Update or `install <https://docs.npmjs.com/downloading-and-installing-node-js-and-npm>`_ them if needed."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:16
#: f77859e319ac4fd09c2b249badeecb81
msgid "`massa-sc-toolkit <https://github.com/massalabs/massa-sc-toolkit/>`_ is a tool that creates a boilerplate smart-contract project. To create a smart-contract project, invoke the toolkit by running:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:23
#: ed45674817eb45089f92b5869bc846a6
msgid "You have now npm project created with AssemblyScript installed among other dependencies. It will be used to generate bytecode from AssemblyScript code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:27
#: 2c1bfcf3839b4fd3b8b4a62a35f0befc
msgid "Massa smart-contract module (`@massalabs/massa-as-sdk`) contains the API you need to use to interact with the external world of the smart contract (the node, the ledger...)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:30
#: 107048d28bef476ba4036397e92e9471
msgid "Congratulations! Now you have a fully set up project and you are ready to add some code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:33
#: 640f14c8781241b0a4e00da066b22fb6
msgid "A few words on project folders:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:35
#: 11d6a861c7d14168bf98706e02607124
msgid "`assembly` is where the code goes;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:36
#: 2e3b82ad5de24a34a2c242d0b66c3e68
msgid "`build` will be created during compilation and will contain compiled smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:39
#: 5d888a7e7dc040cf9c77833557b27601
msgid "Create your first smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:41
#: 6d3bdc454b704ff79b618340db7fb635
msgid "Since the beginning of mankind, humans explain how to use a program, a new language, a service by implementing a *Hello world!*. Your first smart contract will be no exception!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:44
#: 6a36845e6e3b4bcf9c0ea97f1c6dfc4d
msgid "Open the `main.ts` file in the `assembly` directory at the root of your project. Replace the code in the file by the following code:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:55
#: 173a195a51e4487a82cc2d3b70d60846
msgid "Don't forget to save the file. Before starting compilation, just a few words to describe what is used here:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:57
#: dd25bc25b4f34a2eb52ae6897d41842e
msgid "line 1: `generateEvent` function is imported from Massa SDK (@massalabs/massa-as-sdk). This function will generate an event with the string given as argument. Events can be later recovered using a Massa client."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:59
#: e73e57b469d448c2912bece0e2da3327
msgid "line 3: `main` function is exported. This means that the main function will be callable from the outside of the WebAssembly module (more about that later)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:61
#: 4842bee5d03049409b1636287976cd10
msgid "line 4: `generateEvent` function is called with \"Hello world!\". Brian, we are thinking of you!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:63
#: 1e96db3e2d4c43f88ac796f573cedae1
msgid "Now that everything is in place, we can start the compilation step by running the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:69
#: 5bc2ae9b5f784ce28118d1977e6065f0
msgid "Congratulations! You have generated your first smart contract: the `main.wasm` file in `build` directory. Note that a `deployer.wasm` file has also been generated. It will be used to deploy your contract on Massa network."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:74
#: 51777ac3b1b64192a726ebd81c7c53d2
msgid "If due to bad luck you have an error at compilation time:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:76
#: 36ec6bcadc144ab092552c1491cfe6a1
msgid "check that you properly followed all the steps,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:77
#: d2ad0dd1eea04197be29b261053ae8a4
msgid "do a couple a internet research,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:78
#: d6307632cd014356a667819dc6a49f1a
msgid "look for any similar issue (open or closed) in `massa-as-sdk <https://github.com/massalabs/massa-as-sdk/>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:80
#: ee30958855a245b897d2ae63b231475e
msgid "If you find nothing, feel free to contact us on `Discord <https://discord.gg/massa>`_ or directly open an `issue <https://github.com/massalabs/massa-as-sdk/issues>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:84
#: 07fd8f785e4a44cea5ca14e98c822730
msgid "Deploy your smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:86
#: e9acc842c24041c4b3291f6277910d36
msgid "Your smart contract is now ready to be pushed and executed on the Massa network. In order to deploy it, you need to own a Massa wallet and some MAS coins on it."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:90
#: d33455c5e6fc402e84a3456d69708d46
msgid "If you don't have any wallet configured yet, :ref:`create a new one <wallet>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:91
#: 9de5469b71ec41a48451a245c241df22
msgid "If you're using a brand new wallet, add some coins by sending your address to `testnet-faucet discord channel <https://discord.com/channels/828270821042159636/866190913030193172>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:94
#: c46da0e7ef434f88964fce9399007a1e
msgid "In any case, keep the `Address` and `Secret key` of your wallet, you will use it later."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:96
#: ca82d9f5a6524aba9d0be42ca85003c8
msgid "There are two ways you can deploy your smart contract. The easiest and the recommended way is to deploy the smart contract with the smart-contract toolkit (:ref:`Option 1 <sc-option-1>` below)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:99
#: 1ca86d008d75435185d04952407853f1
msgid "The second option is to deploy the smart contract, through Massa client, by running your own node (:ref:`Option 2 <sc-option-2>`)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:105
#: 2be54c0a85034ee4a959ab43f7eb2609
msgid "Option 1: Deploy your smart contract from the toolkit"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:107
#: f27785cc318f4bc5951cf08b7c6a4059
msgid "To send the transaction on the network, you need to provide your wallet's secret key. This is done using environment variable in `.env` file."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:114
#: e3801608d77e4272aa9e33c1bc5299d3
msgid "This command will create a `.env` file. Now fill it with your wallet secret key."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:116
#: 4e75d002a9964bc0ac0a6da126558650
msgid "Then run the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:122
#: d98cdfd4e72140d2b77c96660464902e
msgid "Wait for a few seconds... It should return you the deployed smart contract address."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:127
#: 42706f8bd02941ee9e14a84c9bc8aa10
msgid "Option 2: Execute your smart contract on your own node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:129
#: 38c6db2bf7084425816c1a4e77c22174
msgid "To execute the smart contract you will need:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:131
#: 3887e05b5c2a49728075038774026bcd
msgid "A client configured with an address having coins."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:132
#: 93f1db6b19ca472d8e9e5ee029646ee1
msgid "A smart contract compiled in WebAssembly (see previous step)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:134
#: c15f783d798e4564991b662da738015c
msgid "Let's go!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:137
#: 588176590a834d86b497ba0589ff9c6a
msgid "Configure the client"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:139
#: ba062a8614474c248b455992422ff6a5
msgid "Make sure that you have the latest version of the Massa node. If not, :ref:`install it <testnet-install>` and :ref:`run it <testnet-running>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:144
#: 9c6f46a0695543dcbc6b750a6acc669d
msgid "You can also execute your smart-contract on a local sandbox node. To learn more about sandbox node, follow this tutorial: :ref:`Local network generation <local-network-generation>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:149
#: e3c672a04e3045968a649a411df436de
msgid "Execute the smart contract on the node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:151
#: 30df3bb028e24c70b98003cdd50fa5c3
msgid "Everything is in place, we can now execute the `hello world` smart contract on your local node with the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:160
#: dffeab4a13fe40008f57750289a0d601
msgid "We are executing the send_smart_contract command with 6 parameters:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:162
#: 5b7bb258f2394b4a9e7db89328b3efb8
msgid "<address>: the address of your wallet kept during previous step;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:163
#: 5563356a7e77459788a5464c14e3b0f8
msgid "<path to wasm file>: the full path (from the root directory to the file extension .wasm) of the hello smart contract, generated in the previous chapter."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:165
#: 7f86fa8c32d3435b809229c7ee7d1440
msgid "100000: the maximum amount of gas that the execution of your smart contract is allowed to use."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:166
#: b00acef26ccb488fb8ae9cd1ed9fe771
msgid "Two 0 parameters that can be safely ignored by now. If you want more info on them, use the command `help send_smart_contract`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:170
#: f1ea30d813614a73a50faf3bad1428e0
msgid "To go inside the **client cli**, open a terminal in `massa/massa-client` directory and run `cargo run`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:172
#: 02f7acbc636c4b8dac1e4879286c4f45
msgid "If everything went fine, the following message should be prompted:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:179
#: 15c67f54bd2545f9aaf2a3f1b3b2bd20
msgid "In that case, you should be able to retrieve the event with the `Hello world` emitted. Use the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:186
#: 9c4f5ba6d56d4e4686c36ab1d9c72550
msgid "If everything went well you should see a message similar to this one:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:198
#: 2f0b0ac3667d4b5b9f2b6179bff7fed9
msgid "Congratulations! You have just executed your first smart contract!"
msgstr ""
