# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-21 00:56+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/getting-started.rst:6
#: 016adb6335f445b9ba02a560e8a73c43
msgid "Getting started"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:8
#: 6012d85f0dc4464b8d89827a974453b3
msgid "In this section you will learn how to set up your smart-contract development environment, how to deploy your first Massa smart contract, and how to call that smart contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:12
#: 15eb089559554ec0a3fcea2335ddefed
msgid "Setting up a new project"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:14
#: afe3be2daf5d49bfa94a2d4e255dd6ae
msgid "Make sure you have a recent version of `Node.js <https://nodejs.org/>`_ and `npm <https://www.npmjs.com/>`_. Update or `install <https://docs.npmjs.com/downloading-and-installing-node-js-and-npm>`_ them if needed."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:17
#: 588db40f98824f9ebcfd578bfe74fe39
msgid "`@massalabs/sc-project-initializer <https://github.com/massalabs/massa-sc-toolkit/tree/main/packages/sc-project-initializer>`_ is a tool that creates a boilerplate smart-contract project. To create a smart-contract project, invoke the initializer by running:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:25
#: 6e65e87a5ff54789b07e3e8330fd697d
msgid "You now have a npm project, created in `my-sc` folder. It contains all tools that will be used to compile AssemblyScript to Wasm bytecode, as well as deploying and running your smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:28
#: ce97100016cf4b1e914cdfd66f700324
msgid "Update the dependencies with the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:34
#: 2d7881102b814994aeda1e1117d4a56c
msgid "Congratulations! Now you have a fully set up project and you are ready to add some code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:38
#: bb1ce4d1bda346d0975c14e66788540a
msgid "A few words on project folders:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:40
#: 4489741073684082b4056cb9d29c82d7
msgid "`assembly` is where the AssemblyScript source code goes."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:41
#: 290196870f994383954bff88359a7182
msgid "`build` will be created during compilation and will contain compiled smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:42
#: 3d18fa4b8b14408ab378f22020f3d700
msgid "`src` contains Typescript code used to interact with the network."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:45
#: a0d083c4690945ee8ebf852baa324959
msgid "Create your first smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:47
#: 16cf34b384a14db09096310fec7ab055
msgid "Since the beginning of mankind, humans explain how to use a program, a new language, a service by implementing a *Hello world!*. Your first smart contract will be no exception!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:50
#: ba8dd56e731044619261690260708388
msgid "Open the `assembly/contracts/main.ts` file and replace its content by the following one:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:71
#: cba38e38490049639e232aa17ac9c8c3
msgid "Massa smart contract module (`@massalabs/massa-as-sdk`) contains the API you need to use to interact with the external world of the smart contract (the node, the ledger...)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:74
#: 3cd2b672042c4d768c145647e4e77991
msgid "Don't forget to save the file. Before starting compilation, just a few words to describe what is used here:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:76
#: 3ed0023870fb4d01affdb78b4eb2bcd8
msgid "line 5: `sayHello` function is exported. This means that the `sayHello` function can be called from outside of the smart contract, for instance by another smart contract, or through the API (see :ref:`massa-web3 <web3-massa-web3>`)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:78
#: 3c61d0dfbdce4025bb4818f59710f21f
msgid "line 6: `Args` class is used to deserialize arguments' bytecode (see :ref:`massa sc types <sc-types>`)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:79
#: 94f6538e99e7452994cd15dbcbd6c9eb
msgid "line 10: `generateEvent` function will generate an event with the message string given as argument. Events can be recovered later from the Massa client or through the API."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:82
#: afa2eb82f6ea42948be86f281cb4e2a3
msgid "Now that everything is in place, we can start the compilation step by running the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:88
#: 97bbef6bc37d42059367f04d91833471
msgid "Congratulations! You have generated your first smart contract: the `main.wasm` file in `build` directory."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:92
#: 8c7096dff8b0467a97f3ecf92a8ff98f
msgid "If due to bad luck you have an error at compilation time:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:94
#: 553c44ae17894bee8bb49a83831f9b84
msgid "check that you properly followed all the steps,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:95
#: c11632e9421945059c80a0c43962f608
msgid "do a couple a internet research,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:96
#: b4a0ff6b40ea4c02aacd74e5fcdbd180
msgid "look for any similar issue (open or closed) in `massa-as-sdk <https://github.com/massalabs/massa-as-sdk/>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:98
#: 4fc25dfc2260414484f5234960739d12
msgid "If you find nothing, feel free to contact us on `Discord <https://discord.gg/massa>`_ or directly open an `issue <https://github.com/massalabs/massa-as-sdk/issues>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:102
#: bfbb157e20044e088c7629603a6d30a0
msgid "Deploy your smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:104
#: 3c5fd6c547e54d24b6428451128b6dbc
msgid "Your smart contract is now ready to be deployed and later executed on the Massa network."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:106
#: cb0a2e5cb4b84dbfb4d1330d86af3b7a
msgid "Uploading a smart contract on the Massa blockchains requires coins. On top of the usual gas costs, Massa has also :ref:`storage costs <storage-cost>`. In order to deploy your smart contract, you thus need to own a Massa wallet and have some MAS coins on it."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:112
#: 889add9596384d03b0457c0dafd26f25
msgid "If you don't have any wallet configured yet, :ref:`create a new one <wallet>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:113
#: 07c466b7ce004efeb53fddf3fd6f37f8
msgid "If you're using a brand new wallet, add some coins by sending your address to `testnet-faucet discord channel <https://discord.com/channels/828270821042159636/866190913030193172>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:115
#: 0195c2fe67d549fd84d7bef302618642
msgid "In any case, keep the `Address` and `Secret key` of your wallet, you will use it later."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:117
#: 9bd39cf0b89a4a89b6d52c1011c64be5
msgid "To pay for the operation cost, you need to configure your project with your wallet's secret key. This is done using the `.env` file. The initializer comes with a template `.env.example` file that you can use:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:124
#: 08f8b17bdacc43f286cd4f52bdd2f325
msgid "Now fill the `WALLET_PRIVATE_KEY` variable with your wallet secret key."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:126
#: bd9916ff68624081a89b527dee7e04f1
msgid "You are now ready to deploy your smart contract with the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:132
#: 31b48ba3ccb14de48ca0823185d3f83a
msgid "This command will use the node defined in the `JSON_RPC_URL_PUBLIC` variable of your `.env` file to deploy your smart contract. If everything goes as expected, this should produce the following output:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:155
#: eeb0e7af0fd44c0b88aa32c1fa057e8f
msgid "To facilitate the work of the developer, the `npm run deploy` command will also build your contracts under the hood so you don't have to run `npm run build` yourself."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:158
#: df58877100bc4989985ccd34d2e0d6d1
msgid "Wait for a few seconds... The last line of the output is the deployed smart contract address."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:161
#: ae1c5bee975c4e2eb8257ce4bd232768
msgid "Calling your smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:163
#: 044d3eb9ac9e4b1d9e7cdec40323b2bc
msgid "Open the `assembly/contracts/run.ts` file and replace its content by the following one."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:203
#: 4ba215cf799e435faede63dc7b4bc153
msgid "line 7: `constructor` is a special function that is called when the run smart contract is deployed."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:204
#: 66e8148d44a5495ead54adff116d240d
msgid "line 10: we ensure that the caller of this function has the right access on the smart contract. Only the deployer has it. This way, we are sure that the constructor can only be called at the deployment."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:206
#: 23790b965c11465db7860d13c9c8d15a
msgid "line 21: `callHelloContract` function the `sayHello` function of the smart contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:207
#: d72402215b26448bbf3ed3e5c144cfda
msgid "line 26: `call` function calls the given function of the smart contract, deployed at the given address."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:209
#: f91a2d7fc45f43899f2af5b9d35ec5b8
msgid "The constructor of this contract expect 1 argument in binary format. This argument is the encoded version of 2 values:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:211
#: 72427d174dd844889fd341ce38fd4878
msgid "the address of the `main.ts` smart contract,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:212
#: 617069e6aa424a73b9b455b2f67358ce
msgid "the name to pass to the `sayHello` function of that smart contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:214
#: 3566fa7c8e0a4884b0c3387d3face2e5
msgid "Now let's have a look at the deployer script `src/deployer.ts` and stop at the `deploySC` instruction."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:216
#: 4d90cfcebf204796821028d6aa890802
msgid "Modify the line 26:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:222
#: fc168db5fb2a4ac9b990d1c937308eca
msgid "Add the import of IEvent at the beginning of the file."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:228
#: 3abfb40c38134d90acac36d1f489be63
msgid "Add this code snippet after the call to the `deploySC` function:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:251
#: d217cc8c98b74a608c87b62219fc306e
msgid "The function `deploySC` lets us set the smart contract to be deployed when running `npm run deploy`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:253
#: e882708d9be4497dbee167ef3d67fc6d
msgid "line 50: we specify the arguments to pass to the `constructor` function. Let's also `Bob` used as an argument by your name so that it will be passed to the `sayHello` function of our smart contract!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:256
#: e397c5966d584cc5896ea0f54bc222c6
msgid "We are now ready to deploy our run smart contract:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:262
#: aa6a3d72616f4d4eb9e9c32622b431bb
msgid "The output should looks like the following:"
msgstr ""
