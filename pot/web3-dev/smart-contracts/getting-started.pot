# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-30 11:37+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/getting-started.rst:6
#: 88d13ce57b1244cda0ba30db3563efd9
msgid "Getting started"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:8
#: 6054fe7421e945f39187f5af2e7955e1
msgid "In this section you will learn how to compile your first Massa smart contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:11
#: 7a155af3f7874d8d98dfec7ba218aabb
msgid "Setting up a new project"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:13
#: e18398997eaa4ad69211bbcbec593a24
msgid "Make sure you have a recent version of `Node.js <https://nodejs.org/>`_  and `npm <https://www.npmjs.com/>`_ . Update or `install <https://docs.npmjs.com/downloading-and-installing-node-js-and-npm>`_ them if needed."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:16
#: 70eed680d1d44c1a80f44438eeb29d2b
msgid "On ubuntu, an easy way to install Node.js is with snap"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:24
#: 7736ed12beb64c1298e7481bafa7379f
msgid "On MacOS & Windows, use nvm:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:26
#: e0c7285a2f334c48938e18232c0c87a0
msgid "Follow the instructions here:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:27
#: 2adb573a9a794b5bbc9da131d1be5a77
msgid "[MacOS] `nvm <https://github.com/nvm-sh/nvm>`_"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:28
#: 809ea993a838459280843a30c080b037
msgid "[Windows] `nvm-windows <https://github.com/coreybutler/nvm-windows>`_"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:30
#: 2b109d75b73e46379019c3123fa65b90
msgid "`massa-sc-toolkit <https://github.com/massalabs/massa-sc-toolkit/>`_ is a tool that creates a boilerplate smart-contract project. To create a smart-contract project, invoke the toolkit by running:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:37
#: 17c8775f70554d89ab0cab6b0f0fe85b
msgid "You have now npm project created with AssemblyScript installed among other dependencies. It will be used to generate bytecode from AssemblyScript code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:40
#: f4a930ca88ad4ddea746c7788fe5ddbd
msgid "Massa smart-contract module (@massalabs/massa-as-sdk) contains the API you need to use to interact with the external world of the smart contract (the node, the ledger...)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:42
#: 6f72a486afd6411bb8f5cf3efc85e47f
msgid "Congratulations! Now you have a fully set up project and you are ready to add some code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:45
#: bfe9421beeb2429abd4085e859317fdf
msgid "A few words on project folders:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:47
#: bcfafc92726c4bd48d33cae2ac33290d
msgid "`assembly` is where the code goes;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:48
#: f955cb6d6bcf45ac8fe85879f33b5f7a
msgid "`build` will be created during compilation and will contain compiled smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:51
#: d3a9d25896b4478680c723097935e35e
msgid "Create your first smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:53
#: cb7ffb4699e34a729fcfff4dcbed9110
msgid "Since the beginning of mankind, humans explain how to use a program, a new language, a service by implementing a *Hello world!*."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:55
#: 7b23d4751192423e8ae69cddc5ce1c80
msgid "Your first smart contract will be no exception!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:59
#: c02c674724cb4e18ae45ed8a40783217
msgid "I'm told that it has nothing to do with the beginning of mankind but Brian Kernighan used it for the first time in *a tutorial introduction to the language B* published in 1972."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:61
#: d712052acaf74856a5366d5c7ca585d6
msgid "Open the `main.ts` file in the `assembly` directory at the root of your project. Replace the code in the file by the following code:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:71
#: a0dc25bec7994917a51dc8c97ad6b380
msgid "Donâ€™t forget to save the file. Before starting compilation, just a few words to describe what is used here:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:73
#: 705c3fe5b5544e64980aa55003b6840b
msgid "line 1: `generateEvent` function is imported from Massa SDK (@massalabs/massa-as-sdk). This function will generate an event with the string given as argument. Events can be later recovered using a Massa client."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:74
#: 522b8d0b31b14147bff3b30f9cf087af
msgid "line 3: `main` function is exported. This means that the main function will be callable from the outside of the WebAssembly module (more about that later)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:75
#: 5dedced2e9334ee7b1f610f2c6afa551
msgid "line 4: `generateEvent` function is called with \"Hello world!\". Brian, we are thinking of you!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:77
#: 8e8cf2b25f4642659d6728d505a67f1f
msgid "Now that everything is in place, we can start the compilation step by running the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:83
#: 79145b72b5214827a2649b8e26aec251
msgid "Congratulations! You have generated your first smart contract: the `main.wasm` file in `build` directory. Note that a `deployer.wasm` file has also been generated. It will be used to deploy your contract on Massa network."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:88
#: 4a5094acf09e4f228218c9978a577a83
msgid "If due to bad luck you have an error at compilation time:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:90
#: 5e524ab3572c465daa4b7d60f056133a
msgid "check that you properly followed all the steps,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:91
#: 9ed80282498a478e847f2f7f0e855ae8
msgid "do a couple a internet research,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:92
#: 7d56ff7312ba4762a0c165c98fe6b4af
msgid "look for any similar issue (open or closed) in `massa-as-sdk <https://github.com/massalabs/massa-as-sdk/>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:94
#: df1bd64cd50a4b1cb1d744df205016fb
msgid "If you find nothing, feel free to contact us on `Discord <https://discord.gg/massa>`_ or directly open an `issue <https://github.com/massalabs/massa-as-sdk/issues>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:97
#: fb2a970ce668461f93a8cf0504f81233
msgid "Deploy your smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:99
#: 31934d05bb714396992bace0a0841965
msgid "Your smart contract is now ready to be pushed and executed on the Massa network. In order to deploy it, you need to own a Massa wallet and some MAS coins on it."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:102
#: 074562d2dd864a028784ebbccc22d12a
msgid "If you don't have any wallet configured yet, :ref:`create a new one <wallet>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:104
#: ae0f7650ef10439187827bf1d325d505
msgid "If you're using a brand new wallet, add some coins by sending your address to `testnet-faucet discord channel <https://discord.com/channels/828270821042159636/866190913030193172>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:106
#: d643dff63bd64f8ba9b2f4875880632e
msgid "If you are using an existing wallet, make sure that you have some coins on it."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:108
#: 0637700c508743c48219e9e095d6546a
msgid "In any case, keep the `address` and `private_key` of your wallet, you will use it later."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:110
#: c77794812170489a8a697565efe887bb
msgid "There are two ways you can deploy your smart contract. The easiest and the recommended way is to deploy the smart contract with the smart-contract toolkit (Option 1 below)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:112
#: 23b288487b6146a4bdfe6b2893c77909
msgid "The second option is to deploy the smart contract, through Massa client, by running your own node (Option 2)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:115
#: 2eab2fa5cecc438d82f55fbe4b4a44ed
msgid "Option 1: Deploy your smart contract from the toolkit"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:117
#: 3a49e507008c45e7a204134403efdecf
msgid "To send the transaction on the network, you need to provide your wallet's private key. This is done using environment variable in `.env` file."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:124
#: 93a733e237d4423bb662d573ed44f279
msgid "This command will create a `.env` file. Now fill it with your wallet private key."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:126
#: c6638a46090f44ad96e004e3ad6f3ed7
msgid "Then run the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:132
#: 9397468f200f4823abb5e5da3bf376b5
msgid "Wait for a few seconds... It should return you the deployed smart contract address."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:136
#: 4f62bd64c8f44adcb31e44f0be54e799
msgid "Option 2: Execute your smart contract on your own node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:138
#: 2ee0dff3b3484890a8f9ff5eae18cca0
msgid "To execute the smart contract you will need:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:140
#: edd924d1179742389cd1b665aaac52ef
msgid "A client configured with an address having coins."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:141
#: 46526e0965ad446b9cee3a1c91f95c62
msgid "A smart contract compiled in WebAssembly (see previous step)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:143
#: 60c9f8257eb344718d6c378f7e59b221
msgid "Let's go!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:146
#: 561c07c07183465496f0dfa092b3fde0
msgid "Configure the client"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:148
#: 9871471906aa407ea6c0987fb60da86d
msgid "Make sure that you have the latest version of the Massa node. If not, :ref:`install it <testnet-install>` and :ref:`run it <testnet-running>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:152
#: c280a16e4ae0411a9585f300c119f83d
msgid "You can also execute your smart-contract on a local sandbox node. To learn more about sandbox node, follow this tutorial: :ref:`Local network generation <local-network-generation>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:155
#: e0431f036de040d9a55bff0497456822
msgid "Execute the smart contract on the node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:157
#: 1aee3ebaa11540f1a971543b0c9463fc
msgid "Everything is in place, we can now execute the `hello world` smart contract on your local node with the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:165
#: 762ee1d016784b858e3309ba66933b34
msgid "We are executing the send_smart_contract command with 6 parameters:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:167
#: a92b9738f99d426db0c99242bb5771d2
msgid "<address>: the address of your wallet kept during previous step;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:168
#: 43542a9edb384e11b185b741032c5462
msgid "<path to wasm file>: the full path (from the root directory to the file extension .wasm) of the hello smart contract, generated in the previous chapter."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:169
#: 74fb8702228140fb95787caba0223aff
msgid "100000: the maximum amount of gas that the execution of your smart contract is allowed to use."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:170
#: f894108054c44100b8746ea340554024
msgid "Two 0 parameters that can be safely ignored by now. If you want more info on them, use the command `help send_smart_contract`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:174
#: 9f941a7998d84a71b3502d14c3299bc5
msgid "To go inside the **client cli**, open a terminal in `massa/massa-client` directory and run `cargo run`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:176
#: c09efb2c4e644737ba90a14477c07b3c
msgid "If everything went fine, the following message should be prompted:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:183
#: a694c2980a7a4531b2a57da3ad1e0a8b
msgid "In that case, you should be able to retrieve the event with the `Hello world` emitted. Use the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:189
#: 682dff3055b14c269652cf1aa7008a03
msgid "If everything went well you should see a message similar to this one:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:201
#: 94b1c33559d44db1a8b2766ad73cd13a
msgid "Congratulations! You have just executed your first smart contract!"
msgstr ""
