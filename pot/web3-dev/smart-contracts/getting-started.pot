# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-29 10:50+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/getting-started.rst:6
#: 6d922075fb004dcc93ae329b317c9f6a
msgid "Getting started"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:8
#: d03a31118cb849008bd778db1695580d
msgid "In this section you will learn how to compile your first Massa smart contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:11
#: fd4ee1efe9264b35b9395fffac21d8ff
msgid "Setting up a new project"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:13
#: f33c97bad9f1434e889e652048f83358
msgid "Make sure you have a recent version of `Node.js <https://nodejs.org/>`_  and `npm <https://www.npmjs.com/>`_ . Update or `install <https://docs.npmjs.com/downloading-and-installing-node-js-and-npm>`_ them if needed."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:16
#: 85322bf6598d479c81ee2701e0cf3593
msgid "On ubuntu, an easy way to install Node.js is with snap"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:24
#: dacdcc2307f1412a88d71124482df44f
msgid "On MacOS & Windows, use nvm:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:26
#: 110e384eb67d4a5cb38e79cc373b55c8
msgid "Follow the instructions here:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:27
#: d724d1a16d9e42158a0cde17e324abf8
msgid "[MacOS] `nvm <https://github.com/nvm-sh/nvm>`_"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:28
#: 60d859183c1145ad9c42788ec4da4952
msgid "[Windows] `nvm-windows <https://github.com/coreybutler/nvm-windows>`_"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:30
#: 35b6b66d6ae440f19d60146e74982b42
msgid "`massa-sc-toolkit <https://github.com/massalabs/massa-sc-toolkit/>`_ is a tool that creates a boilerplate smart-contract project. To create a smart-contract project, invoke the toolkit by running:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:37
#: d91b632bc88a480386a34d78fdf8c649
msgid "You have now npm project created with AssemblyScript installed among other dependencies. It will be used to generate bytecode from AssemblyScript code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:40
#: be675a9618e84ecbadaa171922441c6c
msgid "Massa smart-contract module (@massalabs/massa-as-sdk) contains the API you need to use to interact with the external world of the smart contract (the node, the ledger...)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:42
#: 2fa4474e3269457683f4a63bfc5d8025
msgid "Congratulations! Now you have a fully set up project and you are ready to add some code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:45
#: 0164bdd49f4941bcb829fc41de8536eb
msgid "A few words on project folders:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:47
#: fea0e73ae0e14c17a87dc5f3319db43f
msgid "`assembly` is where the code goes;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:48
#: dcd087b0e98a40a9b434d04dc04894f6
msgid "`build` will be created during compilation and will contain compiled smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:51
#: ac6ce48ecdca415ea0d136a3f8864130
msgid "Create your first smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:53
#: 178a57286cf74d8aaa8716db4193ed4b
msgid "Since the beginning of mankind, humans explain how to use a program, a new language, a service by implementing a *Hello world!*."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:55
#: 47996157195f4847af2e41c3d3819fc3
msgid "Your first smart contract will be no exception!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:59
#: 8612fd7eccc84df88d14952638dbf0f8
msgid "I'm told that it has nothing to do with the beginning of mankind but Brian Kernighan used it for the first time in *a tutorial introduction to the language B* published in 1972."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:61
#: 102fe473a88f44c68760f6578f3ca38e
msgid "Open the `main.ts` file in the `assembly` directory at the root of your project. Replace the code in the file by the following code:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:71
#: b7c4b6a17da44e53a02bc84cda354f4c
msgid "Donâ€™t forget to save the file. Before starting compilation, just a few words to describe what is used here:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:73
#: 952f1e26abb74075ae0d8928641332ae
msgid "line 1: `generateEvent` function is imported from Massa SDK (@massalabs/massa-as-sdk). This function will generate an event with the string given as argument. Events can be later recovered using a Massa client."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:74
#: 3dffa4f1ec074ce296beb4043481eecc
msgid "line 3: `main` function is exported. This means that the main function will be callable from the outside of the WebAssembly module (more about that later)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:75
#: b207f81cf12048329ee60def0a5e8510
msgid "line 4: `generateEvent` function is called with \"Hello world!\". Brian, we are thinking of you!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:77
#: d416b2829a504b2bb7593b1c707dd6bf
msgid "Now that everything is in place, we can start the compilation step by running the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:83
#: 96dd35a23ad143aaa264bc4e19331421
msgid "Congratulations! You have generated your first smart contract: the `main.wasm` file in `build` directory. Note that a `deployer.wasm` file has also been generated. It will be used to deploy your contract on Massa network."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:88
#: e9b8d6f908b14b9cadd4b1227aa971f2
msgid "If due to bad luck you have an error at compilation time:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:90
#: 7d3ddd439cb84e90990ca7a246775bcf
msgid "check that you properly followed all the steps,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:91
#: dad6aa745a114e909032367a935fdbc7
msgid "do a couple a internet research,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:92
#: c0021f1736d441428b2b3f1b4170fba0
msgid "look for any similar issue (open or closed) in `massa-as-sdk <https://github.com/massalabs/massa-as-sdk/>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:94
#: dd4ad40636f74285b74bd55549d55d0c
msgid "If you find nothing, feel free to contact us on `Discord <https://discord.gg/massa>`_ or directly open an `issue <https://github.com/massalabs/massa-as-sdk/issues>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:97
#: c2b2ca29a188497a92e6f35a23cd1af2
msgid "Deploy your smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:99
#: e0b7398eab6f458b880993931641b88b
msgid "Your smart contract is now ready to be pushed and executed on the Massa network. In order to deploy it, you need to own a Massa wallet and some MAS coins on it."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:102
#: 478d21bf7b4244b598c336618f453649
msgid "If you don't have any wallet configured yet, :ref:`create a new one <wallet>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:104
#: 0c7603bb73f2413f96b1bba37491fa23
msgid "If you're using a brand new wallet, add some coins by sending your address to `testnet-faucet discord channel <https://discord.com/channels/828270821042159636/866190913030193172>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:106
#: 22069176d9674f2b81de321d051b09bc
msgid "If you are using an existing wallet, make sure that you have some coins on it."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:108
#: 0c6697577b4f42518503f2025453b074
msgid "In any case, keep the `address` and `private_key` of your wallet, you will use it later."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:110
#: f1e7bf28b4b245029260ad887ff1e8ff
msgid "There are two ways you can deploy your smart contract. The easiest and the recommended way is to deploy the smart contract with the smart-contract toolkit (Option 1 below)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:112
#: 78f5b49028f74d2a9a72ee1c6f9bcb95
msgid "The second option is to deploy the smart contract, through Massa client, by running your own node (Option 2)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:115
#: 8e272e6262a1446992f113f4d5015a2a
msgid "Option 1: Deploy your smart contract from the toolkit"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:117
#: ca2f50e5194a41a09be0ffe3ec54c870
msgid "To send the transaction on the network, you need to provide your wallet's private key. This is done using environment variable in `.env` file."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:124
#: 02cb8ac1869745be918ca46cdbca9949
msgid "This command will create a `.env` file. Now fill it with your wallet private key."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:126
#: c4a128294a014ac1ae3c94fd2a11c9f6
msgid "Then run the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:132
#: 47dbcd644d43440cb3a1b29274f573e3
msgid "Wait for a few seconds... It should return you the deployed smart contract address."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:136
#: a9d28ab66a84407e9cc2e418b2b49f3b
msgid "Option 2: Execute your smart contract on your own node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:138
#: f7094f1194514fdfae4d38e34eceb5ae
msgid "To execute the smart contract you will need:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:140
#: 5709d96e5ff44d9b92901127e56b0265
msgid "A client configured with an address having coins."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:141
#: c2574fc38284438f827936ee584bf89f
msgid "A smart contract compiled in WebAssembly (see previous step)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:143
#: 4790f57e33b64af2a3e6aba33ec8c11c
msgid "Let's go!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:146
#: 08494831f3284eb293ecc6fd69378c64
msgid "Configure the client"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:148
#: 032e1d67901942248d43106fa11d806f
msgid "Make sure that you have the latest version of the Massa node. If not, :ref:`install it <testnet-install>` and :ref:`run it <testnet-running>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:152
#: 7891c65a9a334c899f9ec266ea2f5464
msgid "You can also execute your smart-contract on a local sandbox node. To learn more about sandbox node, follow this tutorial: :ref:`Local network generation <local-network-generation>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:155
#: 9784d7d962664acaa246499062321ded
msgid "Execute the smart contract on the node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:157
#: f4c6fb6c66114a6b83b7dee43411862b
msgid "Everything is in place, we can now execute the `hello world` smart contract on your local node with the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:165
#: 4d67975b60434d6bbc8753cd5683d58c
msgid "We are executing the send_smart_contract command with 6 parameters:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:167
#: 713780e68393452ab60d2a66885092ba
msgid "<address>: the address of your wallet kept during previous step;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:168
#: a909f6d5b1944dfbb5171905cb7a6a82
msgid "<path to wasm file>: the full path (from the root directory to the file extension .wasm) of the hello smart contract, generated in the previous chapter."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:169
#: 5bc0ef81dbb24c9c8859e9f771da5a84
msgid "100000: the maximum amount of gas that the execution of your smart contract is allowed to use."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:170
#: 95fb07134be24ca9929831e60f45c153
msgid "Two 0 parameters that can be safely ignored by now. If you want more info on them, use the command `help send_smart_contract`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:174
#: 80d76b13a2234acb9314ce7d2c57eb91
msgid "To go inside the **client cli**, open a terminal in `massa/massa-client` directory and run `cargo run`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:176
#: bc889900c97f434d88a71c7ebd358cf7
msgid "If everything went fine, the following message should be prompted:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:183
#: 427d2b93f0c9402b9a61b0b725df0df9
msgid "In that case, you should be able to retrieve the event with the `Hello world` emitted. Use the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:189
#: 890ddf5110234edab06354634c1dd241
msgid "If everything went well you should see a message similar to this one:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:201
#: 760baee928864038bd6689df0c012776
msgid "Congratulations! You have just executed your first smart contract!"
msgstr ""
