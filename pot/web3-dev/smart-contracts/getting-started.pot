# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-28 00:54+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/getting-started.rst:6
#: f4d279cc1db44361a8e8d24fa2fb8053
msgid "Getting started"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:8
#: 3c51437d3af64183bdb777ba42fc381b
msgid "In this section you will learn how to set up your smart-contract development environment, how to deploy your first Massa smart contract, and how to call that smart contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:12
#: d4dd52e33b9c456a9fa01f11ce855f9f
msgid "Setting up a new project"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:14
#: d1fb27c9fe894d5da4c12d671ca413e4
msgid "Make sure you have a recent version of `Node.js <https://nodejs.org/>`_ and `npm <https://www.npmjs.com/>`_. Update or `install <https://docs.npmjs.com/downloading-and-installing-node-js-and-npm>`_ them if needed."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:17
#: a272a2ced9be4f598977994fd5f3fc2b
msgid "`@massalabs/sc-project-initializer <https://github.com/massalabs/massa-sc-toolkit/tree/main/packages/sc-project-initializer>`_ is a tool that creates a boilerplate smart-contract project. To create a smart-contract project, invoke the initializer by running:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:25
#: 1861b3aa2d4b4ac7aa3c8ef56869e2cb
msgid "You now have a npm project, created in `my-sc` folder. It contains all tools that will be used to compile AssemblyScript to Wasm bytecode, as well as deploying and running your smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:28
#: 77010bbbbe61431aafd9b11545bab3be
msgid "Update the dependencies with the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:34
#: e56e941785564c00a40a6b75051081af
msgid "Congratulations! Now you have a fully set up project and you are ready to add some code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:38
#: dac8cca842ee49bd8a299cf7c3736ae4
msgid "A few words on project folders:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:40
#: 305ecc067d33489a878883fef2fccc5d
msgid "`assembly` is where the AssemblyScript source code goes."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:41
#: b410ea67c5424446ad49e85f02c328b9
msgid "`build` will be created during compilation and will contain compiled smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:42
#: 6115466d61fc48f2851553bd3d612854
msgid "`src` contains Typescript code used to interact with the network."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:45
#: e3c779c7b1a44dc58f405ae42a2f1b17
msgid "Create your first smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:47
#: 789b823d107248ef8985a1ef892ae402
msgid "Since the beginning of mankind, humans explain how to use a program, a new language, a service by implementing a *Hello world!*. Your first smart contract will be no exception!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:50
#: e98540182334468c91702bef00cd145d
msgid "Open the `assembly/contracts/main.ts` file and replace its content by the following one:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:71
#: 514c83ef3ae24faaa4731ee8a968dc32
msgid "Massa smart contract module (`@massalabs/massa-as-sdk`) contains the API you need to use to interact with the external world of the smart contract (the node, the ledger...)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:74
#: d04977dabd4f4fa4a96aa3c4c3c92e4a
msgid "Don't forget to save the file. Before starting compilation, just a few words to describe what is used here:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:76
#: 46145fdc9c5f416ba1136ac98207c004
msgid "line 5: `sayHello` function is exported. This means that the `sayHello` function can be called from outside of the smart contract, for instance by another smart contract, or through the API (see :ref:`massa-web3 <web3-massa-web3>`)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:78
#: 9ea964853a90412abab2f9ae199e6b33
msgid "line 6: `Args` class is used to deserialize arguments' bytecode (see :ref:`massa sc types <sc-types>`)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:79
#: 29675d22f7da42b9bca1b3c4e4440214
msgid "line 10: `generateEvent` function will generate an event with the message string given as argument. Events can be recovered later from the Massa client or through the API."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:82
#: 332828c1724042b1a674a6a6da28900a
msgid "Now that everything is in place, we can start the compilation step by running the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:88
#: aa5d6d1a703a41fd83f7ead8503d73fc
msgid "Congratulations! You have generated your first smart contract: the `main.wasm` file in `build` directory."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:92
#: 3bf36abdad074c7e937079a080d59950
msgid "If due to bad luck you have an error at compilation time:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:94
#: 9e990c72f075452d8c682629eaa9d76c
msgid "check that you properly followed all the steps,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:95
#: 25e95ede95b44ce3b119b1eaed134ec6
msgid "do a couple a internet research,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:96
#: fdd5afc97b2e438db9410987e0fa8705
msgid "look for any similar issue (open or closed) in `massa-as-sdk <https://github.com/massalabs/massa-as-sdk/>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:98
#: 3782a78d2f3f42b3b32ddb164fb50fd9
msgid "If you find nothing, feel free to contact us on `Discord <https://discord.gg/massa>`_ or directly open an `issue <https://github.com/massalabs/massa-as-sdk/issues>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:102
#: 9630f337458b404eba7413fa2262d82b
msgid "Deploy your smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:104
#: 424513d3c0924e5ca40cef2dc630b8f5
msgid "Your smart contract is now ready to be deployed and later executed on the Massa network."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:106
#: ed67feddae314493bae9c10ce7753d46
msgid "Uploading a smart contract on the Massa blockchains requires coins. On top of the usual gas costs, Massa has also :ref:`storage costs <storage-cost>`. In order to deploy your smart contract, you thus need to own a Massa wallet and have some MAS coins on it."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:112
#: 7363aa948fa84b7a98f18d04e889cc2e
msgid "If you don't have any wallet configured yet, :ref:`create a new one <wallet>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:113
#: fc6d1dc95a9f4bd4bfbbc3c93cc2e47f
msgid "If you're using a brand new wallet, add some coins by sending your address to `testnet-faucet discord channel <https://discord.com/channels/828270821042159636/866190913030193172>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:115
#: eb1546bdb8b94295917aa283946cb07b
msgid "In any case, keep the `Address` and `Secret key` of your wallet, you will use it later."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:117
#: 6e444903ce46415996ece07780242776
msgid "To pay for the operation cost, you need to configure your project with your wallet's secret key. This is done using the `.env` file. The initializer comes with a template `.env.example` file that you can use:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:124
#: f7f8f832d9bd425a8a745d71c11defed
msgid "Now fill the `WALLET_PRIVATE_KEY` variable with your wallet secret key."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:126
#: 79cb9617b2004eac86ede9b153cd60c7
msgid "You are now ready to deploy your smart contract with the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:132
#: fe78f55981fd4fdf94ab379041d34471
msgid "This command will use the node defined in the `JSON_RPC_URL_PUBLIC` variable of your `.env` file to deploy your smart contract. If everything goes as expected, this should produce the following output:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:155
#: 8f1fb1a0bc3344b3ab50f830dc933844
msgid "To facilitate the work of the developer, the `npm run deploy` command will also build your contracts under the hood so you don't have to run `npm run build` yourself."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:158
#: c9ac76371be04c96a49f438e66bb1437
msgid "Wait for a few seconds... The last line of the output is the deployed smart contract address."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:161
#: 325cad611d5144abbbbb4ab1370568ee
msgid "Calling your smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:163
#: 079b7679c1c44da7a20ab1447a8b105d
msgid "Open the `assembly/contracts/run.ts` file and replace its content by the following one."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:203
#: 69acf80e93af4c5f97215908560d236c
msgid "line 7: `constructor` is a special function that is called when the run smart contract is deployed."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:204
#: dfc5ed97a38e443996d9c2341fdaf885
msgid "line 10: we ensure that the caller of this function has the right access on the smart contract. Only the deployer has it. This way, we are sure that the constructor can only be called at the deployment."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:206
#: 072f2c5a846a45eb95897dd53be442cb
msgid "line 21: `callHelloContract` function the `sayHello` function of the smart contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:207
#: 6d244b7540e54310847625ef5a08184e
msgid "line 26: `call` function calls the given function of the smart contract, deployed at the given address."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:209
#: 7f5cae06a9274fee9fbacbeb4c82aff8
msgid "The constructor of this contract expect 1 argument in binary format. This argument is the encoded version of 2 values:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:211
#: 673ce0dee19947bf85f62734f06a876b
msgid "the address of the `main.ts` smart contract,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:212
#: 08d66ecf2a034bb7a9dbf5b0ad371a52
msgid "the name to pass to the `sayHello` function of that smart contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:214
#: e0e276161bf44e998fadaf447f6c711d
msgid "Now let's have a look at the deployer script `src/deployer.ts` and stop at the `deploySC` instruction."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:216
#: cb935cd3d9934e1990e195406ed9433b
msgid "Modify the line 26:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:222
#: 0b9c6e06035d4483bd43985bbde17fea
msgid "Add the import of IEvent at the beginning of the file."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:228
#: a9b0233c000c4e51bfe357fad1cd8d2b
msgid "Add this code snippet after the call to the `deploySC` function:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:251
#: e2988a933a994bc3876c4a7fc93a9607
msgid "The function `deploySC` lets us set the smart contract to be deployed when running `npm run deploy`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:253
#: eaa66eb31df845168c55666afbd1e966
msgid "line 50: we specify the arguments to pass to the `constructor` function. Let's also `Bob` used as an argument by your name so that it will be passed to the `sayHello` function of our smart contract!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:256
#: 05122911418c46ecb30075d97423e0b0
msgid "We are now ready to deploy our run smart contract:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:262
#: c3f6800e6a3043fdacd0aa8490218c7b
msgid "The output should looks like the following:"
msgstr ""
