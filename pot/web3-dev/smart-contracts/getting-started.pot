# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-06 15:41+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../web3-dev/smart-contracts/getting-started.rst:6
#: 16f545c542304b6e93d5c071136ec0ec
msgid "Getting started"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:8
#: 8db4ffa9091f40e4a4d3a49cfaee807d
msgid "In this section you will learn how to compile your first Massa smart contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:11
#: 93513c88ac7a4ee48211b0965004fcea
msgid "Setting up a new project"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:13
#: ee8d0d1f1cb8441481ea42188bf658a1
msgid "Make sure you have a recent version of `Node.js <https://nodejs.org/>`_  and `npm <https://www.npmjs.com/>`_. Update or `install <https://docs.npmjs.com/downloading-and-installing-node-js-and-npm>`_ them if needed."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:16
#: e69ba3768d5b4fc49f225bb886a595f6
msgid "`massa-sc-toolkit <https://github.com/massalabs/massa-sc-toolkit/>`_ is a tool that creates a boilerplate smart-contract project. To create a smart-contract project, invoke the toolkit by running:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:23
#: 92e1ac636e93460c83eecf5c8f3a0ab4
msgid "You have now npm project created with AssemblyScript installed among other dependencies. It will be used to generate bytecode from AssemblyScript code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:27
#: 45c3aaa732104209b625cd826ac799ee
msgid "Massa smart-contract module (`@massalabs/massa-as-sdk`) contains the API you need to use to interact with the external world of the smart contract (the node, the ledger...)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:30
#: aa609aeca4eb40a4b419fb683eb8d898
msgid "Congratulations! Now you have a fully set up project and you are ready to add some code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:33
#: a6ff66633f354e3cbd028e12558df5da
msgid "A few words on project folders:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:35
#: 1f4787c46be4419aa5b502b3ff078fbf
msgid "`assembly` is where the code goes;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:36
#: 5ac86cac0d014eaaae9ce9e0ce7ec9e0
msgid "`build` will be created during compilation and will contain compiled smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:39
#: d49adee25dd14468b0229ea16df43419
msgid "Create your first smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:41
#: 615a540d622d4a91b1501358c1b43e1e
msgid "Since the beginning of mankind, humans explain how to use a program, a new language, a service by implementing a *Hello world!*. Your first smart contract will be no exception!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:44
#: 133556abd61848689286cf658a907e1f
msgid "Open the `main.ts` file in the `assembly` directory at the root of your project. Replace the code in the file by the following code:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:55
#: cf18aeb5ceb6442985401a09b72959f6
msgid "Don't forget to save the file. Before starting compilation, just a few words to describe what is used here:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:57
#: 086427b39b53408589f6975a6490c103
msgid "line 1: `generateEvent` function is imported from Massa SDK (@massalabs/massa-as-sdk). This function will generate an event with the string given as argument. Events can be later recovered using a Massa client."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:60
#: 3d46c5fd013f412ab1323880ba1d2190
msgid "line 3: `main` function is exported. This means that the main function will be callable from the outside of the WebAssembly module (more about that later)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:62
#: 2109e4d01fcc4b9995048188d1243dda
msgid "line 4: `generateEvent` function is called with \"Hello world!\". Brian, we are thinking of you!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:64
#: 38014f856ba745c7bcf5598b4cc6df12
msgid "Now that everything is in place, we can start the compilation step by running the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:70
#: 8c34cc55a8db40d3bf27b95d29372ce4
msgid "Congratulations! You have generated your first smart contract: the `main.wasm` file in `build` directory. Note that a `deployer.wasm` file has also been generated. It will be used to deploy your contract on Massa network."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:75
#: 070c65aca8544beba72239cbeb97be2e
msgid "If due to bad luck you have an error at compilation time:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:77
#: 4cfc4e71d04f47e9b31880358c9ac79c
msgid "check that you properly followed all the steps,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:78
#: 0f8355bc85bb4ad5acc9a8a8cedd297f
msgid "do a couple a internet research,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:79
#: 0fbfb5a138cd46609ada0873a4777e95
msgid "look for any similar issue (open or closed) in `massa-as-sdk <https://github.com/massalabs/massa-as-sdk/>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:81
#: 279d1b5f37824eebb8bc0faa144c81e3
msgid "If you find nothing, feel free to contact us on `Discord <https://discord.gg/massa>`_ or directly open an `issue <https://github.com/massalabs/massa-as-sdk/issues>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:85
#: afcbef3b18a8467aa16576ee1f427f42
msgid "Deploy your smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:87
#: 927f5451490f47a0a78a88881aaaf861
msgid "Your smart contract is now ready to be pushed and executed on the Massa network. In order to deploy it, you need to own a Massa wallet and some MAS coins on it."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:91
#: 25022f139d064cfaa1a723c99f4018b4
msgid "If you don't have any wallet configured yet, :ref:`create a new one <wallet>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:92
#: ec5a1d34833a4cd588d68b1f324b3fd1
msgid "If you're using a brand new wallet, add some coins by sending your address to `testnet-faucet discord channel <https://discord.com/channels/828270821042159636/866190913030193172>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:95
#: 7010f20dbdf944c0915f550548596359
msgid "In any case, keep the `Address` and `Secret key` of your wallet, you will use it later."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:97
#: be3d74c623d64b349c198db798013dde
msgid "There are two ways you can deploy your smart contract. The easiest and the recommended way is to deploy the smart contract with the smart-contract toolkit (:ref:`Option 1 <sc-option-1>` below)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:100
#: a5998107327241c0b244eea375aeb181
msgid "The second option is to deploy the smart contract, through Massa client, by running your own node (:ref:`Option 2 <sc-option-2>`)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:106
#: 7bfda21222f5405a86842fcb58bbe24f
msgid "Option 1: Deploy your smart contract from the toolkit"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:108
#: 637a546b8c074e8ead98a8377f48122e
msgid "To send the transaction on the network, you need to provide your wallet's secret key. This is done using environment variable in `.env` file."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:115
#: 831baa232b1e4fcdb645537070dbd7b7
msgid "This command will create a `.env` file. Now fill it with your wallet secret key."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:117
#: 34292b5bd379484ab76e2d99f3c6ab5a
msgid "Then run the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:123
#: 563c13061cef412ead176f98730d990f
msgid "Wait for a few seconds... It should return you the deployed smart contract address."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:128
#: 67c459543ace4036aee5e2410ee3178c
msgid "Option 2: Execute your smart contract on your own node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:130
#: f7e33bd8b48c49ffad314a6e01f1322c
msgid "To execute the smart contract you will need:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:132
#: 01b5b7511921472a86443ec6be1d939e
msgid "A client configured with an address having coins."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:133
#: a244172db7384beb808f11c8782f6867
msgid "A smart contract compiled in WebAssembly (see previous step)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:135
#: ce65b9aeb5e347fd9eaadf0d2f165f20
msgid "Let's go!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:138
#: 58bb2f1863c7492ab00ed14d08e2e6bb
msgid "Configure the client"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:140
#: 35a444ae8037437d97192783749cf3df
msgid "Make sure that you have the latest version of the Massa node. If not, :ref:`install it <testnet-install>` and :ref:`run it <testnet-running>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:145
#: 88320bcc29464db68e35530195dd6281
msgid "You can also execute your smart-contract on a local sandbox node. To learn more about sandbox node, follow this tutorial: :ref:`Local network generation <local-network-generation>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:150
#: b185e278d8d147879a13711b2f0c6237
msgid "Execute the smart contract on the node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:152
#: 0dd4c0e83dc14b7cb799b4ea4fc40533
msgid "Everything is in place, we can now execute the `hello world` smart contract on your local node with the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:161
#: a1822dbbc8de4d83965fcf417264cc68
msgid "We are executing the send_smart_contract command with 6 parameters:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:163
#: 05f37ab0e87d4a4bb6e99075cf02e843
msgid "<address>: the address of your wallet kept during previous step;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:164
#: b405eda1275b4390907c1b76aae16755
msgid "<path to wasm file>: the full path (from the root directory to the file extension .wasm) of the hello smart contract, generated in the previous chapter."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:166
#: 9d797746de8c4f04b7b11f75dcd26822
msgid "100000: the maximum amount of gas that the execution of your smart contract is allowed to use."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:167
#: 13e598ccf4304464808d228d18dc0473
msgid "Two 0 parameters that can be safely ignored by now. If you want more info on them, use the command `help send_smart_contract`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:172
#: f354aea083634f7db636214cc7f031d4
msgid "To go inside the **client cli**, open a terminal in `massa/massa-client` directory and run `cargo run`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:174
#: 5bdfcb0722104b3c8f3251ac63a85a0c
msgid "If everything went fine, the following message should be prompted:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:181
#: fb0f962323ca4268bf3f22d4c83e4a20
msgid "In that case, you should be able to retrieve the event with the `Hello world` emitted. Use the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:188
#: 6a72e7a86b9840a0bc6e8e0233a09822
msgid "If everything went well you should see a message similar to this one:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:200
#: 238cd0e9e5e94d3ebd7024dff22c3704
msgid "Congratulations! You have just executed your first smart contract!"
msgstr ""
