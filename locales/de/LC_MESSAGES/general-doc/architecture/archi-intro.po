# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized
# Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-11 00:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../general-doc/architecture/archi-intro.rst:5
#: 0698585d7fcb41719a42e6b3bb98c250
msgid "Introduction"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:7
#: 91595dcc973643d5b9665d7042da9be8
msgid ""
"We will describe in this document the global architecture of a Massa "
"Node, from the ground up, and introduce relevant definitions and "
"concepts."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:9
#: 220a81e89349417db014544fb1f3ff80
msgid ""
"The goal of the Massa network is to build a consensus between **nodes** "
"to gather and order **blocks** that contains ordered lists of "
"**operations**. An operation ultimate purpose once executed is to act as "
"transitions for the global network state, called the **ledger**."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:12
#: 579f045af18248e99cfac4591c02053b
msgid ""
"Operations are produced by external clients and sent to the Massa network"
" via a node. Some operations are containing code to be run as **smart "
"contracts**, enabling complex programmatic modifications of the ledger. "
"Nodes will gather all the pending operations and group them to produce "
"blocks. Each block contains a finite set of operations, limited by the "
"fact that each block has a limited amount of space available to store "
"operations. Traditional blockchains will then typically link blocks one "
"after the other (including a hash of the previous block in the block "
"header), to materialize their temporal ordering. However, unlike "
"traditional blockchains, Massa blocks are not simply chained one after "
"the other, but organized into a more complex spatio-temporal structure, "
"which allows for parallelization and increased performances."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:20
#: 6924b38f15e14669bba7bc3a545eb36e
msgid ""
"Instead of one chain, there are several threads (T=32) of chains running "
"in parallel, with blocks equally spread on each thread over time, and "
"stored inside **slots** that are spaced at fixed time intervals:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:25
#: e0af4c813b7b4ff0bd7d5e3e2aa17b0b
msgid ""
"The time between two slots located on the same thread is called a "
"**period** and lasts 16s (conventionally called :math:`t_0`). "
"Corresponding slots in threads are slightly shifted in time relative to "
"one another, by one period divided by the number of threads, which is "
"16s/32 = 0.5s, so that a period contains exactly 32 slots equally spaced "
"over the 32 threads. A **cycle** is defined as the succession of 128 "
"periods and so lasts a bit more than 34min. Periods are numbered by "
"increments of one, so can be used together with a thread number to "
"uniquely identify a block slot. Period 0 is the genesis and contains "
"genesis blocks with no parents."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:32
#: 9caddbe0193e4c03b1450713e224325f
msgid ""
"The job of the Massa nodes network is to essentially collectively fill up"
" slots with valid blocks. To do so, at each interval of 0.5s, a specific "
"node in the network is elected to be allowed to create a block (more "
"about the selection process below, and the proof of stake sybil "
"resistance mechanism), and will be rewarded if it creates a valid block "
"in time. It is also possible that a node misses its opportunity to create"
" the block, in which case the slot will remain empty (this is called a "
"**block miss**)."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:38
#: 5fc97da537d847a8aa749222bd5b97cf
msgid ""
"In traditional blockchains, blocks are simply referencing their unique "
"parent, forming a chain. In the case of Massa, each block is referencing "
"one parent block in each thread (so, 32 parents). Here is an example "
"illustrated with one particular block:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:44
#: 2fe5f70bb4604774b42ec16edc235b9c
msgid ""
"Let's introduce some relevant definitions and concepts generally "
"necessary to understand how the Massa network operates. We will then "
"explain the node architecture and how the whole system works."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:48
#: db39994c7a7b4032ac46f792608cb837
msgid "Address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:50
#: 6dd3e9c6993140da8866c06afdea5fed
msgid ""
"Each account in Massa has a public and private key associated with it. "
"This is how messages can be signed and identity enforced."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:53
#: ffe9d8c93f024b3388d9f844773c6abc
msgid "The address of an account is simply the hash of its public key."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:56
#: 03f2a2936c9a4d6ebb9b22e785f30aee
msgid "Ledger"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:58
#: a6990a773520458ca653514b7cf3a430
msgid ""
"The ledger is a map that stores a global mapping between addresses and "
"information related to these addresses. It is replicated in each node and"
" the consensus building mechanism ensures that agreement on what "
"operations have been finalized (and in what order) will be reached over "
"the whole network. The ledger is the state of the Massa network, and "
"fundamentally operations (see below) are requests to modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:62
#: 1bb5a39e3147489098dfafdfd53bb844
msgid "The information stored in the ledger with each address is the following:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:65
#: 384c34f5efc44cad87b213862bfb44f2
msgid "**Ledger information associated with each address**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: b611e8c5ff3b4b9eae37fc1c491299f3
msgid "``balance``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: 6c0271a67d654b82a0f6aadca3cc9907
msgid "The amount of Massa coins owned by the address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: ../../general-doc/architecture/archi-intro.rst:147
#: 4db4b689ed35436492b39edd86564b2f dc078d1f687a466599a6e3ee3d7a1036
msgid "``bytecode``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: 89d9385796714d7dbff6be2199df34b9
msgid ""
"When the address references a smart contract, this is the compiled code "
":raw-html:`<br/>` corresponding to the smart contract (typically contains"
" several functions that act as :raw-html:`<br/>` API entry points for the"
" smart contract)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: c6976573027749bcac5a01c3ffbcba2f
msgid "``datastore``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: 699ceb1f47c94fd7bdeb58e8e37b4365
msgid ""
"A key/value map that can store any persistent data related to a smart "
":raw-html:`<br/>` contract, its variables, etc"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:76
#: f929ca1e3d1148a59472500107d02e2a
msgid "Smart Contract"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:78
#: f59bd45201704590acbd8232cd4f83fe
msgid ""
"Smart contracts are a piece of code that can be run inside the Massa "
"virtual machine and which can modify the ledger, accept incoming requests"
" through a public interface (via smart contract operations). One "
"particularity of Massa smart contracts compared to other blockchain smart"
" contracts is their ability to wake up by themselves independently of an "
"exterior request on their interface. This allows more autonomy and less "
"dependency on external centralized services."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:84
#: 55afa77c25ac46b889f53d1b382367dd
msgid ""
"Smart contracts are currently written in assemblyscript, a stricter "
"derivation from typescript, which is itself a type-safe version of "
"javascript. AssemblyScript compiles to web assembly bytecode (wasm). "
"Massa nodes Execution Module runs such bytecode. Smart contracts have "
"access to their own datastore, so they can modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:89
#: 4bb9991da491400fa49cd824ffe5f09f
msgid "Operation"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:91
#: d39fe71e12294e919ccddfe1e160a34e
msgid ""
"Fundamentally, the point of the Massa network is to gather, order and "
"execute operations, recorded inside blocks that are located in slots. "
"There are three types of operations: transactions, roll operations, and "
"smart contract code execution. The general structure of an operation is "
"the following, and the different types of operations differ by their "
"payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:96
#: 56c752dde9a143c59e99d4a4382d8a88
msgid "**Operation header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: ../../general-doc/architecture/archi-intro.rst:186
#: 49416de6052e44ac96d287ae431c3bf5 b70fe61c3fd54c6284eee3f86a07d6d6
msgid "``creator_public_key``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: 7525526b2347435e84068d061a32f41b
msgid "The public key of the operation creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: 084d83cac28f42958e306b4f93d0bd21
msgid "``expiration_period``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: 3c1a6ff790ed447da15fbc9b55abf13e
msgid "Period after which the operation is expired (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: 6d94f5c27ca3423f9b7d758008e22ff3
msgid "``fee``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: 97935c8245f6463ea654f8ee543d05c0
msgid "The amount of fees the creator is willing to pay (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: 21015e60e4734bb09bc26ce7978dc8f5
msgid "``type``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: 4abd865be94f4d42add0420fd77709df
msgid ""
"The type of operation (from 0 to 4: transaction, rollbuy, :raw-"
"html:`<br/>` rollsell, executesc, callsc) (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: 31018a32c38145ec96a93508dc92d704
msgid "``payload``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: a38c3fcc94b942d297ec8d9aa0f8f21e
msgid "The content of the operation (see below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: ../../general-doc/architecture/archi-intro.rst:191
#: 24a0d9b2b4a24ccdb3be78c79aa00f0c 717f363cd2534b0d8a22808d0c7ea44b
msgid "``signature``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: 8575043bdad14ffda086f88ee4025261
msgid ""
"signature of all the above with the private key of :raw-html:`<br/>` the "
"operation creator (64 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:109
#: 0a8271faeef646138b2c41ec2010d8ee
msgid "Transactions operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:111
#: 829a69c8849f466b9d78ec0cf9b07550
msgid ""
"Transactions are operations that move native Massa coins between "
"addresses. Here is the corresponding payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:114
#: d0029b4656fa4752bf21122f1a25630e
msgid "**Transaction payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: 1e8ebd5d1c2a4bbea1b9acfcfce7a454
msgid "``amount``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: 8bd7a40ec62d4f11b3b28c7b6faf0145
msgid "The amount of coins to transfer (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: 7576b3c9f7524ee1a089528913ad4f5d
msgid "``destination_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: 184818434001446ea7e4aaf1566c7dcc
msgid "The address of the recipient (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:121
#: 3c4fc15dad2443808b19e2f1d625a772
msgid "Buy/Sell Rolls operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:123
#: 604f29dbd0d7409e8b6960e7c7dfd590
msgid ""
"Rolls are staking tokens that participants can buy or sell with native "
"coins (more about staking below). This is done via special operations, "
"with a simple payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:127
#: 0a110ed806384475ba2aff63f6837af0
msgid "**Roll buy/sell payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: a08bf6e5f32a4e7e9aa18f587a8d5a51
msgid "``nb_of_rolls``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: 065db139922c418aa767ce1457e076ad
msgid "The number of rolls to buy or to sell (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:134
#: eb028d0b71a140cb98654d2b030c133a
msgid "Smart Contract operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:136
#: c64bfb63098341dba30068c222fcd184
msgid ""
"Smart Contracts are pieces of code that can be run inside the Massa "
"virtual machine. There are two ways of calling for the execution of code:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:138
#: fae4eb6211d2444ea9cda380d4d3ceab
msgid "Direct execution of bytecode"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:140
#: 74467438b25548629dec8ba45aa5a52d
msgid ""
"In this case, the code is provided in the operation payload and executed "
"directly:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:143
#: 29297dc06b8f4095ba34304956b7841e
msgid "**Execute SC payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:161
#: 56def9c3ccfe4531b67f56d519a835a7 f84d44f1ea3a449786785d8b3e40d8eb
msgid "``max_gas``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:161
#: 8a83329590df4c418ea2027b3d6b1216 f760876fa720423b865ec7f4ebe89ab0
msgid "The maximum gas spendable for this operation (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: 718442b7910b4835b82fcc446ce7b862
msgid "``bytecode_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: cd6156c11d784fc281f5d266ce5646ee
msgid "The length of the bytecode field (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:147
#: 63bbf06c996b4357a5ab239d20d59dd0
msgid "The bytecode to run (in the context of the caller address)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:148
#: 763609ae5e174a649ebe84adf9328f3c
msgid "``datastore_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:148
#: 7e5daace9251497abdd9af5262f030e0
msgid ""
"The number of the datastore keys (u64 varint), each record :raw-"
"html:`<br/>` is stored then one after the other after"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:150
#: 3a204f00e68c43c5810fd7a3df63796b
msgid "list of datastore records"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:150
#: 5f3c22d87f72425f92677e60bfa90b92
msgid ""
"Concatenation of ``key_len`` (u8), ``key``, :raw-html:`<br/>` "
"``value_len`` (u64 varint), ``value``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:154
#: 9d85e89a0a4f42c0afcc1513af1ced9f
msgid "Smart Contract function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:156
#: c2c57823989741c1be5c2425c813f709
msgid ""
"Here, the code is indirectly called via the call to an existing smart "
"contract function, together with the required parameters:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:159
#: 954e475667c84f95bfeb00c9edda0ef5
msgid "**Call SC**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:162
#: c29e2ac80efe41ce8e66e47fd71ff931
msgid "``coins``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:162
#: 1faddfc5f86f495691473c77bb143f76
msgid "The coins transferred in the call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:163
#: 2069186aa272404daa72789a9c0e2182
msgid "``target_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:163
#: 5a8a8fd15f6f49e897efd77cc8cf6641
msgid "The address of the targeted smart contract (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: ae70c1f1a28d4360805c833a88efb1d6
msgid "``function_name_length``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: 0131c408bb824ad8a89c48a523206638
msgid "The length of the name of the function that is called (u8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: 0cc25f4d2f9346468e67e0f48958bc9f
msgid "``function_name``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: 722b8f7912c444f0b340969775e726bd
msgid "The name of the function that is called (utf8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: 2251405fe76a40b1b68911bc038f9602
msgid "``param_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: e240570dbda74f81b2e5fc094f3d85ed
msgid "The number of parameters of the function call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: 8744f675540945aab1939bac124e9e7d
msgid "``params``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: c4a8b8544c81495c92e9f6c4be79aba9
msgid "The parameters of the function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:171
#: ee321f0ac34d4df4870d0d4168eec2ce
msgid "Block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:173
#: 9b439107b79941ff9f10ff16718c002f
msgid ""
"A block is a data structure built by nodes and its function it to "
"aggregate several operations. As explained above, for each new slot that "
"becomes active, a particular node in the network is elected in a "
"deterministic way with the task of creating the block that will be stored"
" in that slot (more about this in the description of the Selector Module "
"below). A block from a given thread can only contain operations "
"originating from a `creator_public_key` whose hash's five first bits "
"designate the corresponding thread, thus implicitly avoiding collisions "
"in operations integrated into parallel threads."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:179
#: 2e9c7c31ad494845ae777224c1d9c712
msgid "The content of a block is as follows:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:182
#: d7e51e4050f54cc9990df5eba7fd8963
msgid "**Block header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:184
#: d9d6005034ad42c1919e62cd9b6097c0
msgid "``slot``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:184
#: 2ad43b22ad814d61a0cce87bf708ccce
msgid ""
"A description of the block slot, defined by a couple (period, thread) "
"that :raw-html:`<br/>` uniquely identify it"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:186
#: 770fa4b89143463bb87352e2229481c4
msgid "The public key of the block creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:187
#: fd1ce4d4ea9d442badd83b32a831a150
msgid "``parents``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:187
#: a328ed120b5b4f83994a6c1dc02c833f
msgid ""
"A list of the 32 parents of the block, one parent per thread (parent "
"blocks are :raw-html:`<br/>` identified by the block hash)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: 79a3931700c146e49a329546aa0e3c38
msgid "``endorsements``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: f124405344444a5b97a685d9805e7a41
msgid ""
"A list of the 16 endorsements for the block (more about endorsements "
"below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:190
#: bb987e530a56418fb0d89fb39985131a
msgid "``operations_hash``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:190
#: ce6b369a02bd49b896ce6f4b854544c9
msgid ""
"A hash of all the operations included in the block (=hash of the block "
"body below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:191
#: cdc46d6bb1e8475690edf93cd78f168d
msgid "signature of all the above with the private key of the block creator"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:193
#: 7a1218b19416456c8039a5be33cecbbf
msgid "**Block body**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:195
#: d637289bbc484b3aa29848b41b46dcd0
msgid "``operations``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:195
#: 06ab9c3d837942b295ee207af6318c43
msgid "The list of all operations included in the block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:198
#: 1ac0574201be4fb580e8e2acce1628a1
msgid ""
"Endorsements are optional inclusion in the block, but their inclusion is "
"incentivized for block creators. They are validations of the fact that "
"the parent block on the thread of the block is the best parent that could"
" have been chosen, done by other nodes that have also been "
"deterministically selected via the proof of stake probability "
"distribution (see below). A comprehensive description of endorsements can"
" be found `here <https://docs.massa.net/en/latest/general-"
"doc/architecture/endorsements.html>`_, so we will not go further into "
"details in the context of this introduction."
msgstr ""

