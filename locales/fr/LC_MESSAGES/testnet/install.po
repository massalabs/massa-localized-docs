# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized
# Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-06 00:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../testnet/install.rst:4 57e2aaaa56eb45f7872645f099f1ece1
msgid "Installing a node"
msgstr ""

#: ../../testnet/install.rst:8 17139f556deb4e92b84561127daa98fe
msgid ""
"Right now 4 cores and 8 GB of RAM should be enough to run a node, but it "
"might increase in the future. More info in the :ref:`FAQ <testnet-faq>`."
msgstr ""

#: ../../testnet/install.rst:13 9d994b7d04354aba88eda221b424617e
msgid "From thyra (most simple installation)"
msgstr ""

#: ../../testnet/install.rst:15 c5f42022784742a0b86f85e246d68036
msgid ""
"If you wish to run a Massa node with a couple of clicks only, you can "
"download thyra app and activate the node-manager plugin. This will enable"
" you to configure, install, start and even update a node using a simple "
"graphical interface. For that, there are 5 steps to follow:"
msgstr ""

#: ../../testnet/install.rst:20 e0ffdc28420b47739b70f036955d84d9
msgid "Install thyra based on your OS:"
msgstr ""

#: ../../testnet/install.rst:22 5d9ba8fd82034b0a86bba18c4740efc8
msgid ""
"`Windows <https://github.com/massalabs/thyra/releases/latest/download"
"/thyra-installer_windows_amd64.exe>`_"
msgstr ""

#: ../../testnet/install.rst:23 59b8812e74b141188016e0555ecc8dde
msgid "MacOS"
msgstr ""

#: ../../testnet/install.rst:25 2c348d81a9524814b1e9c7f75f21f5bd
msgid ""
"For Apple Silicon CPUs (M1, M2...), use `ARM "
"<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
"installer_darwin_arm64.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:27 18e3ef0206ab46af8a02b319c06d6664
msgid ""
"For Intel CPUs (i5, i7...), use `AMD "
"<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
"installer_darwin_amd64.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:30 380ad25dbf3442f9ab1dbdc70adcf49e
msgid ""
"`Linux <https://github.com/massalabs/thyra/releases/latest/download"
"/thyra-installer_linux_amd64.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:32 69186950e20f4395abb9646a3f10d8b4
msgid ""
"Start thyra using the icon tray. If you need help, this `page "
"<https://github.com/massalabs/thyra/blob/main/INSTALLATION.md>`_ can "
"help."
msgstr ""

#: ../../testnet/install.rst:34 7110cae9a1914f78b5983352586d7ef7
msgid ""
"`Configure your VPS <https://github.com/massalabs/thyra-node-manager-"
"plugin/wiki>`_ and go to `thyra home page "
"<https://my.massa/thyra/home/>`_."
msgstr ""

#: ../../testnet/install.rst:36 3bc6f361127f49c4b3462035947edf6f
msgid "Install the node-manager plugin."
msgstr ""

#: ../../testnet/install.rst:37 31c62a6623c3470baed4e166d0ea1e23
msgid "Add your VPS details and click on \"start\"."
msgstr ""

#: ../../testnet/install.rst:39 e26df3ff73c64ab394521b61b58850ee
msgid "You're now a Massa node-runner!"
msgstr ""

#: ../../testnet/install.rst:42 b9d84ca7aae4496499c2089e9d2524c6
msgid ""
"If you have trouble following this procedure, feel free to `open a "
"question <https://github.com/massalabs/thyra/issues/new>`_ describing "
"your problem."
msgstr ""

#: ../../testnet/install.rst:47 e2aaed37e4104c71bddb600f5fb57097
msgid "From binaries (simple installation)"
msgstr ""

#: ../../testnet/install.rst:49 e9d32b2348f64050b224df1d4e76e4be
msgid ""
"If you just wish to run a Massa node without compiling it yourself, you "
"can simply download the latest binary below and go the the next step: "
":ref:`Running a node <testnet-running>`."
msgstr ""

#: ../../testnet/install.rst:52 2bc2de54845e4df8b96f052d5e2dec9a
msgid ""
"`Windows executable "
"<https://github.com/massalabs/massa/releases/download/TEST.23.0/massa_TEST.23.0_release_windows.zip>`_"
msgstr ""

#: ../../testnet/install.rst:54 c0c79143a91846d9a288bedc879c6f88
msgid ""
"`Linux binary "
"<https://github.com/massalabs/massa/releases/download/TEST.23.0/massa_TEST.23.0_release_linux.tar.gz>`_"
" - only works with libc2.28 at least (for example Ubuntu 20.04 and "
"higher)"
msgstr ""

#: ../../testnet/install.rst:56 a3e5dbbb6f054614a2365e04f7b057e1
msgid ""
"`MacOS binary "
"<https://github.com/massalabs/massa/releases/download/TEST.23.0/massa_TEST.23.0_release_macos.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:59 d8aeae81fd6c4af2b644b27559b3849f
msgid "From source code (advanced installation)"
msgstr ""

#: ../../testnet/install.rst:61 7fa9e8ee1f2045429fd50a4f51fc940c
msgid ""
"Otherwise, if you wish to run a Massa node from source code, here are the"
" steps to follow:"
msgstr ""

#: ../../testnet/install.rst:64 7fc1878911354c3291e83c352dac5ec4
msgid "On Ubuntu / MacOS"
msgstr ""

#: ../../testnet/install.rst:66 8c1ed77038584f338465da02abed9f8d
msgid ""
"on Ubuntu, these libs must be installed: ``sudo apt install pkg-config "
"curl git build-essential libssl-dev libclang-dev cmake``"
msgstr ""

#: ../../testnet/install.rst:68 1c30479385844a6cbf9321316411f9ac
msgid "on MacOS: ``brew install llvm cmake``"
msgstr ""

#: ../../testnet/install.rst:69 03ab360b03684894add3f4852642fbb7
msgid ""
"install `rustup <https://www.rust-lang.org/tools/install>`_: ``curl "
"--proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh``"
msgstr ""

#: ../../testnet/install.rst:71 bbf2c1b63c1e4971a80d05972ef02aca
msgid "configure path: ``source $HOME/.cargo/env``"
msgstr ""

#: ../../testnet/install.rst:72 ../../testnet/install.rst:76
#: 18122e8150d94ee19e7246f703352eb1 66ed5d63c87f48439edfd935eafde457
msgid "check rust version: ``rustc --version``"
msgstr ""

#: ../../testnet/install.rst:73 fc582d54f2734b528ca0fa33a552665f
msgid ""
"install `nigthly <https://doc.rust-lang.org/edition-guide/rust-2018"
"/rustup-for-managing-rust-versions.html>`_: ``rustup toolchain install "
"nightly-2023-02-27``"
msgstr ""

#: ../../testnet/install.rst:75 e73a81855cb449aea6a033b59ee17a13
msgid "set it as default: ``rustup default nightly-2023-02-27``"
msgstr ""

#: ../../testnet/install.rst:77 1110d9a092724db6a0c820d16e4fd1f6
msgid ""
"clone this repo: ``git clone --branch testnet "
"https://github.com/massalabs/massa.git``"
msgstr ""

#: ../../testnet/install.rst:80 b0ae97489adc4baabb92d115043616f5
msgid "On Windows"
msgstr ""

#: ../../testnet/install.rst:82 5fd72aa2009b4be5852af0793d7fae10
msgid "**Set up your Rust environment**"
msgstr ""

#: ../../testnet/install.rst:84 cc137e502af74c82a2377d00562a9561
msgid ""
"On Windows, you should first follow the indications from Microsoft to be "
"able to run on a Rust environment `here <https://docs.microsoft.com/en-"
"gb/windows/dev-environment/rust/setup>`__."
msgstr ""

#: ../../testnet/install.rst:87 758e037718924d529be1c105bb85a175
msgid "Install Visual Studio (recommended) or the Microsoft C++ Build Tools."
msgstr ""

#: ../../testnet/install.rst:88 cfad1aecfd1e423c90718351d77a7eab
msgid ""
"Once Visual Studio is installed, click on C++ Build Tool. Select on the "
"right column called \"installation details\" the following packages:"
msgstr ""

#: ../../testnet/install.rst:91 b017e3d24b61423ba8a0e467c2d22fd6
msgid "MSCV v142 -- VS 2019"
msgstr ""

#: ../../testnet/install.rst:92 beb0b5fe499e482591c052b84d44e730
msgid "Windows 10 SDK"
msgstr ""

#: ../../testnet/install.rst:93 560f47216abd4766bec7aeeeac759f1a
msgid "C++ CMake tools for Windows"
msgstr ""

#: ../../testnet/install.rst:94 2fef32a5e6fc4889acc83979000f10fd
msgid "Testing Tools Core Feature"
msgstr ""

#: ../../testnet/install.rst:96 b7464cdd540947df93ce1f5adef32ae6
msgid "Click install on the bottom right to download and install those packages"
msgstr ""

#: ../../testnet/install.rst:97 6c915c41ecb94c60be2ddf7d49447360
msgid ""
"Install NASM : https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/ choose"
" win32 or win64 folder depending on your architecture and download then "
"launch the installer."
msgstr ""

#: ../../testnet/install.rst:99 37aa5ed66a6d46f2b8eecf9a7058b36f
msgid ""
"Install `Chocolatey <https://docs.chocolatey.org/en-us/choco/setup>`_ and"
" run: ``choco install llvm cmake protoc``"
msgstr ""

#: ../../testnet/install.rst:100 edaab441caa54570802ac74d000ed388
msgid ""
"Install Rust, to be downloaded `here <https://www.rust-"
"lang.org/tools/install>`__"
msgstr ""

#: ../../testnet/install.rst:101 57285076d20b4d7ba980da57448c35fb
msgid ""
"Install Git for windows, to be downloaded `here <https://git-"
"scm.com/download/win>`__"
msgstr ""

#: ../../testnet/install.rst:102 f9e16a09513746b6ab2b04fedc9e3b8a
msgid ""
"Install install protoc in your PATH, to be downloaded `here "
"<https://github.com/protocolbuffers/protobuf/releases>`__"
msgstr ""

#: ../../testnet/install.rst:104 5a08487344f144a4baeefc27c6dd6a89
msgid "**Clone the Massa Git Repository**"
msgstr ""

#: ../../testnet/install.rst:106 4266d01c303148eda3f52f6f1a6ff79d
msgid "Open Windows Power Shell"
msgstr ""

#: ../../testnet/install.rst:108 396b16eef374459a8ea276656ac43483
msgid ""
"Clone the latest distributed version: ``git clone --branch testnet "
"https://github.com/massalabs/massa.git``"
msgstr ""

#: ../../testnet/install.rst:109 e5e718b77b9f4dc389058fa5c2ac4071
msgid "Change default Rust to nightly: ``rustup default nightly-2023-02-27``"
msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.16.1/massa_TEST.16.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.16.1/massa_TEST.16.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.16.1/massa_TEST.16.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly`"
#~ msgstr ""

#~ msgid "Change default Rust to nightly: :code:`rustup default nightly`"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.17.1/massa_TEST.17.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.17.1/massa_TEST.17.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.17.1/massa_TEST.17.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly-2022-11-14`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly-2022-11-14`"
#~ msgstr ""

#~ msgid ""
#~ "Change default Rust to nightly: "
#~ ":code:`rustup default nightly-2022-11-14`"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly-2022-12-24`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly-2022-12-24`"
#~ msgstr ""

#~ msgid ""
#~ "Change default Rust to nightly: "
#~ ":code:`rustup default nightly-2022-12-24`"
#~ msgstr ""

#~ msgid "From binaries"
#~ msgstr ""

#~ msgid "From source code"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these libs must be "
#~ "installed: :code:`sudo apt install pkg-"
#~ "config curl git build-essential "
#~ "libssl-dev libclang-dev`"
#~ msgstr ""

#~ msgid "on MacOS: :code:`brew install llvm`"
#~ msgstr ""

#~ msgid ""
#~ "install `rustup <https://www.rust-"
#~ "lang.org/tools/install>`_: :code:`curl --proto "
#~ "'=https' --tlsv1.2 -sSf https://sh.rustup.rs |"
#~ " sh`"
#~ msgstr ""

#~ msgid "configure path: :code:`source $HOME/.cargo/env`"
#~ msgstr ""

#~ msgid "check rust version: :code:`rustc --version`"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly-2023-01-30`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly-2023-01-30`"
#~ msgstr ""

#~ msgid ""
#~ "clone this repo: :code:`git clone "
#~ "--branch testnet https://github.com/massalabs/massa.git`"
#~ msgstr ""

#~ msgid ""
#~ "Install `Chocolatey <https://docs.chocolatey.org/en-"
#~ "us/choco/setup>`_ and run: :code:`choco "
#~ "install llvm`"
#~ msgstr ""

#~ msgid ""
#~ "Clone the latest distributed version: "
#~ ":code:`git clone --branch testnet "
#~ "https://github.com/massalabs/massa.git`"
#~ msgstr ""

#~ msgid ""
#~ "Change default Rust to nightly: "
#~ ":code:`rustup default nightly-2023-01-30`"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: ``rustup toolchain install"
#~ " nightly-2023-01-30``"
#~ msgstr ""

#~ msgid "set it as default: ``rustup default nightly-2023-01-30``"
#~ msgstr ""

#~ msgid "Change default Rust to nightly: ``rustup default nightly-2023-01-30``"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid "Install thyra based on your OS"
#~ msgstr ""

#~ msgid ""
#~ "`ARM "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_darwin_arm64>`_"
#~ msgstr ""

#~ msgid ""
#~ "`AMD "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_darwin_amd64>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "server_linux_amd64>`_"
#~ msgstr ""

#~ msgid ""
#~ "Configure your VPS (if not done "
#~ "already) and go to `thyra home "
#~ "page <https://my.massa/thyra/home/>`_"
#~ msgstr ""

#~ msgid "Install the node-manager plugin"
#~ msgstr ""

#~ msgid "Add your VPS details and click on \"start\""
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these libs must be "
#~ "installed: ``sudo apt install pkg-config"
#~ " curl git build-essential libssl-dev"
#~ " libclang-dev``"
#~ msgstr ""

#~ msgid "on MacOS: ``brew install llvm``"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these tools and libs "
#~ "must be installed: ``sudo apt install"
#~ " pkg-config curl git build-essential"
#~ " libssl-dev libclang-dev protobuf-"
#~ "compiler``"
#~ msgstr ""

#~ msgid "on MacOS: ``brew install llvm protobuf``"
#~ msgstr ""

#~ msgid ""
#~ "Install `Chocolatey <https://docs.chocolatey.org/en-"
#~ "us/choco/setup>`_ and run: ``choco install "
#~ "llvm``"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.0/massa_TEST.22.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.0/massa_TEST.22.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.0/massa_TEST.22.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.1/massa_TEST.22.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.1/massa_TEST.22.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.1/massa_TEST.22.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.2/massa_TEST.22.2_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.2/massa_TEST.22.2_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.2/massa_TEST.22.2_release_macos.tar.gz>`_"
#~ msgstr ""

