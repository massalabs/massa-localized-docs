# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized
# Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-17 00:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../testnet/install.rst:4 c1b77991e18c47de8a9821e9c38decb7
msgid "Installing a node"
msgstr ""

#: ../../testnet/install.rst:8 ccd23360b37b4a8892ffad192db7079b
msgid ""
"Right now 4 cores and 8 GB of RAM should be enough to run a node, but it "
"might increase in the future. More info in the :ref:`FAQ <testnet-faq>`."
msgstr ""

#: ../../testnet/install.rst:13 0762ac83568043fbbd091bf5691d333e
msgid "From thyra (most simple installation)"
msgstr ""

#: ../../testnet/install.rst:15 2b773808a73b426a916a3dcd3d05004e
msgid ""
"If you wish to run a Massa node with a couple of clicks only, you can "
"download thyra app and activate the node-manager plugin. This will enable"
" you to configure, install, start and even update a node using a simple "
"graphical interface. For that, there are 5 steps to follow:"
msgstr ""

#: ../../testnet/install.rst:20 72e5321502b64fbb9cd18dbc7663977e
msgid "Install thyra based on your OS:"
msgstr ""

#: ../../testnet/install.rst:22 c1a6815a9f764b32907b6bb329f6f395
msgid ""
"`Windows <https://github.com/massalabs/thyra/releases/latest/download"
"/thyra-installer_windows_amd64.exe>`_"
msgstr ""

#: ../../testnet/install.rst:23 60860a97df1f484eb4bcebc74d1ac8f3
msgid "MacOS"
msgstr ""

#: ../../testnet/install.rst:25 11373fe5a3064b378445ca41b70b4882
msgid ""
"For Apple Silicon CPUs (M1, M2...), use `ARM "
"<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
"installer_darwin_arm64.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:27 95b1be2c12e44fe89b554da631b6fff6
msgid ""
"For Intel CPUs (i5, i7...), use `AMD "
"<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
"installer_darwin_amd64.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:30 786dc7dffb4641779b7e8c5967d563dc
msgid ""
"`Linux <https://github.com/massalabs/thyra/releases/latest/download"
"/thyra-installer_linux_amd64.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:32 9dfc4f0e535c4f749f3ecbe3314dd67a
msgid ""
"Start thyra using the icon tray. If you need help, this `page "
"<https://github.com/massalabs/thyra/blob/main/INSTALLATION.md>`_ can "
"help."
msgstr ""

#: ../../testnet/install.rst:34 703ac36570c142dd866397ea1ce90fd0
msgid ""
"`Configure your VPS <https://github.com/massalabs/thyra-node-manager-"
"plugin/wiki>`_ and go to `thyra home page "
"<https://my.massa/thyra/home/>`_."
msgstr ""

#: ../../testnet/install.rst:36 475cab640eac496a9429a436f8d724ad
msgid "Install the node-manager plugin."
msgstr ""

#: ../../testnet/install.rst:37 5e0db24d501e4f2db1e433302238bb7c
msgid "Add your VPS details and click on \"start\"."
msgstr ""

#: ../../testnet/install.rst:39 dac8cb1ea068408b89c71478ca9e39ba
msgid "You're now a Massa node-runner!"
msgstr ""

#: ../../testnet/install.rst:42 903ba3ad8eeb45b995fdba19db3feda7
msgid ""
"If you have trouble following this procedure, feel free to `open a "
"question <https://github.com/massalabs/thyra/issues/new>`_ describing "
"your problem."
msgstr ""

#: ../../testnet/install.rst:47 c34a9404f901425f9fc79b0005729feb
msgid "From binaries (simple installation)"
msgstr ""

#: ../../testnet/install.rst:49 528f05e567ba41af9b71b2ccd82a3710
msgid ""
"If you just wish to run a Massa node without compiling it yourself, you "
"can simply download the latest binary below and go the the next step: "
":ref:`Running a node <testnet-running>`."
msgstr ""

#: ../../testnet/install.rst:52 67f714ae81194263a735e264dba638ca
msgid ""
"`Windows executable "
"<https://github.com/massalabs/massa/releases/download/TEST.23.2/massa_TEST.23.2_release_windows.zip>`_"
msgstr ""

#: ../../testnet/install.rst:54 ef892ebcf3dd4d82a707d8602d3c6132
msgid ""
"`Linux binary "
"<https://github.com/massalabs/massa/releases/download/TEST.23.2/massa_TEST.23.2_release_linux.tar.gz>`_"
" - only works with libc2.28 at least (for example Ubuntu 20.04 and "
"higher)"
msgstr ""

#: ../../testnet/install.rst:56 7f5bda53399145069f7649ed8c73c50b
msgid ""
"`MacOS binary "
"<https://github.com/massalabs/massa/releases/download/TEST.23.2/massa_TEST.23.2_release_macos.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:59 950193342d9c47d58c9ee9f67a507b30
msgid "From source code (advanced installation)"
msgstr ""

#: ../../testnet/install.rst:61 693b49c28ca6476b9777809a50ffc53b
msgid ""
"Otherwise, if you wish to run a Massa node from source code, here are the"
" steps to follow:"
msgstr ""

#: ../../testnet/install.rst:64 17b90f83ee81494280afd20cfbfd72d5
msgid "On Ubuntu / MacOS"
msgstr ""

#: ../../testnet/install.rst:66 8397d85f4fdf4c128c44c731c501f83e
msgid ""
"on Ubuntu, these libs must be installed: ``sudo apt install pkg-config "
"curl git build-essential libssl-dev libclang-dev cmake``"
msgstr ""

#: ../../testnet/install.rst:68 5571901d1c974d6ba11e1e41f5b7b0bb
msgid "on MacOS: ``brew install llvm cmake``"
msgstr ""

#: ../../testnet/install.rst:69 868f246b9a2143b5bf8e6b31f56bdb66
msgid ""
"install `rustup <https://www.rust-lang.org/tools/install>`_: ``curl "
"--proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh``"
msgstr ""

#: ../../testnet/install.rst:71 cf52f8e7e51b4b6e88ccf94725d24d1d
msgid "configure path: ``source $HOME/.cargo/env``"
msgstr ""

#: ../../testnet/install.rst:72 ../../testnet/install.rst:76
#: 0f0ceb9a425343b98e9e509315e0d27e 9ae2bbdf5fb941f38e41ea0de84c472e
msgid "check rust version: ``rustc --version``"
msgstr ""

#: ../../testnet/install.rst:73 9f18484957184e5da093978b303562d0
msgid ""
"install `nigthly <https://doc.rust-lang.org/edition-guide/rust-2018"
"/rustup-for-managing-rust-versions.html>`_: ``rustup toolchain install "
"nightly-2023-02-27``"
msgstr ""

#: ../../testnet/install.rst:75 410042706fa94a01a770591ea96cc288
msgid "set it as default: ``rustup default nightly-2023-02-27``"
msgstr ""

#: ../../testnet/install.rst:77 8f6c6e20148844659302cfffc4539109
msgid ""
"clone this repo: ``git clone --branch testnet "
"https://github.com/massalabs/massa.git``"
msgstr ""

#: ../../testnet/install.rst:80 952bae3cd38b4c209b6b7592efe54178
msgid "On Windows"
msgstr ""

#: ../../testnet/install.rst:82 9d75ca5dcf2f4fca82ede69d398fc8ce
msgid "**Set up your Rust environment**"
msgstr ""

#: ../../testnet/install.rst:84 04758ce1a04f449987b3e753eac3069d
msgid ""
"On Windows, you should first follow the indications from Microsoft to be "
"able to run on a Rust environment `here <https://docs.microsoft.com/en-"
"gb/windows/dev-environment/rust/setup>`__."
msgstr ""

#: ../../testnet/install.rst:87 16d88442d67240a8813150d284c12796
msgid "Install Visual Studio (recommended) or the Microsoft C++ Build Tools."
msgstr ""

#: ../../testnet/install.rst:88 d2764e1a421c4412ac9229892ee58137
msgid ""
"Once Visual Studio is installed, click on C++ Build Tool. Select on the "
"right column called \"installation details\" the following packages:"
msgstr ""

#: ../../testnet/install.rst:91 b1807420bf5f48f8b720aac681c1c231
msgid "MSCV v142 -- VS 2019"
msgstr ""

#: ../../testnet/install.rst:92 f2c7a9e14a114063aa355534a8b8f823
msgid "Windows 10 SDK"
msgstr ""

#: ../../testnet/install.rst:93 e054650f2a7c44f08770efb221a1fd98
msgid "C++ CMake tools for Windows"
msgstr ""

#: ../../testnet/install.rst:94 197d675a248b4a719c8d5bc52c906330
msgid "Testing Tools Core Feature"
msgstr ""

#: ../../testnet/install.rst:96 74ed676a00894ea7b01056d119c72265
msgid "Click install on the bottom right to download and install those packages"
msgstr ""

#: ../../testnet/install.rst:97 6a020be4a71941a8bd518bf0890f2a4b
msgid ""
"Install NASM : https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/ choose"
" win32 or win64 folder depending on your architecture and download then "
"launch the installer."
msgstr ""

#: ../../testnet/install.rst:99 0793d3fba0354d6d91e58afcd4fc7ad0
msgid ""
"Install `Chocolatey <https://docs.chocolatey.org/en-us/choco/setup>`_ and"
" run: ``choco install llvm cmake protoc``"
msgstr ""

#: ../../testnet/install.rst:100 d622027a20b24d2c86f1b25db5be6bb6
msgid ""
"Install Rust, to be downloaded `here <https://www.rust-"
"lang.org/tools/install>`__"
msgstr ""

#: ../../testnet/install.rst:101 0010577eae9442d391c0664cfd8d62ab
msgid ""
"Install Git for windows, to be downloaded `here <https://git-"
"scm.com/download/win>`__"
msgstr ""

#: ../../testnet/install.rst:102 65e7cb9bbebc4fa6b4d119535d5f2e32
msgid ""
"Install install protoc in your PATH, to be downloaded `here "
"<https://github.com/protocolbuffers/protobuf/releases>`__"
msgstr ""

#: ../../testnet/install.rst:104 8840efcca59c4b93aeae206aa0a4e39c
msgid "**Clone the Massa Git Repository**"
msgstr ""

#: ../../testnet/install.rst:106 ed379ca76b6c45d6bdc3a3da5a520328
msgid "Open Windows Power Shell"
msgstr ""

#: ../../testnet/install.rst:108 36325a5a5c9041b6abe2e8429959015e
msgid ""
"Clone the latest distributed version: ``git clone --branch testnet "
"https://github.com/massalabs/massa.git``"
msgstr ""

#: ../../testnet/install.rst:109 84931ac7ab3b4d28b3105f4bd006ca69
msgid "Change default Rust to nightly: ``rustup default nightly-2023-02-27``"
msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.16.1/massa_TEST.16.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.16.1/massa_TEST.16.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.16.1/massa_TEST.16.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly`"
#~ msgstr ""

#~ msgid "Change default Rust to nightly: :code:`rustup default nightly`"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.17.1/massa_TEST.17.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.17.1/massa_TEST.17.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.17.1/massa_TEST.17.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly-2022-11-14`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly-2022-11-14`"
#~ msgstr ""

#~ msgid ""
#~ "Change default Rust to nightly: "
#~ ":code:`rustup default nightly-2022-11-14`"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly-2022-12-24`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly-2022-12-24`"
#~ msgstr ""

#~ msgid ""
#~ "Change default Rust to nightly: "
#~ ":code:`rustup default nightly-2022-12-24`"
#~ msgstr ""

#~ msgid "From binaries"
#~ msgstr ""

#~ msgid "From source code"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these libs must be "
#~ "installed: :code:`sudo apt install pkg-"
#~ "config curl git build-essential "
#~ "libssl-dev libclang-dev`"
#~ msgstr ""

#~ msgid "on MacOS: :code:`brew install llvm`"
#~ msgstr ""

#~ msgid ""
#~ "install `rustup <https://www.rust-"
#~ "lang.org/tools/install>`_: :code:`curl --proto "
#~ "'=https' --tlsv1.2 -sSf https://sh.rustup.rs |"
#~ " sh`"
#~ msgstr ""

#~ msgid "configure path: :code:`source $HOME/.cargo/env`"
#~ msgstr ""

#~ msgid "check rust version: :code:`rustc --version`"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly-2023-01-30`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly-2023-01-30`"
#~ msgstr ""

#~ msgid ""
#~ "clone this repo: :code:`git clone "
#~ "--branch testnet https://github.com/massalabs/massa.git`"
#~ msgstr ""

#~ msgid ""
#~ "Install `Chocolatey <https://docs.chocolatey.org/en-"
#~ "us/choco/setup>`_ and run: :code:`choco "
#~ "install llvm`"
#~ msgstr ""

#~ msgid ""
#~ "Clone the latest distributed version: "
#~ ":code:`git clone --branch testnet "
#~ "https://github.com/massalabs/massa.git`"
#~ msgstr ""

#~ msgid ""
#~ "Change default Rust to nightly: "
#~ ":code:`rustup default nightly-2023-01-30`"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: ``rustup toolchain install"
#~ " nightly-2023-01-30``"
#~ msgstr ""

#~ msgid "set it as default: ``rustup default nightly-2023-01-30``"
#~ msgstr ""

#~ msgid "Change default Rust to nightly: ``rustup default nightly-2023-01-30``"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid "Install thyra based on your OS"
#~ msgstr ""

#~ msgid ""
#~ "`ARM "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_darwin_arm64>`_"
#~ msgstr ""

#~ msgid ""
#~ "`AMD "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_darwin_amd64>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "server_linux_amd64>`_"
#~ msgstr ""

#~ msgid ""
#~ "Configure your VPS (if not done "
#~ "already) and go to `thyra home "
#~ "page <https://my.massa/thyra/home/>`_"
#~ msgstr ""

#~ msgid "Install the node-manager plugin"
#~ msgstr ""

#~ msgid "Add your VPS details and click on \"start\""
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these libs must be "
#~ "installed: ``sudo apt install pkg-config"
#~ " curl git build-essential libssl-dev"
#~ " libclang-dev``"
#~ msgstr ""

#~ msgid "on MacOS: ``brew install llvm``"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these tools and libs "
#~ "must be installed: ``sudo apt install"
#~ " pkg-config curl git build-essential"
#~ " libssl-dev libclang-dev protobuf-"
#~ "compiler``"
#~ msgstr ""

#~ msgid "on MacOS: ``brew install llvm protobuf``"
#~ msgstr ""

#~ msgid ""
#~ "Install `Chocolatey <https://docs.chocolatey.org/en-"
#~ "us/choco/setup>`_ and run: ``choco install "
#~ "llvm``"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.0/massa_TEST.22.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.0/massa_TEST.22.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.0/massa_TEST.22.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.1/massa_TEST.22.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.1/massa_TEST.22.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.1/massa_TEST.22.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.2/massa_TEST.22.2_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.2/massa_TEST.22.2_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.2/massa_TEST.22.2_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.23.0/massa_TEST.23.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.23.0/massa_TEST.23.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.23.0/massa_TEST.23.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.23.1/massa_TEST.23.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.23.1/massa_TEST.23.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.23.1/massa_TEST.23.1_release_macos.tar.gz>`_"
#~ msgstr ""

