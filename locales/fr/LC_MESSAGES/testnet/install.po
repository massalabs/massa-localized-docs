# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized
# Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-06 00:44+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../testnet/install.rst:4 73bd8051b8c640f1b0119877bfae652a
msgid "Installing a node"
msgstr ""

#: ../../testnet/install.rst:8 e9fec46471ba4196addc615be69dfcbe
msgid ""
"Right now 4 cores and 8 GB of RAM should be enough to run a node, but it "
"might increase in the future. More info in the :ref:`FAQ <testnet-faq>`."
msgstr ""

#: ../../testnet/install.rst:13 9cc91930af0c49f18c78b2542b0be369
msgid "From thyra (most simple installation)"
msgstr ""

#: ../../testnet/install.rst:15 274c983087b4461da998575bb7bcb345
msgid ""
"If you wish to run a Massa node with a couple of clicks only, you can "
"download thyra app and activate the node-manager plugin. This will enable"
" you to configure, install, start and even update a node using a simple "
"graphical interface. For that, there are 5 steps to follow:"
msgstr ""

#: ../../testnet/install.rst:20 28c2c74284414542ba30c88dd16ff9fe
msgid "Install thyra based on your OS:"
msgstr ""

#: ../../testnet/install.rst:22 d4e394fd4ef54559bf29240de529d8ff
msgid ""
"`Windows <https://github.com/massalabs/thyra/releases/latest/download"
"/thyra-installer_windows_amd64.exe>`_"
msgstr ""

#: ../../testnet/install.rst:23 db072074e1754a49b10906cceddaa6a5
msgid "MacOS"
msgstr ""

#: ../../testnet/install.rst:25 d9ebe5953074451db3bf7d4a563670ef
msgid ""
"For Apple Silicon CPUs (M1, M2...), use `ARM "
"<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
"installer_darwin_arm64.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:27 8a4473cae8b747bbbff11aeb92fac06b
msgid ""
"For Intel CPUs (i5, i7...), use `AMD "
"<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
"installer_darwin_amd64.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:30 aee6999fcd394727a58d714c1d814090
msgid ""
"`Linux <https://github.com/massalabs/thyra/releases/latest/download"
"/thyra-installer_linux_amd64.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:32 19f445d5129a4f6f95fa6400742ccb01
msgid ""
"Start thyra using the icon tray. If you need help, this `page "
"<https://github.com/massalabs/thyra/blob/main/INSTALLATION.md>`_ can "
"help."
msgstr ""

#: ../../testnet/install.rst:34 90111442b4bf480d8baa2a9436994ae0
msgid ""
"`Configure your VPS <https://github.com/massalabs/thyra-node-manager-"
"plugin/wiki>`_ and go to `thyra home page "
"<https://my.massa/thyra/home/>`_."
msgstr ""

#: ../../testnet/install.rst:36 494059fec9cf470dbd1035379c117e0d
msgid "Install the node-manager plugin."
msgstr ""

#: ../../testnet/install.rst:37 91e650ab36aa4514a253647744b94449
msgid "Add your VPS details and click on \"start\"."
msgstr ""

#: ../../testnet/install.rst:39 097f96e9ac944de784d6f078308a1ae9
msgid "You're now a Massa node-runner!"
msgstr ""

#: ../../testnet/install.rst:42 8fc25211a7864e3c9ba699157d996112
msgid ""
"If you have trouble following this procedure, feel free to `open a "
"question <https://github.com/massalabs/thyra/issues/new>`_ describing "
"your problem."
msgstr ""

#: ../../testnet/install.rst:47 cefcc967427b409cbe5ed7c7f112fff6
msgid "From binaries (simple installation)"
msgstr ""

#: ../../testnet/install.rst:49 b61d7e48f694442187662f122be67f36
msgid ""
"If you just wish to run a Massa node without compiling it yourself, you "
"can simply download the latest binary below and go the the next step: "
":ref:`Running a node <testnet-running>`."
msgstr ""

#: ../../testnet/install.rst:52 e3524f7bf8cf424aa7236d8834ca95af
msgid ""
"`Windows executable "
"<https://github.com/massalabs/massa/releases/download/TEST.22.0/massa_TEST.22.0_release_windows.zip>`_"
msgstr ""

#: ../../testnet/install.rst:54 31682be069d6406fbfd82438184e5294
msgid ""
"`Linux binary "
"<https://github.com/massalabs/massa/releases/download/TEST.22.0/massa_TEST.22.0_release_linux.tar.gz>`_"
" - only works with libc2.28 at least (for example Ubuntu 20.04 and "
"higher)"
msgstr ""

#: ../../testnet/install.rst:56 7fa7b8bf494b4a09a9c09d393aa297d7
msgid ""
"`MacOS binary "
"<https://github.com/massalabs/massa/releases/download/TEST.22.0/massa_TEST.22.0_release_macos.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:59 75f28366ba6b462e84d9038504c54a19
msgid "From source code (advanced installation)"
msgstr ""

#: ../../testnet/install.rst:61 396942c393d147aa91c6943427fe35d0
msgid ""
"Otherwise, if you wish to run a Massa node from source code, here are the"
" steps to follow:"
msgstr ""

#: ../../testnet/install.rst:64 2a7b6330c8834fd481bd5862d335954b
msgid "On Ubuntu / MacOS"
msgstr ""

#: ../../testnet/install.rst:66 4c025f576466496e92236bb2c430819e
msgid ""
"on Ubuntu, these libs must be installed: ``sudo apt install pkg-config "
"curl git build-essential libssl-dev libclang-dev cmake``"
msgstr ""

#: ../../testnet/install.rst:68 627884df92004b1a8fa4aad85e7fd87f
msgid "on MacOS: ``brew install llvm cmake``"
msgstr ""

#: ../../testnet/install.rst:69 e514651c4a2f4f13bbbbdc9cacb565d4
msgid ""
"install `rustup <https://www.rust-lang.org/tools/install>`_: ``curl "
"--proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh``"
msgstr ""

#: ../../testnet/install.rst:71 1e2899f362b14bc596e123bf592bcc1a
msgid "configure path: ``source $HOME/.cargo/env``"
msgstr ""

#: ../../testnet/install.rst:72 ../../testnet/install.rst:76
#: 2d1abc48ef91420c967df7252b4d9efb 834dbe9466c645a69b26b9438bdd8372
msgid "check rust version: ``rustc --version``"
msgstr ""

#: ../../testnet/install.rst:73 3d4f3f58cc9e479da49382aae1f3d589
msgid ""
"install `nigthly <https://doc.rust-lang.org/edition-guide/rust-2018"
"/rustup-for-managing-rust-versions.html>`_: ``rustup toolchain install "
"nightly-2023-02-27``"
msgstr ""

#: ../../testnet/install.rst:75 312bc6377f994443afc9ea0aa14a8182
msgid "set it as default: ``rustup default nightly-2023-02-27``"
msgstr ""

#: ../../testnet/install.rst:77 5b2195b2d45f411abe69e6ad6bfc8ebe
msgid ""
"clone this repo: ``git clone --branch testnet "
"https://github.com/massalabs/massa.git``"
msgstr ""

#: ../../testnet/install.rst:80 6a6f9d0d1b964a11a9d3a851e85c98e8
msgid "On Windows"
msgstr ""

#: ../../testnet/install.rst:82 a25cbb5988fd42a18e6f0df635552c6a
msgid "**Set up your Rust environment**"
msgstr ""

#: ../../testnet/install.rst:84 ce9c2ae5e8c5455094f4725d71ed3e36
msgid ""
"On Windows, you should first follow the indications from Microsoft to be "
"able to run on a Rust environment `here <https://docs.microsoft.com/en-"
"gb/windows/dev-environment/rust/setup>`__."
msgstr ""

#: ../../testnet/install.rst:87 4f464ea42bbe48f3b4b8ac53f167c778
msgid "Install Visual Studio (recommended) or the Microsoft C++ Build Tools."
msgstr ""

#: ../../testnet/install.rst:88 54c0f4269e7843d1a473aaceca0f6684
msgid ""
"Once Visual Studio is installed, click on C++ Build Tool. Select on the "
"right column called \"installation details\" the following packages:"
msgstr ""

#: ../../testnet/install.rst:91 ca9726bc0e2642d5b1cf4dae7be36a87
msgid "MSCV v142 -- VS 2019"
msgstr ""

#: ../../testnet/install.rst:92 0d9aef4606514c55a9e4362f51efc603
msgid "Windows 10 SDK"
msgstr ""

#: ../../testnet/install.rst:93 7e4c49bb2fe7499b8b87993cffb47123
msgid "C++ CMake tools for Windows"
msgstr ""

#: ../../testnet/install.rst:94 2160563ea10c4d6c91cd2bb00d4ef7f2
msgid "Testing Tools Core Feature"
msgstr ""

#: ../../testnet/install.rst:96 1ae6237519db42d4862a41423e3c5237
msgid "Click install on the bottom right to download and install those packages"
msgstr ""

#: ../../testnet/install.rst:97 ff646c4f62944085bc77c4fdaa692996
msgid ""
"Install NASM : https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/ choose"
" win32 or win64 folder depending on your architecture and download then "
"launch the installer."
msgstr ""

#: ../../testnet/install.rst:99 b71a9629e6704beeb9ddf06fff7870d6
msgid ""
"Install `Chocolatey <https://docs.chocolatey.org/en-us/choco/setup>`_ and"
" run: ``choco install llvm cmake protoc``"
msgstr ""

#: ../../testnet/install.rst:100 8a6568ecf1334020b16d5f0477e693aa
msgid ""
"Install Rust, to be downloaded `here <https://www.rust-"
"lang.org/tools/install>`__"
msgstr ""

#: ../../testnet/install.rst:101 ba7a3a11a8e54baaa00f9e62034de30a
msgid ""
"Install Git for windows, to be downloaded `here <https://git-"
"scm.com/download/win>`__"
msgstr ""

#: ../../testnet/install.rst:102 725f40a6feb74847896bc04b73ab7efe
msgid ""
"Install install protoc in your PATH, to be downloaded `here "
"<https://github.com/protocolbuffers/protobuf/releases>`__"
msgstr ""

#: ../../testnet/install.rst:104 ef671d916f5f4f7798855cdb46257161
msgid "**Clone the Massa Git Repository**"
msgstr ""

#: ../../testnet/install.rst:106 5fd3a76712c64e998817ca8a8e645c0a
msgid "Open Windows Power Shell"
msgstr ""

#: ../../testnet/install.rst:108 dfd54e40a2284fbd9b4448e7ddf17409
msgid ""
"Clone the latest distributed version: ``git clone --branch testnet "
"https://github.com/massalabs/massa.git``"
msgstr ""

#: ../../testnet/install.rst:109 6ed563c000b643d0b20f655d0ef483bf
msgid "Change default Rust to nightly: ``rustup default nightly-2023-02-27``"
msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.16.1/massa_TEST.16.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.16.1/massa_TEST.16.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.16.1/massa_TEST.16.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly`"
#~ msgstr ""

#~ msgid "Change default Rust to nightly: :code:`rustup default nightly`"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.17.1/massa_TEST.17.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.17.1/massa_TEST.17.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.17.1/massa_TEST.17.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly-2022-11-14`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly-2022-11-14`"
#~ msgstr ""

#~ msgid ""
#~ "Change default Rust to nightly: "
#~ ":code:`rustup default nightly-2022-11-14`"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly-2022-12-24`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly-2022-12-24`"
#~ msgstr ""

#~ msgid ""
#~ "Change default Rust to nightly: "
#~ ":code:`rustup default nightly-2022-12-24`"
#~ msgstr ""

#~ msgid "From binaries"
#~ msgstr ""

#~ msgid "From source code"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these libs must be "
#~ "installed: :code:`sudo apt install pkg-"
#~ "config curl git build-essential "
#~ "libssl-dev libclang-dev`"
#~ msgstr ""

#~ msgid "on MacOS: :code:`brew install llvm`"
#~ msgstr ""

#~ msgid ""
#~ "install `rustup <https://www.rust-"
#~ "lang.org/tools/install>`_: :code:`curl --proto "
#~ "'=https' --tlsv1.2 -sSf https://sh.rustup.rs |"
#~ " sh`"
#~ msgstr ""

#~ msgid "configure path: :code:`source $HOME/.cargo/env`"
#~ msgstr ""

#~ msgid "check rust version: :code:`rustc --version`"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly-2023-01-30`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly-2023-01-30`"
#~ msgstr ""

#~ msgid ""
#~ "clone this repo: :code:`git clone "
#~ "--branch testnet https://github.com/massalabs/massa.git`"
#~ msgstr ""

#~ msgid ""
#~ "Install `Chocolatey <https://docs.chocolatey.org/en-"
#~ "us/choco/setup>`_ and run: :code:`choco "
#~ "install llvm`"
#~ msgstr ""

#~ msgid ""
#~ "Clone the latest distributed version: "
#~ ":code:`git clone --branch testnet "
#~ "https://github.com/massalabs/massa.git`"
#~ msgstr ""

#~ msgid ""
#~ "Change default Rust to nightly: "
#~ ":code:`rustup default nightly-2023-01-30`"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: ``rustup toolchain install"
#~ " nightly-2023-01-30``"
#~ msgstr ""

#~ msgid "set it as default: ``rustup default nightly-2023-01-30``"
#~ msgstr ""

#~ msgid "Change default Rust to nightly: ``rustup default nightly-2023-01-30``"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid "Install thyra based on your OS"
#~ msgstr ""

#~ msgid ""
#~ "`ARM "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_darwin_arm64>`_"
#~ msgstr ""

#~ msgid ""
#~ "`AMD "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_darwin_amd64>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "server_linux_amd64>`_"
#~ msgstr ""

#~ msgid ""
#~ "Configure your VPS (if not done "
#~ "already) and go to `thyra home "
#~ "page <https://my.massa/thyra/home/>`_"
#~ msgstr ""

#~ msgid "Install the node-manager plugin"
#~ msgstr ""

#~ msgid "Add your VPS details and click on \"start\""
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these libs must be "
#~ "installed: ``sudo apt install pkg-config"
#~ " curl git build-essential libssl-dev"
#~ " libclang-dev``"
#~ msgstr ""

#~ msgid "on MacOS: ``brew install llvm``"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these tools and libs "
#~ "must be installed: ``sudo apt install"
#~ " pkg-config curl git build-essential"
#~ " libssl-dev libclang-dev protobuf-"
#~ "compiler``"
#~ msgstr ""

#~ msgid "on MacOS: ``brew install llvm protobuf``"
#~ msgstr ""

#~ msgid ""
#~ "Install `Chocolatey <https://docs.chocolatey.org/en-"
#~ "us/choco/setup>`_ and run: ``choco install "
#~ "llvm``"
#~ msgstr ""

