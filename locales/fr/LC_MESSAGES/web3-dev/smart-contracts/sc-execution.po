# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized
# Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-06 09:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../web3-dev/smart-contracts/sc-execution.rst:3
#: b3449caff37c49169be33744249babe3
msgid "Smart-contract execution"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:6
#: ccb6026a41514d7a8b9fafa5cbf70fa7
msgid "Introduction"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:8
#: 759390e8ff794a68a53d92dd9590c199
msgid ""
"Massa introduces more options when it comes to meeting different "
"requirements for execution contexts. In particular, you are not limited "
"to the standard way of deploying smart contract, and then calling that "
"contract using a transaction."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:12
#: e9f38991a9e44543a30e4e0b1356f0a4
msgid ""
"This documentation details the different possibilities regarding smart "
"contract execution, and how to use them so that you can choose the one "
"that most matches your use-case."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:15
#: a649f250ab9443f5b1f4d51ec53c8a95
msgid ""
"You can find examples for the different ways to execute smart contracts "
"in the smart contract sdk `massa-web3 <https://github.com/massalabs"
"/massa-web3>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:19
#: f29a1e8d97414895934c996965e556d6
msgid "Different ways to execute smart contracts"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:22
#: be420e4cc4344909938b840e1c227bed
msgid "\"Execute Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:24
#: d04e64bed1b146b9bdd75244e398fbd1
msgid ""
"This operation allows to send a smart contract that will be executed on "
"the blockchain (not stored), that can perform all the state changes as a "
"normal smart contract. It's often the best way to deploy an other smart "
"contract using the operation datastore of the execute operation. Our "
"`deployer <https://github.com/massalabs/massa-sc-"
"toolkit/blob/main/packages/sc-deployer/src/index.ts>`_ uses this "
"operation to deploy smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:31
#: 6e15a0dd67dc489abae84c2f92e59bd3
msgid "\"Call Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:33
#: 0e8c7375be7449c3937e1bf0ca4e6e0c
msgid ""
"This operation allows you to call the function of a smart contract that "
"exists on the blockchain with specific parameters and coins."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:36
#: dbed5dec33e84ce1a964afca6afe51d7
msgid ""
"An `example <https://github.com/massalabs/massa-web3#smart-contract-read-"
"and-write-calls>`_ in massa-web3 shows you how to make the call smart-"
"contract operation in JS/TS/NodeJS."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:40
#: fb6cda5e57464d13966ad2b9b5c001ca
msgid "Read-only Execute and Call Smart Contract"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:42
#: 43c2ffbae12441e0ae2533cd2ef904bb
msgid ""
"Read-only execute will \"dry-run\" a smart contract, i.e. execute as per "
"normal, emitting its effects which can be read, but without propagating "
"them into a block."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:44
#: 49287271e0eb429a975fa3dc42d9d268
msgid "Useful use-cases can include:"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:46
#: 8f86de4f9563443d8bf75a821664e288
msgid ""
"\"Dry-running\" future operations to estimate what their costs will be, "
"and the state changes they imply"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:47
#: aa36dca9f8954054a12c233b8cc9e60f
msgid ""
"Obtaining information on a smart contract, including its current state "
"and stored data"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:49
#: 4f829f1b7c0644428cb84afe578b9e9b
msgid ""
"A concrete example using massa-web3 library compatible with JS/TS/NodeJS "
"can be found `here <https://github.com/massalabs/massa-web3#smart-"
"contract-read-and-write-calls>`_"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:52
#: b82c267ef981499c89596fc59c83abf0
msgid "Call in Smart-contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:54
#: f8e21d76264e4f3cb4f29c9d2d665d12
msgid ""
"Calling one smart contract from another is a feature provided by the "
"smart-contract Assembly Script SDK."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:56
#: 809ca832c19f457e8c126d9b18af0b64
msgid ""
"`this example <https://github.com/massalabs/massa-sc-"
"examples/blob/main/games/tictactoe/smart-contract/assembly/main.ts>` "
"describes the use of the `call` function to send coins from the call "
"source to the call destination."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:59
#: 740e307aff5b46f895c80092cae70862
msgid "Local Call in Smart Contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:61
#: 47207c87f12b43c596d514764f7112d5
msgid ""
"As the call function, you can also call a smart contract from the code of"
" an other one, but execute it in your current context."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:64
#: 926d2305acae4003889a9467af97865e
msgid ""
"For example if the called smart contract uses the SDK function "
"`Storage.set(key, value)`, the value will be set in the storage of the "
"smart contract that made the call. The storage of the called smart "
"contract won't be affected."
msgstr ""

