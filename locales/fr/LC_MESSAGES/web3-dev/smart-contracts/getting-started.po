# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized
# Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-05 11:13+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../web3-dev/smart-contracts/getting-started.rst:6
#: 18ead77e5999432fb72b45f5ca8f3a7a
msgid "Getting started"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:8
#: 4c03c8af9c1144a3a84f4cbb75eef166
msgid ""
"In this section you will learn how to compile your first Massa smart "
"contract."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:11
#: fddf2e38b3ca493a867efaa4e4e7a233
msgid "Setting up a new project"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:13
#: 9d388c0fa0004b83a86b713adc48e962
msgid ""
"Make sure you have a recent version of `Node.js <https://nodejs.org/>`_  "
"and `npm <https://www.npmjs.com/>`_. Update or `install "
"<https://docs.npmjs.com/downloading-and-installing-node-js-and-npm>`_ "
"them if needed."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:16
#: 376bb855fea84f4fb928a80f2451a92c
msgid ""
"`massa-sc-toolkit <https://github.com/massalabs/massa-sc-toolkit/>`_ is a"
" tool that creates a boilerplate smart-contract project. To create a "
"smart-contract project, invoke the toolkit by running:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:23
#: eec34582aef34162b32eff4da4f35027
msgid ""
"You have now npm project created with AssemblyScript installed among "
"other dependencies. It will be used to generate bytecode from "
"AssemblyScript code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:27
#: ab2db03139614545b642854ed0edc3c4
msgid ""
"Massa smart-contract module (`@massalabs/massa-as-sdk`) contains the API "
"you need to use to interact with the external world of the smart contract"
" (the node, the ledger...)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:30
#: ee33c6264e0d494a82cff2beceaadca7
msgid ""
"Congratulations! Now you have a fully set up project and you are ready to"
" add some code."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:33
#: f40ceaf0805c4a41aa359a5833bed2b2
msgid "A few words on project folders:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:35
#: 441c57ee46ed4620ae93be6c73ceda21
msgid "`assembly` is where the code goes;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:36
#: 96b4ac618b484fa7ab9476a37d8a8e0d
msgid ""
"`build` will be created during compilation and will contain compiled "
"smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:39
#: 89fd0b945757410fbb5ee8200ccd86cd
msgid "Create your first smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:41
#: a50048d216de439ca2fa2a01daeb08cf
msgid ""
"Since the beginning of mankind, humans explain how to use a program, a "
"new language, a service by implementing a *Hello world!*. Your first "
"smart contract will be no exception!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:44
#: 0c58d69391974a26b0c95297563fe1a8
msgid ""
"Open the `main.ts` file in the `assembly` directory at the root of your "
"project. Replace the code in the file by the following code:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:55
#: c69bf65ccc0943208e849659b5f0576d
msgid ""
"Don't forget to save the file. Before starting compilation, just a few "
"words to describe what is used here:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:57
#: 3ae8351b48a94300a963b5ebf380bd10
msgid ""
"line 1: `generateEvent` function is imported from Massa SDK (@massalabs"
"/massa-as-sdk). This function will generate an event with the string "
"given as argument. Events can be later recovered using a Massa client."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:59
#: b313621dc2df45c9a3cb3f0dbc1d10fe
msgid ""
"line 3: `main` function is exported. This means that the main function "
"will be callable from the outside of the WebAssembly module (more about "
"that later)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:61
#: 91d28fed018a4ae88776d716cd51e3c1
msgid ""
"line 4: `generateEvent` function is called with \"Hello world!\". Brian, "
"we are thinking of you!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:63
#: 186bc5854f294e07b6b87962f7528161
msgid ""
"Now that everything is in place, we can start the compilation step by "
"running the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:69
#: dc5baa0b29554c5dbb742f106eb29fd4
msgid ""
"Congratulations! You have generated your first smart contract: the "
"`main.wasm` file in `build` directory. Note that a `deployer.wasm` file "
"has also been generated. It will be used to deploy your contract on Massa"
" network."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:74
#: f8ba35dabc8c466aaf9118e5b00bd1d7
msgid "If due to bad luck you have an error at compilation time:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:76
#: b13995cf932f49be8bab8628aa77fa7b
msgid "check that you properly followed all the steps,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:77
#: aa4819608b75498fb6170c3456d44477
msgid "do a couple a internet research,"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:78
#: 98a49883f8d94f509cdb22ccbd43ea2f
msgid ""
"look for any similar issue (open or closed) in `massa-as-sdk "
"<https://github.com/massalabs/massa-as-sdk/>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:80
#: 7c75ec2961384f318a141b73329048ae
msgid ""
"If you find nothing, feel free to contact us on `Discord "
"<https://discord.gg/massa>`_ or directly open an `issue "
"<https://github.com/massalabs/massa-as-sdk/issues>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:84
#: 35c17cfe7e054f6a9bf939983c80cb69
msgid "Deploy your smart contract"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:86
#: db23f25ad32a4dbdab42c3c527e83d7d
msgid ""
"Your smart contract is now ready to be pushed and executed on the Massa "
"network. In order to deploy it, you need to own a Massa wallet and some "
"MAS coins on it."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:90
#: b28d3693d9674ebe82420015f3d8ab7b
msgid ""
"If you don't have any wallet configured yet, :ref:`create a new one "
"<wallet>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:91
#: eb392f74ceb744098bd2843651c3e5c5
msgid ""
"If you're using a brand new wallet, add some coins by sending your "
"address to `testnet-faucet discord channel "
"<https://discord.com/channels/828270821042159636/866190913030193172>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:94
#: 4e8508f0d4a746c0923d3dac8bfc9ab9
msgid ""
"In any case, keep the `Address` and `Secret key` of your wallet, you will"
" use it later."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:96
#: 9ce3cd558e23491692a190ea8a4db1ae
msgid ""
"There are two ways you can deploy your smart contract. The easiest and "
"the recommended way is to deploy the smart contract with the smart-"
"contract toolkit (:ref:`Option 1 <sc-option-1>` below)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:99
#: ca7af2cfdaf04eefba68c18f44610f29
msgid ""
"The second option is to deploy the smart contract, through Massa client, "
"by running your own node (:ref:`Option 2 <sc-option-2>`)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:105
#: 6db77bc8eb454ba887281c863f0175e5
msgid "Option 1: Deploy your smart contract from the toolkit"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:107
#: 37e2fd0685f7400cb40b76300a28eb54
msgid ""
"To send the transaction on the network, you need to provide your wallet's"
" secret key. This is done using environment variable in `.env` file."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:114
#: b7bbc54450d6493c83587e21c4fd7c76
msgid ""
"This command will create a `.env` file. Now fill it with your wallet "
"secret key."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:116
#: 3ff37936cd6a4806b59570b019069042
msgid "Then run the following command:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:122
#: ee23c73e4831439fa674db663ade4e15
msgid ""
"Wait for a few seconds... It should return you the deployed smart "
"contract address."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:127
#: 570341b51d9b4aef85c00d66912983a1
msgid "Option 2: Execute your smart contract on your own node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:129
#: 19bd329843754789a80cbcc87e82a662
msgid "To execute the smart contract you will need:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:131
#: 09dcd88b8c6a48aa9819365cd9edaf61
msgid "A client configured with an address having coins."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:132
#: c4494957cfa24a978d3bfb6e9c9fe387
msgid "A smart contract compiled in WebAssembly (see previous step)."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:134
#: 6a0f8dc46aa04dffa488772974a04f8c
msgid "Let's go!"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:137
#: aee2ded4372d4f559695633cf0719e12
msgid "Configure the client"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:139
#: d728577d676943eeab5ccad266aeac1f
msgid ""
"Make sure that you have the latest version of the Massa node. If not, "
":ref:`install it <testnet-install>` and :ref:`run it <testnet-running>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:144
#: e5d59f611fac4689a97d600fa2aedceb
msgid ""
"You can also execute your smart-contract on a local sandbox node. To "
"learn more about sandbox node, follow this tutorial: :ref:`Local network "
"generation <local-network-generation>`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:149
#: bf96b64fc315429e8f6682f7c2bcc9f3
msgid "Execute the smart contract on the node"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:151
#: 483a4ce43490475990ce34abd232a9df
msgid ""
"Everything is in place, we can now execute the `hello world` smart "
"contract on your local node with the following command inside the "
"**client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:160
#: 7ff1d7709b81486cba7033316086ac8b
msgid "We are executing the send_smart_contract command with 6 parameters:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:162
#: 2725a9250a644495b39c258ae6cdf185
msgid "<address>: the address of your wallet kept during previous step;"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:163
#: 9e824183077342809247914510272c4d
msgid ""
"<path to wasm file>: the full path (from the root directory to the file "
"extension .wasm) of the hello smart contract, generated in the previous "
"chapter."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:165
#: dacc19bc7d7b4855a6798acc725acc6f
msgid ""
"100000: the maximum amount of gas that the execution of your smart "
"contract is allowed to use."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:166
#: 9ac4789315d94030b8098b0d4b8c6734
msgid ""
"Two 0 parameters that can be safely ignored by now. If you want more info"
" on them, use the command `help send_smart_contract`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:170
#: 10ee405754464b0a97e11d301e2c3326
msgid ""
"To go inside the **client cli**, open a terminal in `massa/massa-client` "
"directory and run `cargo run`."
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:172
#: cb978ee0fd534e3b8101a93fd43185a2
msgid "If everything went fine, the following message should be prompted:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:179
#: 4b66fe0920764812bb51c8be880dd679
msgid ""
"In that case, you should be able to retrieve the event with the `Hello "
"world` emitted. Use the following command inside the **client cli**:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:186
#: 6755b28b4fb34dd5950e460684549b00
msgid "If everything went well you should see a message similar to this one:"
msgstr ""

#: ../../web3-dev/smart-contracts/getting-started.rst:198
#: 65fb4a2d24d9472c88ebfc8d56147260
msgid "Congratulations! You have just executed your first smart contract!"
msgstr ""

#~ msgid ""
#~ "Make sure you have a recent "
#~ "version of `Node.js <https://nodejs.org/>`_  "
#~ "and `npm <https://www.npmjs.com/>`_ . Update"
#~ " or `install <https://docs.npmjs.com/downloading-"
#~ "and-installing-node-js-and-npm>`_ "
#~ "them if needed."
#~ msgstr ""

#~ msgid "On ubuntu, an easy way to install Node.js is with snap"
#~ msgstr ""

#~ msgid "On MacOS & Windows, use nvm:"
#~ msgstr ""

#~ msgid "Follow the instructions here:"
#~ msgstr ""

#~ msgid "[MacOS] `nvm <https://github.com/nvm-sh/nvm>`_"
#~ msgstr ""

#~ msgid "[Windows] `nvm-windows <https://github.com/coreybutler/nvm-windows>`_"
#~ msgstr ""

#~ msgid ""
#~ "Massa smart-contract module (@massalabs"
#~ "/massa-as-sdk) contains the API you"
#~ " need to use to interact with "
#~ "the external world of the smart "
#~ "contract (the node, the ledger...)."
#~ msgstr ""

#~ msgid ""
#~ "Since the beginning of mankind, humans"
#~ " explain how to use a program, "
#~ "a new language, a service by "
#~ "implementing a *Hello world!*."
#~ msgstr ""

#~ msgid "Your first smart contract will be no exception!"
#~ msgstr ""

#~ msgid ""
#~ "I'm told that it has nothing to"
#~ " do with the beginning of mankind "
#~ "but Brian Kernighan used it for "
#~ "the first time in *a tutorial "
#~ "introduction to the language B* "
#~ "published in 1972."
#~ msgstr ""

#~ msgid ""
#~ "Don’t forget to save the file. "
#~ "Before starting compilation, just a few"
#~ " words to describe what is used "
#~ "here:"
#~ msgstr ""

#~ msgid ""
#~ "If you are using an existing "
#~ "wallet, make sure that you have "
#~ "some coins on it."
#~ msgstr ""

#~ msgid ""
#~ "In any case, keep the `address` "
#~ "and `private_key` of your wallet, you"
#~ " will use it later."
#~ msgstr ""

#~ msgid ""
#~ "There are two ways you can deploy"
#~ " your smart contract. The easiest and"
#~ " the recommended way is to deploy "
#~ "the smart contract with the smart-"
#~ "contract toolkit (Option 1 below)."
#~ msgstr ""

#~ msgid ""
#~ "The second option is to deploy the"
#~ " smart contract, through Massa client, "
#~ "by running your own node (Option "
#~ "2)."
#~ msgstr ""

#~ msgid ""
#~ "To send the transaction on the "
#~ "network, you need to provide your "
#~ "wallet's private key. This is done "
#~ "using environment variable in `.env` "
#~ "file."
#~ msgstr ""

#~ msgid ""
#~ "This command will create a `.env` "
#~ "file. Now fill it with your wallet"
#~ " private key."
#~ msgstr ""

