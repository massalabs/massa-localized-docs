# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized
# Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-29 10:50+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../web3-dev/massa-web3.rst:7 dda713febd114b92b4e0b813c626d504
msgid "Massa web3"
msgstr ""

#: ../../web3-dev/massa-web3.rst:9 b0f5c8303c6745d8b05588b1e3d1a1c5
msgid ""
"`massa-web3 <https://github.com/massalabs/massa-web3>`_ is a TypeScript "
"library that allow you to interact with the Massa blockchain through a "
"local or remote Massa node. In particular the massa-web3 library will "
"allow you to call the :ref:`JSON-RPC API <technical-api>`, but also to "
"fetch and poll events from smart contracts on the Massa blockchain, "
"deploy smart contracts and much more. Documentation for the massa-web3 "
"library is available on the `Github repository "
"<https://github.com/massalabs/massa-web3>`_. The library is published on "
"npmjs under `@massalabs/massa-web3 "
"<https://www.npmjs.com/package/@massalabs/massa-web3>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:19 43e78d8fce7f414a8956c313fe175714
msgid ""
"`create-react-app-massa <https://github.com/massalabs/create-react-app-"
"massa>`_ is a minimal React template made for our massa-web3 library."
msgstr ""

#: ../../web3-dev/massa-web3.rst:22 770269aed6684661a7a2134566b7d8cf
msgid ""
"You'll find examples of frontends using the `massa-web3` library in the "
"`massa-sc-examples <https://github.com/massalabs/massa-sc-examples>`_ "
"repository:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:25 018af7a81e8f4b9789564c0b394f15e4
msgid ""
"`blog <https://github.com/massalabs/massa-sc-examples/tree/main/blog>`_ "
"is an example of a decentralized blog platform."
msgstr ""

#: ../../web3-dev/massa-web3.rst:29 ad49b11c949748bc8764d7e12bcdc13d
msgid "Building Decentralized Application"
msgstr ""

#: ../../web3-dev/massa-web3.rst:31 3af30e8a80c847c39b63533e60f1d006
msgid ""
"For the decentralized website part, we'll assume that you have some "
"familiarity with HTML and JavaScript. If you want to have more details, "
"you can follow `this great tutorial from React "
"<https://reactjs.org/tutorial/tutorial.html>`_ from which the dApp is "
"inspired from."
msgstr ""

#: ../../web3-dev/massa-web3.rst:36 49e491f4853c427395025d885c15f083
msgid ""
"Here you can find an example dApp for the :ref:`sum smart-contract <sc-"
"example-sum>`: `Massa DApp example: Sum <https://github.com/massalabs"
"/massa-sc-examples/tree/main/sum/frontend>`_."
msgstr ""

#: ../../web3-dev/massa-web3.rst:43 6350e2945249433ea66bcbc158cce102
msgid "Prerequisites:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:40 33151243a2994d89b7a77ae897759427
msgid ""
"having `Thyra <https://github.com/massalabs/thyra/>`_ installed and "
"running on your computer"
msgstr ""

#: ../../web3-dev/massa-web3.rst:41 3d0a3dc11b994966919034be3e44ac0c
msgid "having a wallet in Thyra"
msgstr ""

#: ../../web3-dev/massa-web3.rst:42 4f536c62eb364a19a3ee6bc88ff7270d
msgid "the wallet needs to own some Massa coins"
msgstr ""

#: ../../web3-dev/massa-web3.rst:43 72f00b583aa34f4988cd20bf51eb0ad3
msgid "having a smart contract :ref:`deployed <sending-sc-sum>`"
msgstr ""

#: ../../web3-dev/massa-web3.rst:45 c5ec84ccc83e41679fd446a1b3bfb251
msgid ""
"**Network**: as any blockchain is a network of nodes, there could be "
"practically several networks of different nodes. The main Massa network "
"is called the MainNet. There is also a TestNet which is ran by Massa Labs"
" team, where you can build applications without paying real Massa coins. "
"You can also run your own network, with only one node (see :ref:`local-"
"network-generation`)."
msgstr ""

#: ../../web3-dev/massa-web3.rst:51 82b2aacf6e5d46298a775588e4a8feef
msgid ""
"A decentralized application is an application running on a blockchain. "
"Even the frontend can be hosted on the blockchain with :ref:`web-on-chain"
" <web3-decentralized-web>`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:58 e34c392e1ca44eb1b547b07495820e9e
msgid "To build such application you will need to use some libraries:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:56 7d6833370c8f4b96aa19a6dbc9403dc4
msgid "`massa toolkit <https://github.com/massalabs/massa-sc-toolkit/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:57 280ad6b8f32b40a0819a6ae1774890b0
msgid "`massa assemblyscript sdk <https://github.com/massalabs/massa-as-sdk/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:58 ba8ad4b51b194eaf9c71ad10df4c009d
msgid "`massa javascript web3 <https://github.com/massalabs/massa-web3/>`_"
msgstr ""

#: ../../web3-dev/massa-web3.rst:60 baa68a09e70a4f4baa6a278b6dfc7602
msgid ""
"Then you will be able to build a frontend application that communicates "
"with Thyra's API to sign transactions and submit it to the blockchain."
msgstr ""

#: ../../web3-dev/massa-web3.rst:63 ef13ed28af1443ca9c09c69d857d3461
msgid "Then, use Thyra to deploy your frontend application."
msgstr ""

#: ../../web3-dev/massa-web3.rst:69 ef0325ca2a2342fb9dbeb1b3bd648b1f
msgid "Debugging"
msgstr ""

#: ../../web3-dev/massa-web3.rst:71 9cd928ec54fb467099314fbf213d5c93
msgid ""
"This section will give you some tips on how to debug your dapp while "
"building it."
msgstr ""

#: ../../web3-dev/massa-web3.rst:74 8560f8e2b82a4ff0be29433b606ab602
msgid "Work in a local development environment"
msgstr ""

#: ../../web3-dev/massa-web3.rst:76 f83886a92be341d7a0c12404f14ec3f3
msgid "Run :ref:`a local node <local-network-generation>`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:78 3fc292ca693d4085a631961811e84648
msgid "Start Thyra and bind it to your local node:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:84 d8428823fd154f9192236ecb940e038f
msgid "Create a new wallet in `Thyra <http://my.massa/thyra/wallet/index.html>`_."
msgstr ""

#: ../../web3-dev/massa-web3.rst:86 a09771e285c94877bea326551189c4e9
msgid "Modify the file `massa-node/base_config/initial_ledger.json`:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:98 6246670f7eb84dfcb3d2a93475cccece
msgid "to add some Massa tokens to your newly created address."
msgstr ""

#: ../../web3-dev/massa-web3.rst:100 be8446ccd6d54db3879c8cf7586c10ef
msgid "In your smart-contract projects, use this `.env` file:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:108 2f78fe21e9674bf18c8afe05b03bd9cc
msgid ""
"Use the private key that the node-client gave you when calling "
"`wallet_generate_secret_key`. This wallet also needs to have some Massa "
"coins, so it must appear in `massa-node/base_config/initial_ledger.json` "
"before running the node with `cd massa-node && cargo run --features "
"sandbox` in `massa <https://github.com/massalabs/massa>`_ directory."
msgstr ""

#: ../../web3-dev/massa-web3.rst:114 6395b1a70b7c4690b43426cab567c000
msgid ""
"Modify the file `massa/massa-client/base_config/config.toml` to the "
"localhost RPC:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:122 1ebe41289e564de28b156d23def852d3
msgid ""
"Start a client with the command `cargo run` in `massa/massa-client` "
"directory."
msgstr ""

#: ../../web3-dev/massa-web3.rst:124 32ffc8cddedc4b5f9586e7f69f654ed2
msgid ""
"You might want to sign transactions to call smart contracts in your "
"frontend application:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:155 6b08a13a7ebb4af9aac4405dadce022b
msgid ""
"This performs an HTTP POST call to Thyra, asking to create a transaction "
"that will call the function named `hello` of the smart contract located "
"at `A1nyzu9rJKnf2zz8F7mkM5d6ZoThnMuAtUdij9WmcwXWMWJFmEB` with the wallet "
"name `wallet`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:160 06f1e4afb4c2460ba76e659e957887d4
msgid ""
"This opens a password prompt and you will be able to see the response of "
"the call in the development tools of the browser. The response is the "
"operation id, for example "
"`2mLLkdKB4BY4hJQFNwGZ5oQVhky13EVZAwHJXCGQnd3FRHUoHw`."
msgstr ""

#: ../../web3-dev/massa-web3.rst:164 6d3c689ac677403296f6ffd7e0b6e25d
msgid "If the operation failed, the response will contain the details."
msgstr ""

#: ../../web3-dev/massa-web3.rst:166 ea986eeedc5e463fa078e7206a67a6ad
msgid ""
"Now you can now use commands of the node client to see the details of "
"your operation:"
msgstr ""

#: ../../web3-dev/massa-web3.rst:173 081ee76339184ff392522b5ac520265e
msgid "This will output something like"
msgstr ""

#: ../../web3-dev/massa-web3.rst:195 21467ed866ee47ba887bde31041aa983
msgid ""
"`target parameter` is empty because parameters are encoded into bytes so "
"it is unlikely to have printable characters."
msgstr ""

#: ../../web3-dev/massa-web3.rst:198 739f9451154148498918a16fff3b5ee9
msgid ""
"You can also see events emitted by your contract (assuming that your "
"contract is deployed at "
"`A1nyzu9rJKnf2zz8F7mkM5d6ZoThnMuAtUdij9WmcwXWMWJFmEB`):"
msgstr ""

#: ../../web3-dev/massa-web3.rst:215 e8fb0bc47c4e4330be477304ac97d59e
msgid "In this example the event message is `Sum (2, 3) = 5`."
msgstr ""

