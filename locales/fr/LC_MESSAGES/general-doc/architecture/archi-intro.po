# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized
# Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-12-05 11:13+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../general-doc/architecture/archi-intro.rst:5
#: 1725c48fe0ef49c08c811aae3fcfa366
msgid "Introduction"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:7
#: 981fdb6d981f46a288e20104191a7d45
msgid ""
"We will describe in this document the global architecture of a Massa "
"Node, from the ground up, and introduce relevant definitions and "
"concepts."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:9
#: 0dea6a5d94114faa89bb363579062a31
msgid ""
"The goal of the Massa network is to build a consensus between **nodes** "
"to gather and order **blocks** that contains ordered lists of "
"**operations**. An operation ultimate purpose once executed is to act as "
"transitions for the global network state, called the **ledger**."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:12
#: 3abeceed567b405dbd558cd7e42bd6c6
msgid ""
"Operations are produced by external clients and sent to the Massa network"
" via a node. Some operations are containing code to be run as **smart "
"contracts**, enabling complex programmatic modifications of the ledger. "
"Nodes will gather all the pending operations and group them to produce "
"blocks. Each block contains a finite set of operations, limited by the "
"fact that each block has a limited amount of space available to store "
"operations. Traditional blockchains will then typically link blocks one "
"after the other (including a hash of the previous block in the block "
"header), to materialize their temporal ordering. However, unlike "
"traditional blockchains, Massa blocks are not simply chained one after "
"the other, but organized into a more complex spatio-temporal structure, "
"which allows for parallelization and increased performances."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:20
#: fd45ca010e6540d2a92350ab1769f026
msgid ""
"Instead of one chain, there are several threads (T=32) of chains running "
"in parallel, with blocks equally spread on each thread over time, and "
"stored inside **slots** that are spaced at fixed time intervals:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:25
#: d8ca3cd1b9fa436f9d63d2de83159492
msgid ""
"The time between two slots located on the same thread is called a "
"**period** and lasts 16s (conventionally called :math:`t_0`). "
"Corresponding slots in threads are slightly shifted in time relative to "
"one another, by one period divided by the number of threads, which is "
"16s/32 = 0.5s, so that a period contains exactly 32 slots equally spaced "
"over the 32 threads. A **cycle** is defined as the succession of 128 "
"periods and so lasts a bit more than 34min. Periods are numbered by "
"increments of one, so can be used together with a thread number to "
"uniquely identify a block slot. Period 0 is the genesis and contains "
"genesis blocks with no parents."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:32
#: aa27de6f8e214bcdb0a5b6ff4653539b
msgid ""
"The job of the Massa nodes network is to essentially collectively fill up"
" slots with valid blocks. To do so, at each interval of 0.5s, a specific "
"node in the network is elected to be allowed to create a block (more "
"about the selection process below, and the proof of stake sybil "
"resistance mechanism), and will be rewarded if it creates a valid block "
"in time. It is also possible that a node misses its opportunity to create"
" the block, in which case the slot will remain empty (this is called a "
"**block miss**)."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:38
#: 70e262c7164343c79ca723fa82841554
msgid ""
"In traditional blockchains, blocks are simply referencing their unique "
"parent, forming a chain. In the case of Massa, each block is referencing "
"one parent block in each thread (so, 32 parents). Here is an example "
"illustrated with one particular block:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:44
#: 182b1f15e8434307b3dd31d1bc57a732
msgid ""
"Let's introduce some relevant definitions and concepts generally "
"necessary to understand how the Massa network operates. We will then "
"explain the node architecture and how the whole system works."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:48
#: 05f41fec43274fcf924fd2c65a7db5e0
msgid "Address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:50
#: 4b714581a1854592876ce3d215ec9f86
msgid ""
"Each account in Massa has a public and private key associated with it. "
"This is how messages can be signed and identity enforced."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:53
#: b6d00b44feb5401f92d7a46727c0b77f
msgid "The address of an account is simply the hash of its public key."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:56
#: 75ab1e1ba4f042e59d80caa117742b46
msgid "Ledger"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:58
#: 48e8ad7affe44dc69216af88b7ab85ac
msgid ""
"The ledger is a map that stores a global mapping between addresses and "
"information related to these addresses. It is replicated in each node and"
" the consensus building mechanism ensures that agreement on what "
"operations have been finalized (and in what order) will be reached over "
"the whole network. The ledger is the state of the Massa network, and "
"fundamentally operations (see below) are requests to modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:62
#: 957ceb8c06d244fc829eedc09b175d6e
msgid "The information stored in the ledger with each address is the following:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:65
#: 02b88a7582b14fa4bc4dbe1dfe4a0290
msgid "**Ledger information associated with each address**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: 56740430134142cda1b3d47109c297aa
msgid "``balance``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: 83fcfef0b02a45dabb092d699000379e
msgid "The amount of Massa coins owned by the address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: ../../general-doc/architecture/archi-intro.rst:147
#: 26903021a2474e0a9f3b9936cbd20d6c 9f6b98f37e6540bc99592aa16e64731c
msgid "``bytecode``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: 9eb5df5f7ae7485c861e5cbd7cc1b156
msgid ""
"When the address references a smart contract, this is the compiled code "
":raw-html:`<br/>` corresponding to the smart contract (typically contains"
" several functions that act as :raw-html:`<br/>` API entry points for the"
" smart contract)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: 25a9703c4b0647b0aff6874ebdd27519
msgid "``datastore``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: 1652bcccf5034faeb2fd68692523a5a1
msgid ""
"A key/value map that can store any persistent data related to a smart "
":raw-html:`<br/>` contract, its variables, etc"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:76
#: bcb7c425d51e4f1db88cadb3b616f92e
msgid "Smart Contract"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:78
#: 9291f325d6414b6c85b7e2008a6bfd2e
msgid ""
"Smart contracts are a piece of code that can be run inside the Massa "
"virtual machine and which can modify the ledger, accept incoming requests"
" through a public interface (via smart contract operations). One "
"particularity of Massa smart contracts compared to other blockchain smart"
" contracts is their ability to wake up by themselves independently of an "
"exterior request on their interface. This allows more autonomy and less "
"dependency on external centralized services."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:84
#: 841eb5027e3e4f3ba057d62d36f7115a
msgid ""
"Smart contracts are currently written in assemblyscript, a stricter "
"derivation from typescript, which is itself a type-safe version of "
"javascript. AssemblyScript compiles to web assembly bytecode (wasm). "
"Massa nodes Execution Module runs such bytecode. Smart contracts have "
"access to their own datastore, so they can modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:89
#: 7bec6997eff04dbdad6c5691584db9e7
msgid "Operation"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:91
#: 53c013c9816a42bbb5e161d8696fcdbf
msgid ""
"Fundamentally, the point of the Massa network is to gather, order and "
"execute operations, recorded inside blocks that are located in slots. "
"There are three types of operations: transactions, roll operations, and "
"smart contract code execution. The general structure of an operation is "
"the following, and the different types of operations differ by their "
"payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:96
#: 959fe7d9a1b0457faf4bccabf1963a8c
msgid "**Operation header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: ../../general-doc/architecture/archi-intro.rst:186
#: 5f4c8254a3ad4f0d90710eb357b4ece7 eff5cda6457b4adc8df75ae23b57e360
msgid "``creator_public_key``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: dfc03346cec942f68009fe0905ac1718
msgid "The public key of the operation creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: 7677351a16c84377bcb85f8e8e9f070b
msgid "``expiration_period``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: 9e76bfb5aa4c40e2875b1d74c3c7f04e
msgid "Period after which the operation is expired (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: 8e653a61ed7a4359aae70ab4b99c57ca
msgid "``fee``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: 62eea8130e1d43eab399240c89be3e62
msgid "The amount of fees the creator is willing to pay (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: cd815349b4214003913f88ddea569024
msgid "``type``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: 7ab7cf03a68d497da6e26adb8f4446cc
msgid ""
"The type of operation (from 0 to 4: transaction, rollbuy, :raw-"
"html:`<br/>` rollsell, executesc, callsc) (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: 8418e11189144bb6be7ced59464c7c39
msgid "``payload``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: c37f6756abc641eaa403a53b8a347fa6
msgid "The content of the operation (see below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: ../../general-doc/architecture/archi-intro.rst:191
#: 9aea2f75ab9d4e8bb5a32ae0fcc90c19 c4ae4141289d4f56a6b547de27832779
msgid "``signature``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: 33313cb721d0420a99971fdcb632c8f8
msgid ""
"signature of all the above with the private key of :raw-html:`<br/>` the "
"operation creator (64 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:109
#: 7f19d74b0229493bbcf17cd4ecad2104
msgid "Transactions operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:111
#: 7894339c3b5c4c38957052d918e3c909
msgid ""
"Transactions are operations that move native Massa coins between "
"addresses. Here is the corresponding payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:114
#: 5de3bbcddb0f4b69ad6950e35f846b83
msgid "**Transaction payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: df70c3695b5646f2a94ca2dbdad2a8f6
msgid "``amount``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: 031356d447a14cdf96abcd9c5f8b038c
msgid "The amount of coins to transfer (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: 4de55dbc12504386a515fd8bc21a98a8
msgid "``destination_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: 86ab7b5f9db847b98cec57065d73440c
msgid "The address of the recipient (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:121
#: fa94fd1b1d9749ee872e235077c36012
msgid "Buy/Sell Rolls operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:123
#: 4f70575597224d0dbaa2246685d9c554
msgid ""
"Rolls are staking tokens that participants can buy or sell with native "
"coins (more about staking below). This is done via special operations, "
"with a simple payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:127
#: 1b36ba2545b141fcbf5b6855ab442cfb
msgid "**Roll buy/sell payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: 5adba2ade0e949309f461760a49bf64d
msgid "``nb_of_rolls``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: d0ef9672254a4448bd359174699c3955
msgid "The number of rolls to buy or to sell (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:134
#: 729059959d57435d9a1b41f39f1ca547
msgid "Smart Contract operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:136
#: b53d151f6cf84cc9b672b7492b87fbd9
msgid ""
"Smart Contracts are pieces of code that can be run inside the Massa "
"virtual machine. There are two ways of calling for the execution of code:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:138
#: e6e6c9bdaab641d7a2e089c59292bd46
msgid "Direct execution of bytecode"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:140
#: bfa980e13d7d47529555e2abc838aa1a
msgid ""
"In this case, the code is provided in the operation payload and executed "
"directly:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:143
#: 4581d2483d5b4335bdd61aefa8a8dd89
msgid "**Execute SC payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:161
#: ab30d8b00a4a441a95e4bad241f357eb fd680ad1d8324d2a8075daaf148565b8
msgid "``max_gas``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:161
#: 1715507a5f9e41c2bb3f4fd97d4978f6 c68bd100054d4c0e821ad7cc7c82e576
msgid "The maximum gas spendable for this operation (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: 64d074221941448c98e4b58e52ba1ec9
msgid "``bytecode_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: 8be79f4059f544b2aa5ed015cb9ad84b
msgid "The length of the bytecode field (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:147
#: d53f485e34934231a75c500fd877649b
msgid "The bytecode to run (in the context of the caller address)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:148
#: 022d49637e694fe6b45ba59859ea9313
msgid "``datastore_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:148
#: 34d7157be265427cac13d8b9ecf58b55
msgid ""
"The number of the datastore keys (u64 varint), each record :raw-"
"html:`<br/>` is stored then one after the other after"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:150
#: 881f1d79c9a74e5182272c053b4eb9db
msgid "list of datastore records"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:150
#: 42f3b24ad912492f9c27da8629cd903a
msgid ""
"Concatenation of ``key_len`` (u8), ``key``, :raw-html:`<br/>` "
"``value_len`` (u64 varint), ``value``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:154
#: 8bd355a27007433fafbec038c6368bea
msgid "Smart Contract function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:156
#: e06a1c91dd2b4fecbc473f6c7c9f095f
msgid ""
"Here, the code is indirectly called via the call to an existing smart "
"contract function, together with the required parameters:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:159
#: 18893b2da71545e6ba9f4804474fd328
msgid "**Call SC**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:162
#: eac7e20775e8417c88eef9fe0a0bfe54
msgid "``coins``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:162
#: 2b93d9f1399546df8b2e8700e861e1e8
msgid "The coins transferred in the call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:163
#: 4aee22724ff1471f8110ee68b69ec948
msgid "``target_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:163
#: 6a24a3c6b05545ff8f5b20fbddec4c32
msgid "The address of the targeted smart contract (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: 1769ba15dee641199376ea1bf6abaad7
msgid "``function_name_length``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: 086776ea94b646dbb1cd571c22b2ffef
msgid "The length of the name of the function that is called (u8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: 477ee3dac2fa423d804b175c59e64b5f
msgid "``function_name``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: e960b87287b04ba98346945f24750979
msgid "The name of the function that is called (utf8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: aadeab343e6745c08dee671de77bdf1c
msgid "``param_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: b11cbede2dd34be293c0b0ca69908049
msgid "The number of parameters of the function call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: 4e34ef682b5949249fbdfec29fd931f1
msgid "``params``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: e64764e3399a423393c8e6558737eae1
msgid "The parameters of the function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:171
#: f4f7cf6a5fc9467f842ff4ada7cdb564
msgid "Block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:173
#: 7541da0b4dc3457f941d36361faea3b9
msgid ""
"A block is a data structure built by nodes and its function it to "
"aggregate several operations. As explained above, for each new slot that "
"becomes active, a particular node in the network is elected in a "
"deterministic way with the task of creating the block that will be stored"
" in that slot (more about this in the description of the Selector Module "
"below). A block from a given thread can only contain operations "
"originating from a `creator_public_key` whose hash's five first bits "
"designate the corresponding thread, thus implicitly avoiding collisions "
"in operations integrated into parallel threads."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:179
#: 6be7cfcb567d4fa7af748a4bfb476ddd
msgid "The content of a block is as follows:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:182
#: 72537cce767e4e61beb7294f81d35646
msgid "**Block header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:184
#: dce27bcfe5f648eba62401a6a10b207e
msgid "``slot``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:184
#: 5e81c6738a2e4f01a72e12239422aecc
msgid ""
"A description of the block slot, defined by a couple (period, thread) "
"that :raw-html:`<br/>` uniquely identify it"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:186
#: 476760bbfbf6408fb2f9189745c63889
msgid "The public key of the block creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:187
#: c65488c5f0454a62b940c00de02a9e34
msgid "``parents``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:187
#: bace807f917846c3a885f29b2b444710
msgid ""
"A list of the 32 parents of the block, one parent per thread (parent "
"blocks are :raw-html:`<br/>` identified by the block hash)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: b3f33b127da54aed80ff5672e15009d3
msgid "``endorsements``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: 5b389c0b708a4963914c5d2dfb900942
msgid ""
"A list of the 16 endorsements for the block (more about endorsements "
"below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:190
#: 03499771798c4691bd50928034fe19fe
msgid "``operations_hash``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:190
#: eca9cd3047c349f98276649360bba03b
msgid ""
"A hash of all the operations included in the block (=hash of the block "
"body below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:191
#: 6413de15ed1e4ab4b35f09421806062d
msgid "signature of all the above with the private key of the block creator"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:193
#: 847530c7d6f346b799c77d615c11405c
msgid "**Block body**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:195
#: cca61233b7be4fcdb97287d8ee653730
msgid "``operations``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:195
#: 478d235e5dd4440783f6640aefa87488
msgid "The list of all operations included in the block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:198
#: a0de825d680549918cbc13ee5784929c
msgid ""
"Endorsements are optional inclusion in the block, but their inclusion is "
"incentivized for block creators. They are validations of the fact that "
"the parent block on the thread of the block is the best parent that could"
" have been chosen, done by other nodes that have also been "
"deterministically selected via the proof of stake probability "
"distribution (see below). A comprehensive description of endorsements can"
" be found `here <https://docs.massa.net/en/latest/general-"
"doc/architecture/endorsements.html>`_, so we will not go further into "
"details in the context of this introduction."
msgstr ""

#~ msgid "``gas_price`` (soon deprecated)"
#~ msgstr ""

#~ msgid "The gas price (u64 varint)"
#~ msgstr ""

