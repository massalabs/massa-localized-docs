# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized
# Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-01-11 00:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../web3-dev/smart-contracts/sc-execution.rst:3
#: a00b31d47a4f4665833b4e1aa5975296
msgid "Smart-contract execution"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:6
#: 78ea954dff0341e09ce455356635a544
msgid "Introduction"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:8
#: 223a5aa0486346f3ae8b30d0f6c09b3d
msgid ""
"Massa introduces more options when it comes to meeting different "
"requirements for execution contexts. In particular, you are not limited "
"to the standard way of deploying smart contract, and then calling that "
"contract using a transaction."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:12
#: 7cd7515fc8ad488d824b3c140b770b61
msgid ""
"This documentation details the different possibilities regarding smart "
"contract execution, and how to use them so that you can choose the one "
"that most matches your use-case."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:15
#: c15d633c6ba2425a90deb0ecead10997
msgid ""
"You can find examples for the different ways to execute smart contracts "
"in the smart contract sdk `massa-web3 <https://github.com/massalabs"
"/massa-web3>`_."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:19
#: 72d00d8b47ba4ba7a03cf0adc6ff9fde
msgid "Different ways to execute smart contracts"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:22
#: 10cffa41ebd547228b335006d2ceb277
msgid "\"Execute Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:24
#: 96cdf99932d74ec8a9cb521ee0d7f908
msgid ""
"This operation allows to send a smart contract that will be executed on "
"the blockchain (not stored), that can perform all the state changes as a "
"normal smart contract. It's often the best way to deploy an other smart "
"contract using the operation datastore of the execute operation. Our "
"`deployer <https://github.com/massalabs/massa-sc-"
"toolkit/blob/main/packages/sc-deployer/src/index.ts>`_ uses this "
"operation to deploy smart contracts."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:31
#: 2d9e741ff9f64b6a9274c80a4918690d
msgid "\"Call Smart Contract\" operation"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:33
#: 80c7496f00754b3b8bc0d00a7f3a476c
msgid ""
"This operation allows you to call the function of a smart contract that "
"exists on the blockchain with specific parameters and coins."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:36
#: b445533e0c4c48b68c8a64a847b71d25
msgid ""
"An `example <https://github.com/massalabs/massa-web3#smart-contract-read-"
"and-write-calls>`_ in massa-web3 shows you how to make the call smart-"
"contract operation in JS/TS/NodeJS."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:40
#: e614ac35f2f24aeb9521a646c4a51cce
msgid "Read-only Execute and Call Smart Contract"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:42
#: 2925984a90cb46a4a9afe0ed977157f9
msgid ""
"Read-only execute will \"dry-run\" a smart contract, i.e. execute as per "
"normal, emitting its effects which can be read, but without propagating "
"them into a block."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:44
#: 16057eb11ab34785912756de46d610f4
msgid "Useful use-cases can include:"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:46
#: 63209a694f1549218bd936aa0709cd04
msgid ""
"\"Dry-running\" future operations to estimate what their costs will be, "
"and the state changes they imply"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:47
#: b66a0d5a82c5423292bfac21a1121fa4
msgid ""
"Obtaining information on a smart contract, including its current state "
"and stored data"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:49
#: 2d3a2d3d1d8f4103b04414fae500a768
msgid ""
"A concrete example using massa-web3 library compatible with JS/TS/NodeJS "
"can be found `here <https://github.com/massalabs/massa-web3#smart-"
"contract-read-and-write-calls>`_"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:52
#: 769fbb4ba28344afad116e56cd07d27e
msgid "Call in Smart-contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:54
#: 9fb43dceccc0410f830fa4ae64cb01c5
msgid ""
"Calling one smart contract from another is a feature provided by the "
"smart-contract Assembly Script SDK."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:56
#: 16c8fb4254084eeeaee7663825748ba1
msgid ""
"`this example <https://github.com/massalabs/massa-sc-"
"examples/blob/main/games/tictactoe/smart-contract/assembly/main.ts>` "
"describes the use of the `call` function to send coins from the call "
"source to the call destination."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:59
#: a45b89a26804412ca97ffbff42ede87b
msgid "Local Call in Smart Contract SDK"
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:61
#: b9ee7ec9b8534722b41846650d6d3584
msgid ""
"As the call function, you can also call a smart contract from the code of"
" an other one, but execute it in your current context."
msgstr ""

#: ../../web3-dev/smart-contracts/sc-execution.rst:64
#: 57a4097d01704cbba82f87f70194891b
msgid ""
"For example if the called smart contract uses the SDK function "
"`Storage.set(key, value)`, the value will be set in the storage of the "
"smart contract that made the call. The storage of the called smart "
"contract won't be affected."
msgstr ""

