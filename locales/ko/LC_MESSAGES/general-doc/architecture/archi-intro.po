# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized
# Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-02-09 00:51+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../general-doc/architecture/archi-intro.rst:5
#: 534f0685d200496da1a20ec7b3bdde74
msgid "Introduction"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:7
#: 7ce10256095541b2af8035c4b7707dcf
msgid ""
"We will describe in this document the global architecture of a Massa "
"Node, from the ground up, and introduce relevant definitions and "
"concepts."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:9
#: bd7b93b09705438e97aebd443db0bece
msgid ""
"The goal of the Massa network is to build a consensus between **nodes** "
"to gather and order **blocks** that contain ordered lists of "
"**operations**. An operation ultimate purpose once executed is to act as "
"transitions for the global network state, called the **ledger**."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:12
#: 03d1f7f7280c4b20b94804c923660eae
msgid ""
"Operations are produced by external clients and sent to the Massa network"
" via a node. Some operations are containing code to be run as **smart "
"contracts**, enabling complex programmatic modifications of the ledger. "
"Nodes will gather all the pending operations and group them to produce "
"blocks. Each block contains a finite set of operations, limited by the "
"fact that each block has a limited amount of space available to store "
"operations. Traditional blockchains will then typically link blocks one "
"after the other (including a hash of the previous block in the block "
"header), to materialize their temporal ordering. However, unlike "
"traditional blockchains, Massa blocks are not simply chained one after "
"the other, but organized into a more complex spatio-temporal structure, "
"which allows for parallelization and increased performances."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:20
#: a972021201ab460cb9bbbe9dab049a73
msgid ""
"Instead of one chain, there are several threads (T=32) of chains running "
"in parallel, with blocks equally spread on each thread over time, and "
"stored inside **slots** that are spaced at fixed time intervals:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:25
#: 1cabd15c0b59431ba894450eb8b1f6a8
msgid ""
"The time between two slots located on the same thread is called a "
"**period** and lasts 16s (conventionally called :math:`t_0`). "
"Corresponding slots in threads are slightly shifted in time relative to "
"one another, by one period divided by the number of threads, which is "
"16s/32 = 0.5s, so that a period contains exactly 32 slots equally spaced "
"over the 32 threads. A **cycle** is defined as the succession of 128 "
"periods and so lasts a bit more than 34min. Periods are numbered by "
"increments of one, so can be used together with a thread number to "
"uniquely identify a block slot. Period 0 is the genesis and contains "
"genesis blocks with no parents."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:32
#: 3e3f0a00f2fe44d6a9141e544cded90d
msgid ""
"The job of the Massa nodes network is to essentially collectively fill up"
" slots with valid blocks. To do so, at each interval of 0.5s, a specific "
"node in the network is elected to be allowed to create a block (more "
"about the selection process below, and the proof of stake sybil "
"resistance mechanism), and will be rewarded if it creates a valid block "
"in time. It is also possible that a node misses its opportunity to create"
" the block, in which case the slot will remain empty (this is called a "
"**block miss**)."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:38
#: 28699f5a72e848ec904104ab397794cd
msgid ""
"In traditional blockchains, blocks are simply referencing their unique "
"parent, forming a chain. In the case of Massa, each block is referencing "
"one parent block in each thread (so, 32 parents). Here is an example "
"illustrated with one particular block:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:44
#: 5ef5625a36924382b213b5cf2d371bcf
msgid ""
"Let's introduce some relevant definitions and concepts generally "
"necessary to understand how the Massa network operates. We will then "
"explain the node architecture and how the whole system works."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:48
#: b28cbafcfc884bdea31c405b5e41242c
msgid "Address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:50
#: a1b84414fd9046acbf95dc120a3ef3cf
msgid ""
"Each account in Massa has a public and private key associated with it. "
"This is how messages can be signed and identity enforced."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:53
#: 963c412b0fef4fcea3dbc885f9a4b303
msgid "The address of an account is simply the hash of its public key."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:56
#: 11455dd8f6e84bf798fef3b7de4a514e
msgid "Ledger"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:58
#: 261aa4171b8242559f9f6c3f4106973b
msgid ""
"The ledger is a map that stores a global mapping between addresses and "
"information related to these addresses. It is replicated in each node and"
" the consensus building mechanism ensures that agreement on what "
"operations have been finalized (and in what order) will be reached over "
"the whole network. The ledger is the state of the Massa network, and "
"fundamentally operations (see below) are requests to modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:62
#: 294d5e095a4c48889fd1fb6343063105
msgid "The information stored in the ledger with each address is the following:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:65
#: 857432c239e1429e81b94f95aee05130
msgid "**Ledger information associated with each address**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: 760b5a814f3a4293bf047f0bb8596a45
msgid "``balance``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:67
#: 57eb2c6be9dc4003aacef592563cb84e
msgid "The amount of Massa coins owned by the address"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: ../../general-doc/architecture/archi-intro.rst:147
#: 3fc2318b11e84dcc9b6e599e1ca4855d d058f72e3eb14baeb82033ce6c59b139
msgid "``bytecode``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:68
#: e27b4adfa0c24bad85108e3ace293b7f
msgid ""
"When the address references a smart contract, this is the compiled code "
":raw-html:`<br/>` corresponding to the smart contract (typically contains"
" several functions that act as :raw-html:`<br/>` API entry points for the"
" smart contract)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: 08d42529c9bb4a94aa1ae1d84de1088c
msgid "``datastore``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:70
#: 2abb3a6f15924390840ed249097b41e5
msgid ""
"A key/value map that can store any persistent data related to a smart "
":raw-html:`<br/>` contract, its variables, etc"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:76
#: fe961108d02e44e98cdde70f317997d2
msgid "Smart Contract"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:78
#: 092e4c3352634d6bab231e24627ca909
msgid ""
"Smart contracts are a piece of code that can be run inside the Massa "
"virtual machine and which can modify the ledger, accept incoming requests"
" through a public interface (via smart contract operations). One "
"particularity of Massa smart contracts compared to other blockchain smart"
" contracts is their ability to wake up by themselves independently of an "
"exterior request on their interface. This allows more autonomy and less "
"dependency on external centralized services."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:84
#: 9a319796f7fb461e86e32d4add9227f8
msgid ""
"Smart contracts are currently written in assemblyscript, a stricter "
"derivation from typescript, which is itself a type-safe version of "
"javascript. AssemblyScript compiles to web assembly bytecode (wasm). "
"Massa nodes Execution Module runs such bytecode. Smart contracts have "
"access to their own datastore, so they can modify the ledger."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:89
#: ec8f06ae0e42493f86d3b70ce21f1ef5
msgid "Operation"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:91
#: c46915bc82bf4bfcb59e9ad15c38008d
msgid ""
"Fundamentally, the point of the Massa network is to gather, order and "
"execute operations, recorded inside blocks that are located in slots. "
"There are three types of operations: transactions, roll operations, and "
"smart contract code execution. The general structure of an operation is "
"the following, and the different types of operations differ by their "
"payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:96
#: f920a51453134c47b7411a7208192d6f
msgid "**Operation header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: ../../general-doc/architecture/archi-intro.rst:186
#: 7eb6c67e454a4150a771d78260e53548 e0ba85d5a5844332b7f0a9fd21959b04
msgid "``creator_public_key``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:98
#: 8be4f36069ea40f893806cf59b0cbf58
msgid "The public key of the operation creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: b0c10d3386f440fb93642b3312be852f
msgid "``expiration_period``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:99
#: 982bd0ec8e5749b79f267770826b6fce
msgid "Period after which the operation is expired (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: a18936c621064e08be7d8a32d034f877
msgid "``fee``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:100
#: 2988b1d6d03941fd903b2057f80fdf5b
msgid "The amount of fees the creator is willing to pay (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: a055524d5b34435c95680cd210b54dc7
msgid "``type``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:101
#: f3c9f374ced4474ba0eef545f7ae0b16
msgid ""
"The type of operation (from 0 to 4: transaction, rollbuy, :raw-"
"html:`<br/>` rollsell, executesc, callsc) (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: f714f08333ad4b68bd5bcafa4c9f95a5
msgid "``payload``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:103
#: b31f258eaa7e4df7b9a8caa7235cb044
msgid "The content of the operation (see below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: ../../general-doc/architecture/archi-intro.rst:191
#: 013528541e4346858d9ec3c9c2367c75 a2e40bc189704463b641351f0a676776
msgid "``signature``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:104
#: 077d356d908a4ab79b6cd7aaa5af98db
msgid ""
"signature of all the above with the private key of :raw-html:`<br/>` the "
"operation creator (64 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:109
#: 1b967321977a46518a00e46f5ed63de8
msgid "Transactions operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:111
#: d1f6b9cc3a804e0182bd329151827996
msgid ""
"Transactions are operations that move native Massa coins between "
"addresses. Here is the corresponding payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:114
#: c61f2fa3eb7e41d384db443e60811292
msgid "**Transaction payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: 583f772bdf4a4f3181de958898c6163c
msgid "``amount``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:116
#: b2bffe02a35347c3b99a7fe8472c9e3e
msgid "The amount of coins to transfer (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: 58fd86dbb5e54480b4fa5943d6bb0078
msgid "``destination_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:117
#: 49a35663fc1e448bb36b132bf387538e
msgid "The address of the recipient (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:121
#: 4329bcce3e2f4acdaa647d69ab1c7b53
msgid "Buy/Sell Rolls operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:123
#: 403adef43ca74d8d9917f9de89d629a0
msgid ""
"Rolls are staking tokens that participants can buy or sell with native "
"coins (more about staking below). This is done via special operations, "
"with a simple payload:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:127
#: d5835715a6e84c6a9d55b5c23ba1751a
msgid "**Roll buy/sell payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: bb7f538bbde04eaaa3a611ba9367ebbf
msgid "``nb_of_rolls``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:129
#: 808eca2161ee4913933d64adcf7bc438
msgid "The number of rolls to buy or to sell (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:134
#: da714a11041e47c4ab5a2db07c2fe6e1
msgid "Smart Contract operations"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:136
#: 632b504820534dcbace1e8424d1e3834
msgid ""
"Smart Contracts are pieces of code that can be run inside the Massa "
"virtual machine. There are two ways of calling for the execution of code:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:138
#: cceec59a8d9e4cdca22db348f00483ba
msgid "Direct execution of bytecode"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:140
#: 1cf7c18f25964a9390516a71b672ae55
msgid ""
"In this case, the code is provided in the operation payload and executed "
"directly:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:143
#: 78400609bbc944c2bc9e16b4943b70e4
msgid "**Execute SC payload**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:161
#: 635413c631c24fcb8bf03c488243050d 9f232400361e42a799193cd1e595c442
msgid "``max_gas``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:145
#: ../../general-doc/architecture/archi-intro.rst:161
#: de977af30ecc40cfb7aecf46b3615f11 e54b967235554af3b47f732ec3c0add6
msgid "The maximum gas spendable for this operation (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: 312517ba8a524648a9a7bcd1887a887f
msgid "``bytecode_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:146
#: 99d850ffd8534c37a84a67c065457765
msgid "The length of the bytecode field (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:147
#: 88aacc4b48074cc4ba8473c32f430531
msgid "The bytecode to run (in the context of the caller address)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:148
#: db8d887ae2504b32af1659854fbe11df
msgid "``datastore_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:148
#: 1db656bafd00473dafe515483d6f684a
msgid ""
"The number of the datastore keys (u64 varint), each record :raw-"
"html:`<br/>` is stored then one after the other after"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:150
#: 75e1264ae55b44e2aef3014ee872fe05
msgid "list of datastore records"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:150
#: d9d2d8c0e1464bd1937d5a007ffd3c93
msgid ""
"Concatenation of ``key_len`` (u8), ``key``, :raw-html:`<br/>` "
"``value_len`` (u64 varint), ``value``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:154
#: 8d3b70e4c36f46b08252caebb85d003b
msgid "Smart Contract function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:156
#: 861a23c48c3c45db82338903c25425a4
msgid ""
"Here, the code is indirectly called via the call to an existing smart "
"contract function, together with the required parameters:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:159
#: 805bd994ad7541aba85b898a66bd2c1b
msgid "**Call SC**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:162
#: 6937ee1c0fa74eaca037f61b5eb6f914
msgid "``coins``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:162
#: 2d947d4c6b2a470798b5f8e33a001736
msgid "The coins transferred in the call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:163
#: 95126ea745864323a8291a0d3c8fae93
msgid "``target_address``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:163
#: 4f5f7c209faa4e409611cc13491deb13
msgid "The address of the targeted smart contract (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: 926589f9d4094a2a804f388b57e2ae76
msgid "``function_name_length``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:164
#: 40ea69bed27b4c7e88a4b3e9dc630a27
msgid "The length of the name of the function that is called (u8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: 8c904fca04454b11a0c9e62f1265b14c
msgid "``function_name``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:165
#: 3e06d1f82fc64c079752769a9bd18d72
msgid "The name of the function that is called (utf8)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: 6142e25b50fe4d3ba8b5847eb605859e
msgid "``param_len``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:166
#: 16298fcc751f48798928e838441d55e3
msgid "The number of parameters of the function call (u64 varint)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: 7d38a6e7b33b4509a3a93101d3c97ac0
msgid "``params``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:167
#: 2f5ec677d4584411958b57797571f21d
msgid "The parameters of the function call"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:171
#: 408ed25083be4fd99c1fa77b5095041c
msgid "Block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:173
#: 4a24c4266e6642d6847e8b8528e8ba8d
msgid ""
"A block is a data structure built by nodes and its function it to "
"aggregate several operations. As explained above, for each new slot that "
"becomes active, a particular node in the network is elected in a "
"deterministic way with the task of creating the block that will be stored"
" in that slot (more about this in the description of the Selector Module "
"below). A block from a given thread can only contain operations "
"originating from a `creator_public_key` whose hash's five first bits "
"designate the corresponding thread, thus implicitly avoiding collisions "
"in operations integrated into parallel threads."
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:179
#: e2f5f9db4b994c238055c588eb6b7fa0
msgid "The content of a block is as follows:"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:182
#: 55d8e9eec4aa4225ac4ddd364a7aabf1
msgid "**Block header**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:184
#: ba3de0586ba8431f91cec45e9010b006
msgid "``slot``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:184
#: acc85eb48ea742e69125cdb078f91618
msgid ""
"A description of the block slot, defined by a couple (period, thread) "
"that :raw-html:`<br/>` uniquely identify it"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:186
#: 99ba73c1daae47b190c010e782a490c9
msgid "The public key of the block creator (32 bytes)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:187
#: 44ddbde8a7e84a8d81a3d718a3efa987
msgid "``parents``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:187
#: 5e5da02f85a4452fb4fcbca3738a699c
msgid ""
"A list of the 32 parents of the block, one parent per thread (parent "
"blocks are :raw-html:`<br/>` identified by the block hash)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: 6d77d3db50f94bc09a6beab8fe28d7a2
msgid "``endorsements``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:189
#: c0b0323b60354bd99f584d62eae573ca
msgid ""
"A list of the 16 endorsements for the block (more about endorsements "
"below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:190
#: cc818f1f6ab24d4d9f443b6a6377f6a9
msgid "``operations_hash``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:190
#: 15cf04fcf9a44930a45103d1fd1c2c35
msgid ""
"A hash of all the operations included in the block (=hash of the block "
"body below)"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:191
#: 59c229ecaf144d2ebebc9974637c0048
msgid "signature of all the above with the private key of the block creator"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:193
#: 5e6817039e0c449994591fc5027f1b13
msgid "**Block body**"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:195
#: d9dbe58d66ff4d74b6783ed852238693
msgid "``operations``"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:195
#: 1b0544fc636149728cb93a21a88dd496
msgid "The list of all operations included in the block"
msgstr ""

#: ../../general-doc/architecture/archi-intro.rst:198
#: ff0f9f8e48344603ba7d693c960b9e0f
msgid ""
"Endorsements are optional inclusion in the block, but their inclusion is "
"incentivized for block creators. They are validations of the fact that "
"the parent block on the thread of the block is the best parent that could"
" have been chosen, done by other nodes that have also been "
"deterministically selected via the proof of stake probability "
"distribution (see below). A comprehensive description of endorsements can"
" be found `here <https://docs.massa.net/en/latest/general-"
"doc/architecture/endorsements.html>`_, so we will not go further into "
"details in the context of this introduction."
msgstr ""

#~ msgid ""
#~ "The goal of the Massa network is"
#~ " to build a consensus between "
#~ "**nodes** to gather and order **blocks**"
#~ " that contains ordered lists of "
#~ "**operations**. An operation ultimate purpose"
#~ " once executed is to act as "
#~ "transitions for the global network "
#~ "state, called the **ledger**."
#~ msgstr ""

