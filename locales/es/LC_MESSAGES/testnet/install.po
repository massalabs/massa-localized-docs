# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized
# Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-07-04 00:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../testnet/install.rst:4 97db8c3c57da4bfc92af612b7256926d
msgid "Installing a node"
msgstr ""

#: ../../testnet/install.rst:8 2323ca66467c4804ae3e91fdc9291a39
msgid ""
"Right now 4 cores and 8 GB of RAM should be enough to run a node, but it "
"might increase in the future. More info in the :ref:`FAQ <testnet-faq>`."
msgstr ""

#: ../../testnet/install.rst:13 06144fbf8fa04956b996e186f12215eb
msgid "From binaries (simple installation)"
msgstr ""

#: ../../testnet/install.rst:15 f7aff27df8ed40f8954091fe9fc9f398
msgid ""
"If you just wish to run a Massa node without compiling it yourself, you "
"can simply download the latest binary below and go the the next step: "
":ref:`Running a node <testnet-running>`."
msgstr ""

#: ../../testnet/install.rst:18 05bbc3ad279b4649b512217fea50b54c
msgid ""
"`Windows executable "
"<https://github.com/massalabs/massa/releases/download/TEST.23.2/massa_TEST.23.2_release_windows.zip>`_"
msgstr ""

#: ../../testnet/install.rst:20 1fff54ecd5a445d3a42a08fff7285d79
msgid ""
"`Linux binary "
"<https://github.com/massalabs/massa/releases/download/TEST.23.2/massa_TEST.23.2_release_linux.tar.gz>`_"
" - only works with libc2.28 at least (for example Ubuntu 20.04 and "
"higher)"
msgstr ""

#: ../../testnet/install.rst:22 63c1996d7845441d8ae0b97567d1e148
msgid ""
"`MacOS binary "
"<https://github.com/massalabs/massa/releases/download/TEST.23.2/massa_TEST.23.2_release_macos.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:25 0deeb1f3a31e4537b176d7782e84184d
msgid "From source code (advanced installation)"
msgstr ""

#: ../../testnet/install.rst:27 c444e01bb3644de9a4df96dd33f31240
msgid ""
"Otherwise, if you wish to run a Massa node from source code, here are the"
" steps to follow:"
msgstr ""

#: ../../testnet/install.rst:30 533f5697807a488fb009c272e1e530fb
msgid "On Ubuntu / MacOS"
msgstr ""

#: ../../testnet/install.rst:32 3e9895743cde42d9996f8ba1a82c7c33
msgid ""
"on Ubuntu, these libs must be installed: ``sudo apt install pkg-config "
"curl git build-essential libssl-dev libclang-dev cmake``"
msgstr ""

#: ../../testnet/install.rst:34 990e99c058da44f29290dbab5ffc912d
msgid "on MacOS: ``brew install llvm cmake``"
msgstr ""

#: ../../testnet/install.rst:35 79a4ceab32cc423382a941825760f425
msgid ""
"install `rustup <https://www.rust-lang.org/tools/install>`_: ``curl "
"--proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh``"
msgstr ""

#: ../../testnet/install.rst:37 f33ccc134ade4152824c2cccb6347fff
msgid "configure path: ``source $HOME/.cargo/env``"
msgstr ""

#: ../../testnet/install.rst:38 ../../testnet/install.rst:42
#: 082d2a53fe754d79ae97ac316a039b6c 3284ba8950c9419f8a2c6dc5b1ddbe3f
msgid "check rust version: ``rustc --version``"
msgstr ""

#: ../../testnet/install.rst:39 3ef1623f304d44a58f44e663c49cd11d
msgid ""
"install `nigthly <https://doc.rust-lang.org/edition-guide/rust-2018"
"/rustup-for-managing-rust-versions.html>`_: ``rustup toolchain install "
"nightly-2023-02-27``"
msgstr ""

#: ../../testnet/install.rst:41 aff4177598394d859034e8cefce1b5f7
msgid "set it as default: ``rustup default nightly-2023-02-27``"
msgstr ""

#: ../../testnet/install.rst:43 38e946a6c91c45608705408670f35841
msgid ""
"clone this repo: ``git clone --branch testnet "
"https://github.com/massalabs/massa.git``"
msgstr ""

#: ../../testnet/install.rst:46 195f9ff72cc347a0b38c900e8ba4b09b
msgid "On Windows"
msgstr ""

#: ../../testnet/install.rst:48 07de488d956d47b7a3c464e07bbfc228
msgid "**Set up your Rust environment**"
msgstr ""

#: ../../testnet/install.rst:50 a90713daee92491e8c77a51660a98eee
msgid ""
"On Windows, you should first follow the indications from Microsoft to be "
"able to run on a Rust environment `here <https://docs.microsoft.com/en-"
"gb/windows/dev-environment/rust/setup>`__."
msgstr ""

#: ../../testnet/install.rst:53 83a331376fbd4280910ce82fc53a1a9f
msgid "Install Visual Studio (recommended) or the Microsoft C++ Build Tools."
msgstr ""

#: ../../testnet/install.rst:54 8c49fd3b94a94915b5556f17f8cc7c6f
msgid ""
"Once Visual Studio is installed, click on C++ Build Tool. Select on the "
"right column called \"installation details\" the following packages:"
msgstr ""

#: ../../testnet/install.rst:57 c8f9222ffd18419b89cd591fe57d0cca
msgid "MSCV v142 -- VS 2019"
msgstr ""

#: ../../testnet/install.rst:58 5f12030ac07244439b85523378777883
msgid "Windows 10 SDK"
msgstr ""

#: ../../testnet/install.rst:59 3a6619608968427db43f0b8bd713f8f4
msgid "C++ CMake tools for Windows"
msgstr ""

#: ../../testnet/install.rst:60 17a41616dc394bc497974fe28bc3ad51
msgid "Testing Tools Core Feature"
msgstr ""

#: ../../testnet/install.rst:62 5a6384891f3a45a7a1ba10c3d1cae36a
msgid "Click install on the bottom right to download and install those packages"
msgstr ""

#: ../../testnet/install.rst:63 bc45e52f0ed94d3c8a97acabd1990548
msgid ""
"Install NASM : https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/ choose"
" win32 or win64 folder depending on your architecture and download then "
"launch the installer."
msgstr ""

#: ../../testnet/install.rst:65 47f594b0d36a48cf9c4f26bcc608c3c9
msgid ""
"Install `Chocolatey <https://docs.chocolatey.org/en-us/choco/setup>`_ and"
" run: ``choco install llvm cmake protoc``"
msgstr ""

#: ../../testnet/install.rst:66 1ccd9baf37d74e748c2cbfe748a56d11
msgid ""
"Install Rust, to be downloaded `here <https://www.rust-"
"lang.org/tools/install>`__"
msgstr ""

#: ../../testnet/install.rst:67 5a50fd9b91fb41fe858ae29f0aafbf67
msgid ""
"Install Git for windows, to be downloaded `here <https://git-"
"scm.com/download/win>`__"
msgstr ""

#: ../../testnet/install.rst:68 c3d47211f1cf4ebab769c3dbf5c76237
msgid ""
"Install install protoc in your PATH, to be downloaded `here "
"<https://github.com/protocolbuffers/protobuf/releases>`__"
msgstr ""

#: ../../testnet/install.rst:70 16d02a3d9ba24789877423410527d9a7
msgid "**Clone the Massa Git Repository**"
msgstr ""

#: ../../testnet/install.rst:72 d8b1f9fd854e4731b2fa917d1efb9717
msgid "Open Windows Power Shell"
msgstr ""

#: ../../testnet/install.rst:74 d9b10117b3bd420a88ff84ac487de64d
msgid ""
"Clone the latest distributed version: ``git clone --branch testnet "
"https://github.com/massalabs/massa.git``"
msgstr ""

#: ../../testnet/install.rst:75 62f54d0c7dae4a388c0661076d6f4678
msgid "Change default Rust to nightly: ``rustup default nightly-2023-02-27``"
msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly-2022-12-24`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly-2022-12-24`"
#~ msgstr ""

#~ msgid ""
#~ "Change default Rust to nightly: "
#~ ":code:`rustup default nightly-2022-12-24`"
#~ msgstr ""

#~ msgid "From binaries"
#~ msgstr ""

#~ msgid "From source code"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these libs must be "
#~ "installed: :code:`sudo apt install pkg-"
#~ "config curl git build-essential "
#~ "libssl-dev libclang-dev`"
#~ msgstr ""

#~ msgid "on MacOS: :code:`brew install llvm`"
#~ msgstr ""

#~ msgid ""
#~ "install `rustup <https://www.rust-"
#~ "lang.org/tools/install>`_: :code:`curl --proto "
#~ "'=https' --tlsv1.2 -sSf https://sh.rustup.rs |"
#~ " sh`"
#~ msgstr ""

#~ msgid "configure path: :code:`source $HOME/.cargo/env`"
#~ msgstr ""

#~ msgid "check rust version: :code:`rustc --version`"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly-2023-01-30`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly-2023-01-30`"
#~ msgstr ""

#~ msgid ""
#~ "clone this repo: :code:`git clone "
#~ "--branch testnet https://github.com/massalabs/massa.git`"
#~ msgstr ""

#~ msgid ""
#~ "Install `Chocolatey <https://docs.chocolatey.org/en-"
#~ "us/choco/setup>`_ and run: :code:`choco "
#~ "install llvm`"
#~ msgstr ""

#~ msgid ""
#~ "Clone the latest distributed version: "
#~ ":code:`git clone --branch testnet "
#~ "https://github.com/massalabs/massa.git`"
#~ msgstr ""

#~ msgid ""
#~ "Change default Rust to nightly: "
#~ ":code:`rustup default nightly-2023-01-30`"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: ``rustup toolchain install"
#~ " nightly-2023-01-30``"
#~ msgstr ""

#~ msgid "set it as default: ``rustup default nightly-2023-01-30``"
#~ msgstr ""

#~ msgid "Change default Rust to nightly: ``rustup default nightly-2023-01-30``"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid "Install thyra based on your OS"
#~ msgstr ""

#~ msgid ""
#~ "`ARM "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_darwin_arm64>`_"
#~ msgstr ""

#~ msgid ""
#~ "`AMD "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_darwin_amd64>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "server_linux_amd64>`_"
#~ msgstr ""

#~ msgid ""
#~ "Configure your VPS (if not done "
#~ "already) and go to `thyra home "
#~ "page <https://my.massa/thyra/home/>`_"
#~ msgstr ""

#~ msgid "Install the node-manager plugin"
#~ msgstr ""

#~ msgid "Add your VPS details and click on \"start\""
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these libs must be "
#~ "installed: ``sudo apt install pkg-config"
#~ " curl git build-essential libssl-dev"
#~ " libclang-dev``"
#~ msgstr ""

#~ msgid "on MacOS: ``brew install llvm``"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these tools and libs "
#~ "must be installed: ``sudo apt install"
#~ " pkg-config curl git build-essential"
#~ " libssl-dev libclang-dev protobuf-"
#~ "compiler``"
#~ msgstr ""

#~ msgid "on MacOS: ``brew install llvm protobuf``"
#~ msgstr ""

#~ msgid ""
#~ "Install `Chocolatey <https://docs.chocolatey.org/en-"
#~ "us/choco/setup>`_ and run: ``choco install "
#~ "llvm``"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.0/massa_TEST.22.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.0/massa_TEST.22.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.0/massa_TEST.22.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.1/massa_TEST.22.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.1/massa_TEST.22.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.1/massa_TEST.22.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.2/massa_TEST.22.2_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.2/massa_TEST.22.2_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.22.2/massa_TEST.22.2_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.23.0/massa_TEST.23.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.23.0/massa_TEST.23.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.23.0/massa_TEST.23.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.23.1/massa_TEST.23.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.23.1/massa_TEST.23.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.23.1/massa_TEST.23.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid "From thyra (most simple installation)"
#~ msgstr ""

#~ msgid ""
#~ "If you wish to run a Massa "
#~ "node with a couple of clicks only,"
#~ " you can download thyra app and "
#~ "activate the node-manager plugin. This"
#~ " will enable you to configure, "
#~ "install, start and even update a "
#~ "node using a simple graphical interface."
#~ " For that, there are 5 steps to"
#~ " follow:"
#~ msgstr ""

#~ msgid "Install thyra based on your OS:"
#~ msgstr ""

#~ msgid ""
#~ "`Windows "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_windows_amd64.exe>`_"
#~ msgstr ""

#~ msgid "MacOS"
#~ msgstr ""

#~ msgid ""
#~ "For Apple Silicon CPUs (M1, M2...), "
#~ "use `ARM "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_darwin_arm64.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "For Intel CPUs (i5, i7...), use "
#~ "`AMD "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_darwin_amd64.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_linux_amd64.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "Start thyra using the icon tray. "
#~ "If you need help, this `page "
#~ "<https://github.com/massalabs/thyra/blob/main/INSTALLATION.md>`_ "
#~ "can help."
#~ msgstr ""

#~ msgid ""
#~ "`Configure your VPS <https://github.com/massalabs"
#~ "/thyra-node-manager-plugin/wiki>`_ and go"
#~ " to `thyra home page "
#~ "<https://my.massa/thyra/home/>`_."
#~ msgstr ""

#~ msgid "Install the node-manager plugin."
#~ msgstr ""

#~ msgid "Add your VPS details and click on \"start\"."
#~ msgstr ""

#~ msgid "You're now a Massa node-runner!"
#~ msgstr ""

#~ msgid ""
#~ "If you have trouble following this "
#~ "procedure, feel free to `open a "
#~ "question <https://github.com/massalabs/thyra/issues/new>`_ "
#~ "describing your problem."
#~ msgstr ""

