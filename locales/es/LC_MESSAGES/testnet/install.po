# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, Massa Labs
# This file is distributed under the same license as the Massa Localized
# Docs package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Massa Localized Docs \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-05-04 00:48+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../testnet/install.rst:4 6d6798644b4b47ce97a4f2ae1b68f13a
msgid "Installing a node"
msgstr ""

#: ../../testnet/install.rst:8 98e40f0b467c47789215aa48fc485f90
msgid ""
"Right now 4 cores and 8 GB of RAM should be enough to run a node, but it "
"might increase in the future. More info in the :ref:`FAQ <testnet-faq>`."
msgstr ""

#: ../../testnet/install.rst:13 11dfe9b1647a43fe86ad3b18f615d210
msgid "From thyra (most simple installation)"
msgstr ""

#: ../../testnet/install.rst:15 870d358492ae48ad8a41a4fd29879db4
msgid ""
"If you wish to run a Massa node with a couple of clicks only, you can "
"download thyra app and activate the node-manager plugin. This will enable"
" you to configure, install, start and even update a node using a simple "
"graphical interface. For that, there are 5 steps to follow:"
msgstr ""

#: ../../testnet/install.rst:20 6870b885a5a44b6fbd1ea36455a5d897
msgid "Install thyra based on your OS:"
msgstr ""

#: ../../testnet/install.rst:22 e3f99bf7734f4bb7bbb4bffd420186a2
msgid ""
"`Windows <https://github.com/massalabs/thyra/releases/latest/download"
"/thyra-installer_windows_amd64.exe>`_"
msgstr ""

#: ../../testnet/install.rst:23 75af2a780d404a9dbf2ec91e6021a524
msgid "MacOS"
msgstr ""

#: ../../testnet/install.rst:25 429b53a96a5041c095eb30d18c3d4d64
msgid ""
"For Apple Silicon CPUs (M1, M2...), use `ARM "
"<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
"installer_darwin_arm64.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:27 95c2d5bfdc454556966c6302222bd4cb
msgid ""
"For Intel CPUs (i5, i7...), use `AMD "
"<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
"installer_darwin_amd64.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:30 4e5d97fef4b24ff5b48b70e67d28e844
msgid ""
"`Linux <https://github.com/massalabs/thyra/releases/latest/download"
"/thyra-installer_linux_amd64.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:32 04852331efa04b17a8450ba18a1717ba
msgid ""
"Start thyra using the icon tray. If you need help, this `page "
"<https://github.com/massalabs/thyra/blob/main/INSTALLATION.md>`_ can "
"help."
msgstr ""

#: ../../testnet/install.rst:34 6b720dd236d94eb4ab226d2a50109530
msgid ""
"`Configure your VPS <https://github.com/massalabs/thyra-node-manager-"
"plugin/wiki>`_ and go to `thyra home page "
"<https://my.massa/thyra/home/>`_."
msgstr ""

#: ../../testnet/install.rst:36 5ed281744aac42b6b125f4cfca689a17
msgid "Install the node-manager plugin."
msgstr ""

#: ../../testnet/install.rst:37 307189f0f4b340fba3885a57760facf1
msgid "Add your VPS details and click on \"start\"."
msgstr ""

#: ../../testnet/install.rst:39 ec827aa1892f4c0783b1f32c28e46e00
msgid "You're now a Massa node-runner!"
msgstr ""

#: ../../testnet/install.rst:42 209e50dc96404b0c8d6ca1d410f46caa
msgid ""
"If you have trouble following this procedure, feel free to `open a "
"question <https://github.com/massalabs/thyra/issues/new>`_ describing "
"your problem."
msgstr ""

#: ../../testnet/install.rst:47 49e4318d8255438b8483070869a0ffd4
msgid "From binaries (simple installation)"
msgstr ""

#: ../../testnet/install.rst:49 e6268378983243278c7d2585790d3c64
msgid ""
"If you just wish to run a Massa node without compiling it yourself, you "
"can simply download the latest binary below and go the the next step: "
":ref:`Running a node <testnet-running>`."
msgstr ""

#: ../../testnet/install.rst:52 6c6bdc27e2e9476e8431fc335804f22e
msgid ""
"`Windows executable "
"<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_windows.zip>`_"
msgstr ""

#: ../../testnet/install.rst:54 881104b4bef94884839713966889b846
msgid ""
"`Linux binary "
"<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_linux.tar.gz>`_"
" - only works with libc2.28 at least (for example Ubuntu 20.04 and "
"higher)"
msgstr ""

#: ../../testnet/install.rst:56 d9cbd38cad6140d69ed8502efdaab98c
msgid ""
"`MacOS binary "
"<https://github.com/massalabs/massa/releases/download/TEST.21.0/massa_TEST.21.0_release_macos.tar.gz>`_"
msgstr ""

#: ../../testnet/install.rst:59 cd7b75829fbf4680a1c5c81b83d7e4d0
msgid "From source code (advanced installation)"
msgstr ""

#: ../../testnet/install.rst:61 7a21f6e42a3e4b09aca9a27a367e8db3
msgid ""
"Otherwise, if you wish to run a Massa node from source code, here are the"
" steps to follow:"
msgstr ""

#: ../../testnet/install.rst:64 a77dd5d5eadb4f89a181d493c9d14ddc
msgid "On Ubuntu / MacOS"
msgstr ""

#: ../../testnet/install.rst:66 5ec8d772327d4f038709a73bf3a3cfd1
msgid ""
"on Ubuntu, these tools and libs must be installed: ``sudo apt install "
"pkg-config curl git build-essential libssl-dev libclang-dev protobuf-"
"compiler``"
msgstr ""

#: ../../testnet/install.rst:68 34bf24644f5c4f84b55f001d121bddf4
msgid "on MacOS: ``brew install llvm protobuf``"
msgstr ""

#: ../../testnet/install.rst:69 4dd231443b064ad494e98dd375ab5c95
msgid ""
"install `rustup <https://www.rust-lang.org/tools/install>`_: ``curl "
"--proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh``"
msgstr ""

#: ../../testnet/install.rst:71 c27f8731718e40d085952f6b138959f2
msgid "configure path: ``source $HOME/.cargo/env``"
msgstr ""

#: ../../testnet/install.rst:72 ../../testnet/install.rst:76
#: 385dca5ae32648febc9a9e864a65738a de5a3b517f784386a529b1974b498c80
msgid "check rust version: ``rustc --version``"
msgstr ""

#: ../../testnet/install.rst:73 2ed522a9a9e54b7bae1e640b59239a7b
msgid ""
"install `nigthly <https://doc.rust-lang.org/edition-guide/rust-2018"
"/rustup-for-managing-rust-versions.html>`_: ``rustup toolchain install "
"nightly-2023-02-27``"
msgstr ""

#: ../../testnet/install.rst:75 1034dc9e7e0f43a2a60c515752372c77
msgid "set it as default: ``rustup default nightly-2023-02-27``"
msgstr ""

#: ../../testnet/install.rst:77 52121c5f9ccf422db7ea716a92fbc3e3
msgid ""
"clone this repo: ``git clone --branch testnet "
"https://github.com/massalabs/massa.git``"
msgstr ""

#: ../../testnet/install.rst:80 b4f1de2c194c4194a18dc5aada2af908
msgid "On Windows"
msgstr ""

#: ../../testnet/install.rst:82 0d67294b6226425ba0efc52c141bd78d
msgid "**Set up your Rust environment**"
msgstr ""

#: ../../testnet/install.rst:84 3e74d42d2b894fcb851ba336cb584357
msgid ""
"On Windows, you should first follow the indications from Microsoft to be "
"able to run on a Rust environment `here <https://docs.microsoft.com/en-"
"gb/windows/dev-environment/rust/setup>`__."
msgstr ""

#: ../../testnet/install.rst:87 c99f20d4f94446e7b853fc06220531ad
msgid "Install Visual Studio (recommended) or the Microsoft C++ Build Tools."
msgstr ""

#: ../../testnet/install.rst:88 d41f2fe7bb1147eeae08c6a7d4977b9e
msgid ""
"Once Visual Studio is installed, click on C++ Build Tool. Select on the "
"right column called \"installation details\" the following packages:"
msgstr ""

#: ../../testnet/install.rst:91 5cef25a0f0604c2b8db3e50a2cea6f01
msgid "MSCV v142 -- VS 2019"
msgstr ""

#: ../../testnet/install.rst:92 82ed9073445c4494bb1da6bcb12ef9b9
msgid "Windows 10 SDK"
msgstr ""

#: ../../testnet/install.rst:93 03ea8bb32cba4ccbac28ac34cc5040c9
msgid "C++ CMake tools for Windows"
msgstr ""

#: ../../testnet/install.rst:94 cbf31a21697d4b239e2c8ba0411e2fac
msgid "Testing Tools Core Feature"
msgstr ""

#: ../../testnet/install.rst:96 3e2627e1bbc54986a99b36e725f1641d
msgid "Click install on the bottom right to download and install those packages"
msgstr ""

#: ../../testnet/install.rst:98 bea755978e7b4373a3b449a55da9e478
msgid ""
"Install `Chocolatey <https://docs.chocolatey.org/en-us/choco/setup>`_ and"
" run: ``choco install llvm``"
msgstr ""

#: ../../testnet/install.rst:99 7e5415ef8e3448feaed21c92d92e67bb
msgid ""
"Install Rust, to be downloaded `here <https://www.rust-"
"lang.org/tools/install>`__"
msgstr ""

#: ../../testnet/install.rst:100 87cb57aa4b7a4230ba5402eac57861e7
msgid ""
"Install Git for windows, to be downloaded `here <https://git-"
"scm.com/download/win>`__"
msgstr ""

#: ../../testnet/install.rst:101 cf596948f2e54ad2b229c8b7b5cd3843
msgid ""
"Install install protoc in your PATH, to be downloaded `here "
"<https://github.com/protocolbuffers/protobuf/releases>`__"
msgstr ""

#: ../../testnet/install.rst:103 820e7ef25471472a913083ba4581eb00
msgid "**Clone the Massa Git Repository**"
msgstr ""

#: ../../testnet/install.rst:105 6793a5a020cd4a97a4bbd0f466bb7b84
msgid "Open Windows Power Shell"
msgstr ""

#: ../../testnet/install.rst:107 4f57af1f2f1b4442b08494aecc24a436
msgid ""
"Clone the latest distributed version: ``git clone --branch testnet "
"https://github.com/massalabs/massa.git``"
msgstr ""

#: ../../testnet/install.rst:108 2031eebefbd44ac09ac3d3064c9a321f
msgid "Change default Rust to nightly: ``rustup default nightly-2023-02-27``"
msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.18.0/massa_TEST.18.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly-2022-12-24`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly-2022-12-24`"
#~ msgstr ""

#~ msgid ""
#~ "Change default Rust to nightly: "
#~ ":code:`rustup default nightly-2022-12-24`"
#~ msgstr ""

#~ msgid "From binaries"
#~ msgstr ""

#~ msgid "From source code"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.1/massa_TEST.19.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.2/massa_TEST.19.2_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these libs must be "
#~ "installed: :code:`sudo apt install pkg-"
#~ "config curl git build-essential "
#~ "libssl-dev libclang-dev`"
#~ msgstr ""

#~ msgid "on MacOS: :code:`brew install llvm`"
#~ msgstr ""

#~ msgid ""
#~ "install `rustup <https://www.rust-"
#~ "lang.org/tools/install>`_: :code:`curl --proto "
#~ "'=https' --tlsv1.2 -sSf https://sh.rustup.rs |"
#~ " sh`"
#~ msgstr ""

#~ msgid "configure path: :code:`source $HOME/.cargo/env`"
#~ msgstr ""

#~ msgid "check rust version: :code:`rustc --version`"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: :code:`rustup toolchain "
#~ "install nightly-2023-01-30`"
#~ msgstr ""

#~ msgid "set it as default: :code:`rustup default nightly-2023-01-30`"
#~ msgstr ""

#~ msgid ""
#~ "clone this repo: :code:`git clone "
#~ "--branch testnet https://github.com/massalabs/massa.git`"
#~ msgstr ""

#~ msgid ""
#~ "Install `Chocolatey <https://docs.chocolatey.org/en-"
#~ "us/choco/setup>`_ and run: :code:`choco "
#~ "install llvm`"
#~ msgstr ""

#~ msgid ""
#~ "Clone the latest distributed version: "
#~ ":code:`git clone --branch testnet "
#~ "https://github.com/massalabs/massa.git`"
#~ msgstr ""

#~ msgid ""
#~ "Change default Rust to nightly: "
#~ ":code:`rustup default nightly-2023-01-30`"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.19.3/massa_TEST.19.3_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.0/massa_TEST.20.0_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "install `nigthly <https://doc.rust-lang.org"
#~ "/edition-guide/rust-2018/rustup-for-managing-"
#~ "rust-versions.html>`_: ``rustup toolchain install"
#~ " nightly-2023-01-30``"
#~ msgstr ""

#~ msgid "set it as default: ``rustup default nightly-2023-01-30``"
#~ msgstr ""

#~ msgid "Change default Rust to nightly: ``rustup default nightly-2023-01-30``"
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.1/massa_TEST.20.1_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid "Install thyra based on your OS"
#~ msgstr ""

#~ msgid ""
#~ "`ARM "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_darwin_arm64>`_"
#~ msgstr ""

#~ msgid ""
#~ "`AMD "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "installer_darwin_amd64>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux "
#~ "<https://github.com/massalabs/thyra/releases/latest/download/thyra-"
#~ "server_linux_amd64>`_"
#~ msgstr ""

#~ msgid ""
#~ "Configure your VPS (if not done "
#~ "already) and go to `thyra home "
#~ "page <https://my.massa/thyra/home/>`_"
#~ msgstr ""

#~ msgid "Install the node-manager plugin"
#~ msgstr ""

#~ msgid "Add your VPS details and click on \"start\""
#~ msgstr ""

#~ msgid ""
#~ "`Windows executable "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_windows.zip>`_"
#~ msgstr ""

#~ msgid ""
#~ "`Linux binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_linux.tar.gz>`_"
#~ " - only works with libc2.28 at "
#~ "least (for example Ubuntu 20.04 and "
#~ "higher)"
#~ msgstr ""

#~ msgid ""
#~ "`MacOS binary "
#~ "<https://github.com/massalabs/massa/releases/download/TEST.20.2/massa_TEST.20.2_release_macos.tar.gz>`_"
#~ msgstr ""

#~ msgid ""
#~ "on Ubuntu, these libs must be "
#~ "installed: ``sudo apt install pkg-config"
#~ " curl git build-essential libssl-dev"
#~ " libclang-dev``"
#~ msgstr ""

#~ msgid "on MacOS: ``brew install llvm``"
#~ msgstr ""

